/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.egov.works.measurementbook.web.controller;

import java.util.List;

import javax.validation.Valid;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.egov.works.measurementbook.web.contract.ContractorBillRequest;
import org.egov.works.measurementbook.web.contract.ContractorBillResponse;
import org.egov.works.measurementbook.web.contract.ErrorRes;
import org.egov.works.measurementbook.web.contract.RequestInfo;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-11-19T06:59:20.916Z")

@Api(value = "contractorbills", description = "the contractorbills API")
public interface ContractorbillsApi {

    @ApiOperation(value = "Create new Contractor Bill(s).", notes = "To create new Contractor Bill in the system. API supports bulk creation with max limit as defined in the Contractor Bill Request. Please note that either whole batch succeeds or fails, there's no partial batch success. To create one Contractor Bill, please pass array with one Contractor Bill object.  To create Contractor Bill, there should be one or more MB's in approved status where Bills are not created already for the same MB. There can be multiple Contractor Bills for the same MB in case of MB's having Part Rate flagged activities. Contractor Bills are not allowed to create once the Final bill is generated for Letter of Acceptance Estimate/Work Order.  There can be more than one Part Bill for single Letter of Acceptance Estimate/Work Order. Only one Final bill will be there for single Letter of Acceptance Estimate/Work Order. Completion Date needs to be captured and Completion Certificate needs to be generated on Final Bill approval  The workflow will be there for Contractor Bill. Save as drafts also required.  The Debit account code is fetched from the Budget head of the correspodning Estimate. The Debit amount is the sum of the MB amount for which bill is created. The sum of debit and credit amount should be equal. There can be Statutory/Standard/Custom deductions along with Advance Adjustments and Retention Money deductions in contractor bill. The contractor net payeble account code will be fetched based on the purpose. ", response = ContractorBillResponse.class, tags={ "Contractor Bill", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Contractor Bill(s) created successfully", response = ContractorBillResponse.class),
        @ApiResponse(code = 400, message = "Contractor Bill(s) creation failed", response = ErrorRes.class) })
    
    @RequestMapping(value = "/contractorbills/_create",
        method = RequestMethod.POST)
    ResponseEntity<ContractorBillResponse> contractorbillsCreatePost(@ApiParam(value = "Details of new Contractor Bill(s) + RequestInfo meta data." ,required=true )  @Valid @RequestBody ContractorBillRequest contractorBillRequest);


    @ApiOperation(value = "Get the list of Contractor Bill(s) defined in the system.", notes = "Search and get Contractor Bill(s) based on defined search criteria. Currently search parameters are only allowed as HTTP query params.  Search results will be sorted by the sort Property Provided in the parameters ", response = ContractorBillResponse.class, tags={ "Contractor Bill", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Contractor Bill(s) Retrieved Successfully", response = ContractorBillResponse.class),
        @ApiResponse(code = 400, message = "Invalid input.", response = ErrorRes.class) })
    
    @RequestMapping(value = "/contractorbills/_search",
        method = RequestMethod.POST)
    ResponseEntity<ContractorBillResponse> contractorbillsSearchPost( @NotNull@ApiParam(value = "Unique id for a tenant.", required = true) @RequestParam(value = "tenantId", required = true) String tenantId,@ApiParam(value = "Parameter to carry Request metadata in the request body"  )  @Valid @RequestBody RequestInfo requestInfo, @Min(0) @Max(100)@ApiParam(value = "Number of records returned.", defaultValue = "20") @RequestParam(value = "pageSize", required = false, defaultValue="20") Integer pageSize,@ApiParam(value = "Page number", defaultValue = "1") @RequestParam(value = "pageNumber", required = false, defaultValue="1") Integer pageNumber,@ApiParam(value = "This takes any field from the Object seperated by comma and asc,desc keywords. example name asc,code desc or name,code or name,code desc", defaultValue = "id") @RequestParam(value = "sortBy", required = false, defaultValue="id") String sortBy, @Size(max=50)@ApiParam(value = "Comma separated list of Ids of Contractor Bills") @RequestParam(value = "ids", required = false) List<String> ids, @Size(max=50)@ApiParam(value = "Comma separated list of Letter of Acceptance Numbers") @RequestParam(value = "letterOfAcceptanceNumbers", required = false) List<String> letterOfAcceptanceNumbers,@ApiParam(value = "Epoch time from when bill is created") @RequestParam(value = "billFromDate", required = false) Long billFromDate,@ApiParam(value = "Epoch time till when bill is created") @RequestParam(value = "billToDate", required = false) Long billToDate, @Size(max=50)@ApiParam(value = "Comma separated list of bill types") @RequestParam(value = "billType", required = false) List<String> billType, @Size(max=50)@ApiParam(value = "Comma separated list of bill numbers") @RequestParam(value = "billNumbers", required = false) List<String> billNumbers, @Size(max=50)@ApiParam(value = "Comma separated list of Contractor Bill Status") @RequestParam(value = "statuses", required = false) List<String> statuses, @Size(max=50)@ApiParam(value = "Comma separated list of Work Identification Numbers") @RequestParam(value = "workIdentificationNumber", required = false) List<String> workIdentificationNumber, @Size(max=50)@ApiParam(value = "Comma separated list of contractor names") @RequestParam(value = "contractorNames", required = false) List<String> contractorNames, @Size(max=50)@ApiParam(value = "Comma separated list of department of the Contractor Bill") @RequestParam(value = "department", required = false) List<String> department,@ApiParam(value = "Boolean value to check whether its Spillover or not") @RequestParam(value = "spillOverFlag", required = false) Boolean spillOverFlag);


    @ApiOperation(value = "Update Contractor Bill(s).", notes = "To update Contractor Bill in the system. API supports bulk updation with max limit as defined in the Contractor Bill Request. Please note that either whole batch succeeds or fails, there's no partial batch success. To update one Contractor Bill, please pass array with one Contractor Bill object.    Only the creator can edit all the fields when the Contractor Bill in creator inbox(in Rejected status) or in drafts. Update during workflow will have all the fields readonly except few fields which are allowed to modify during each stage of workflow including Workflow Details. The status and workflow state will be updated during each stage of workflow approval. ", response = ContractorBillResponse.class, tags={ "Contractor Bill", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Contractor Bill(s) updated successfully", response = ContractorBillResponse.class),
        @ApiResponse(code = 400, message = "Contractor Bill(s) updation failed", response = ErrorRes.class) })
    
    @RequestMapping(value = "/contractorbills/_update",
        method = RequestMethod.POST)
    ResponseEntity<ContractorBillResponse> contractorbillsUpdatePost(@ApiParam(value = "Details of Contractor Bill(s) + RequestInfo meta data." ,required=true )  @Valid @RequestBody ContractorBillRequest contractorBillRequest);

}
