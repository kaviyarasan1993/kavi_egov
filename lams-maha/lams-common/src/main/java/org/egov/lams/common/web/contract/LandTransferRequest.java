/*
 * eGov Land Management
 * APIs for Land management module. This modules allows user to enter Proposal for Land Acquisition (create,update,search of required land acquisition), land possession,transfer of land to manage the land acquisitions within the ulb jurisdiction. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: pradeep@egovernments.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.egov.lams.common.web.contract;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import javax.validation.Valid;

import org.egov.common.contract.request.RequestInfo;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Contract class to receive request. Array of Land transfer items are used in case of create, whereas single Land transfer item is used for update
 */
@ApiModel(description = "Contract class to receive request. Array of Land transfer items are used in case of create, whereas single Land transfer item is used for update")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-27T06:13:58.089Z")
public class LandTransferRequest {
  @SerializedName("requestInfo")
  private RequestInfo requestInfo = null;

  @Valid
  @SerializedName("landTransfer")
  private List<LandTransfer> landTransfer = null;

  public LandTransferRequest requestInfo(RequestInfo requestInfo) {
    this.requestInfo = requestInfo;
    return this;
  }

   /**
   * Get requestInfo
   * @return requestInfo
  **/
  @ApiModelProperty(value = "")
  public RequestInfo getRequestInfo() {
    return requestInfo;
  }

  public void setRequestInfo(RequestInfo requestInfo) {
    this.requestInfo = requestInfo;
  }

  public LandTransferRequest landTransfer(List<LandTransfer> landTransfer) {
    this.landTransfer = landTransfer;
    return this;
  }

  public LandTransferRequest addLandTransferItem(LandTransfer landTransferItem) {
    if (this.landTransfer == null) {
      this.landTransfer = new ArrayList<LandTransfer>();
    }
    this.landTransfer.add(landTransferItem);
    return this;
  }

   /**
   * Used for search result and create only
   * @return landTransfer
  **/
  @ApiModelProperty(value = "Used for search result and create only")
  public List<LandTransfer> getLandTransfer() {
    return landTransfer;
  }

  public void setLandTransfer(List<LandTransfer> landTransfer) {
    this.landTransfer = landTransfer;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LandTransferRequest landTransferRequest = (LandTransferRequest) o;
    return Objects.equals(this.requestInfo, landTransferRequest.requestInfo) &&
        Objects.equals(this.landTransfer, landTransferRequest.landTransfer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestInfo, landTransfer);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LandTransferRequest {\n");
    
    sb.append("    requestInfo: ").append(toIndentedString(requestInfo)).append("\n");
    sb.append("    landTransfer: ").append(toIndentedString(landTransfer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

