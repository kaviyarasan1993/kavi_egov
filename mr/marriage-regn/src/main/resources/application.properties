#---------------------------- DATABASE CONFIGURATIONS -----------------------------#

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/persister
spring.datasource.username=postgres
spring.datasource.password=postgres

#--------------------------- PATH & PORT CONFIGURATIONS ---------------------------#

# SET CONTEXT PATH
server.contextPath=/marriage-regn
server.port = 8080

#---------------------------- TIMEZONE CONFIGURATIONS -----------------------------#

app.timezone=UTC

#------------------------------ KAFKA CONFIGURATIONS ------------------------------#

#Allottee APIs
egov.services.allottee_service.hostname=http://egov-micro-dev.egovernments.org
egov.services.allottee_service.basepath=/user
egov.services.allottee_service.searchpath=/_search
egov.services.allottee_service.createpath=/users/_createnovalidate

#hr-employee API
egov.services.employee_service.hostname=http://egov-micro-dev.egovernments.org/
egov.services.employee_service.searchpath=hr-employee/employees/{employeeId}/positions/_search
egov.services.employee_service.searchpath.pathvariable={employeeId}

egov.services.mr.workflow_initiator_position_key=lams_workflow_initiator_designation

# SPRING KAFKA SERVER CONFIGURATIONS
spring.kafka.bootstrap.servers=localhost:9092

# SPRING KAFKA CONSUMER CONFIGURATIONS
spring.kafka.consumer.value-deserializer=org.egov.tracer.kafka.deserializer.HashMapDeserializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id=mr-persist

# SPRING KAFKA PRODUCER CONFIGURATIONS
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# KAFKA TOPIC CONFIGURATIONS
kafka.topics.create.registrationunit=egov.regnunit.create
kafka.topics.update.registrationunit=egov.regnunit.update
kafka.key.registrationunit=registrationunit
kafka.topics.create.marriageregn=egov.marriageregn.create
kafka.topics.update.marriageregn=egov.marriageregn.update
kafka.key.marriageregn=marriageregn
kafka.key.marriagedocumenttype=marriagedocumenttype
kafka.topics.create.marriagedocumenttype=mr.marriagedocumenttype.create
kafka.topics.update.marriagedocumenttype=mr.marriagedocumenttype.update

kafka.topics.create.reissueofcertkey=egov-reissue-create-key
kafka.topics.create.reissueappl=egov-reissue-create
kafka.topics.update.reissueappl=egov-reissue-update
kafka.topics.update.reissueofcertkey=egov-reissue-update-key
kafka.topics.create.reissueCertificate=egov-reissueCertificate-create

kafka.topics.create.fee=egov-fee-create
kafka.topics.update.fee=egov-fee-update

kafka.topics.create.workflow=egov-mr-create-workflow
kafka.topics.update.workflow=egov-mr-update-workflow
#------------------------------------------------#
egov.mr.services.certnumber_sequence=seq_egmr_certificate_number
egov.mr.services.regnnumber_sequence=seq_egmr_regn_number
egov.mr.services.reissueApp_sequence=egmr_reissuecertificate_id
egov.mr.services.reissueCertificate_sequence=seq_egmr_marriage_certificate


#------------------------------------------------#
egov.mr.services.certnumber_sequence=seq_egmr_certificate_number
egov.mr.services.regnnumber_sequence=seq_egmr_regn_number

egov.services.standered.age=18

#------------------------------demandcreation------------------#

egov.marriageregn.property.fee.generated=property-create-fee-generated


#----------------------------- FLYWAY CONFIGURATIONS ------------------------------#
flyway.url=jdbc:postgresql://localhost:5432/persister
flyway.user=postgres
flyway.password=postgres
flyway.table=marriage_schema_version
flyway.baseline-on-migrate=true
flyway.outOfOrder=true
flyway.locations=db/migration/main
flyway.enabled=false

#logging.level.org.springframework.web=ERROR
logging.level.org.egov=DEBUG