server.port=8090
spring.main.web-environment=false
app.timezone=UTC

#Kafka producer
spring.kafka.bootstrap-servers=localhost:9092

#business key for workflow (Municipality)
egov.services.workflow_service.hostname.create_municipality_businesskey=Create Municipality Agreement
egov.services.workflow_service.hostname.renew_municipality_businesskey=Renew Municipality Agreement
egov.services.workflow_service.hostname.cancel_municipality_businesskey=Cancel Municipality Agreement
egov.services.workflow_service.hostname.evict_municipality_businesskey=Evict Municipality Agreement
egov.services.workflow_service.objection_municipality_businesskey=Objection Municipality Agreement
egov.services.workflow_service.judgement_municipality_businesskey=Judgement Municipality Agreement

#business key for workflow (Corporation)
egov.services.workflow_service.hostname.create_corporation_businesskey=Create Corporation Agreement
egov.services.workflow_service.hostname.renew_corporation_businesskey=Renew Corporation Agreement
egov.services.workflow_service.hostname.cancel_corporation_businesskey=Cancel Corporation Agreement
egov.services.workflow_service.hostname.evict_corporation_businesskey=Evict Corporation Agreement
egov.services.workflow_service.objection_corporation_businesskey=Objection Corporation Agreement
egov.services.workflow_service.judgement_corporation_businesskey=Judgement Corporation Agreement

#url for workflow services
egov.services.workflow_service.hostname=http://localhost
egov.services.workflow_service.startpath=/egov-common-workflows/process/_start
egov.services.workflow_service.searchpath=/egov-common-workflows/process/_search
egov.services.workflow_service.taskpath=/egov-common-workflows/tasks
egov.services.workflow_service.updatepath=/_update

# tenant service host
egov.services.tenant.host=http://tenant:8080/

egov.services.city.grade.corp=CORP

#kafka topic
kafka.topics.update.agreement=agreement-update-db
kafka.topics.save.agreement=agreement-save-db
kafka.topics.start.workflow=lams-workflow-start
kafka.topics.update.workflow=lams-workflow-update

#kafka tracer config
spring.kafka.consumer.value-deserializer=org.egov.lams.consumers.HashMapDeserializer
spring.kafka.consumer.group-id=lams-workflow-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#workflow status values
egov.services.workflow_service.status.advancepaid=Advance Paid
egov.services.workflow_service.status.rejected=Rejected
egov.services.workflow_service.status.assistantapproved=Assistant Approved
egov.services.workflow_service.agreement.status.rejected=REJECTED

logging.pattern.console=%clr(%X{CORRELATION_ID:-}) %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}


