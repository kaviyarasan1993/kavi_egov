spring.main.web-environment=false

#db config
spring.datasource.url=jdbc:postgresql://localhost:5432/devdb
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jackson.serialization.write-dates-as-timestamps=false

#flyway config
flyway.user=postgres
flyway.password=postgres
flyway.outOfOrder=true
flyway.table=collection_workflow_schema_version
flyway.baseline-on-migrate=true
flyway.url=jdbc:postgresql://localhost:5432/devdb
flyway.locations=db/migration/main,db/migration/seed

#kafka server config
spring.kafka.bootstrap.servers=localhost:9092

logging.pattern.console=%clr(%X{CORRELATION_ID:-}) %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}


#Workflow path config
egov.services.workflow_service.hostname=http://egov-micro-dev.egovernments.org
egov.services.workflow_service.startpath=/egov-common-workflows/process/_start
egov.services.workflow_service.searchpath=/egov-common-workflows/process/_search
egov.services.workflow_service.taskpath=/egov-common-workflows/tasks
egov.services.workflow_service.updatepath=/egov-common-workflows/tasks/{id}/_update
egov.services.workflow_service.endpath=/egov-common-workflows//process/_end


#kafka topic config
kafka.topics.receipt.create.name=egov.collection.receipt-create
kafka.topics.receipt.create.key=receipt-create

kafka.topics.receipt.update.name=egov.collection.receipt-update
kafka.topics.receipt.update.key=receipt-update

kafka.topics.workflow.start.name=egov.collection.workflow-start
kafka.topics.workflow.start.key=workflow-start

kafka.topics.workflow.update.name=egov.collection.workflow-update
kafka.topics.workflow.update.key=workflow-update

kafka.topics.update.receipt.workflowdetails=egov.collection.update.workflowdetails
kafka.topics.update.receipt.workflowdetails.key=workflow-update

#hotcoded params
businessType=ReceiptHeader
type=ReceiptHeader
create.receipt.comments=Receipt workflow started
action=APPROVED

spring.jpa.show-sql=true


# KAFKA CONSUMER CONFIGURATIONS
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.group-id=collection-persist
spring.kafka.consumer.value-deserializer=org.egov.collection.consumer.HashMapDeserializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer



# KAFKA PRODUCER CONFIGURATIONS
spring.kafka.producer.retries=0
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


user.service.host=http://localhost:8081/
egov.services.user_by_id=user/_search
egov.services.user.get_user_details=user/_details?access_token=
egov.services.user.get_user_by_username=user/_search
egov.collection.service.host=http://localhost:8095/
egov.collection.service.get_configurations=collection-services/collectionconfig/_search?tenantId={tenantId}&name={name}
egov.hremployee.hostname = http://egov-micro-dev.egovernments.org
positionforuser.get.uri = /hr-employee/employees/_search?tenantId={tenantId}&id={employeeId}
positionforuser.get.uri.append = /positions/_search

app.timezone=UTC



