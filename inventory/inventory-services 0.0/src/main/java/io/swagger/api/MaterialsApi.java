/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.0-SNAPSHOT).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.annotations.*;
import io.swagger.model.ErrorRes;
import io.swagger.model.MaterialRequest;
import io.swagger.model.MaterialResponse;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.util.List;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-10-28T13:21:55.964+05:30")

@Api(value = "materials", description = "the materials API")
public interface MaterialsApi {

    @ApiOperation(value = "Create  new  materials", nickname = "materialsCreatePost", notes = "Create  new materials", response = MaterialResponse.class, tags = {"Inventory", "Material",})
    @ApiResponses(value = {
            @ApiResponse(code = 201, message = "Material created Successfully", response = MaterialResponse.class),
            @ApiResponse(code = 400, message = "Invalid Input", response = ErrorRes.class)})
    @RequestMapping(value = "/materials/_create",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.POST)
    ResponseEntity<MaterialResponse> materialsCreatePost(@NotNull @ApiParam(value = "Unique id for a tenant.", required = true) @Valid @RequestParam(value = "tenantId", required = true) String tenantId, @ApiParam(value = "Create  new") @Valid @RequestBody MaterialRequest materialRequest, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;


    @ApiOperation(value = "Get the list of materials", nickname = "materialsSearchPost", notes = "materials", response = MaterialResponse.class, tags = {"Inventory", "Material",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Material retrieved Successfully", response = MaterialResponse.class),
            @ApiResponse(code = 400, message = "Invalid Input", response = ErrorRes.class)})
    @RequestMapping(value = "/materials/_search",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.POST)
    ResponseEntity<MaterialResponse> materialsSearchPost(@NotNull @ApiParam(value = "Unique id for a tenant.", required = true) @Valid @RequestParam(value = "tenantId", required = true) String tenantId, @ApiParam(value = "Parameter to carry Request metadata in the request body") @Valid @RequestBody org.egov.common.contract.request.RequestInfo requestInfo, @Size(max = 50) @ApiParam(value = "comma seperated list of Ids") @Valid @RequestParam(value = "ids", required = false) List<String> ids, @ApiParam(value = "code of the Material ") @Valid @RequestParam(value = "code", required = false) String code, @ApiParam(value = "store of the Material ") @Valid @RequestParam(value = "store", required = false) String store,@ApiParam(value = "name of the Material ") @Valid @RequestParam(value = "name", required = false) String name, @ApiParam(value = "description of the Material ") @Valid @RequestParam(value = "description", required = false) String description, @ApiParam(value = "old code of the Material ") @Valid @RequestParam(value = "oldCode", required = false) String oldCode, @ApiParam(value = "material type of the Material ") @Valid @RequestParam(value = "materialType", required = false) String materialType, @ApiParam(value = "base uom of the Material ") @Valid @RequestParam(value = "baseUom", required = false) Long baseUom, @ApiParam(value = "inventory type of the Material ", allowableValues = "Asset, Consumable") @Valid @RequestParam(value = "inventoryType", required = false) String inventoryType, @ApiParam(value = "status of the Material ", allowableValues = "Active, Withdrawn, Obsolete") @Valid @RequestParam(value = "status", required = false) String status, @ApiParam(value = "purchase uom of the Material ") @Valid @RequestParam(value = "purchaseUom", required = false) Long purchaseUom, @ApiParam(value = "expense account of the Material ") @Valid @RequestParam(value = "expenseAccount", required = false) Long expenseAccount, @ApiParam(value = "min quantity of the Material ") @Valid @RequestParam(value = "minQuantity", required = false) Long minQuantity, @ApiParam(value = "max quantity of the Material ") @Valid @RequestParam(value = "maxQuantity", required = false) Long maxQuantity, @ApiParam(value = "staocking uom of the Material ") @Valid @RequestParam(value = "staockingUom", required = false) Long staockingUom, @ApiParam(value = "material class of the Material ", allowableValues = "HighUsage, MediumUsage, LowUsage") @Valid @RequestParam(value = "materialClass", required = false) String materialClass, @ApiParam(value = "reorder level of the Material ") @Valid @RequestParam(value = "reorderLevel", required = false) Long reorderLevel, @ApiParam(value = "reorder quantity of the Material ") @Valid @RequestParam(value = "reorderQuantity", required = false) Long reorderQuantity, @ApiParam(value = "material control type of the Material ", allowableValues = "LOTControl, Shelf_life_Control") @Valid @RequestParam(value = "materialControlType", required = false) String materialControlType, @ApiParam(value = "model of the Material ") @Valid @RequestParam(value = "model", required = false) String model, @ApiParam(value = "manufacture part no of the Material ") @Valid @RequestParam(value = "manufacturePartNo", required = false) String manufacturePartNo, @ApiParam(value = "techincal specs of the Material ") @Valid @RequestParam(value = "techincalSpecs", required = false) String techincalSpecs, @ApiParam(value = "terms of delivery of the Material ") @Valid @RequestParam(value = "termsOfDelivery", required = false) String termsOfDelivery, @ApiParam(value = "override material control type of the Material ") @Valid @RequestParam(value = "overrideMaterialControlType", required = false) Boolean overrideMaterialControlType, @ApiParam(value = "pageSize") @Valid @RequestParam(value = "pageSize", required = false) Integer pageSize, @ApiParam(value = "offset") @Valid @RequestParam(value = "offset", required = false) Integer offset, @ApiParam(value = "This takes any field from the Object seperated by comma and asc,desc keywords.   example name asc,code desc or name,code or name,code desc  ") @Valid @RequestParam(value = "sortBy", required = false) String sortBy, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;


    @ApiOperation(value = "Update any of the materials", nickname = "materialsUpdatePost", notes = "Update any of the materials", response = MaterialResponse.class, tags = {"Inventory", "Material",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Material updated Successfully", response = MaterialResponse.class),
            @ApiResponse(code = 400, message = "Invalid Input", response = ErrorRes.class)})
    @RequestMapping(value = "/materials/_update",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.POST)
    ResponseEntity<MaterialResponse> materialsUpdatePost(@NotNull @ApiParam(value = "Unique id for a tenant.", required = true) @Valid @RequestParam(value = "tenantId", required = true) String tenantId, @ApiParam(value = "common Request info") @Valid @RequestBody MaterialRequest materialRequest, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;

}
