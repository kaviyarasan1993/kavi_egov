/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.0-SNAPSHOT).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import java.math.BigDecimal;
import io.swagger.model.ErrorRes;
import io.swagger.model.IndentRequest;
import io.swagger.model.IndentResponse;
import io.swagger.model.RequestInfo;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import java.io.IOException;

import java.util.List;
import org.springframework.validation.annotation.Validated;
import javax.validation.constraints.*;
import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-10-28T13:21:55.964+05:30")

@Api(value = "indents", description = "the indents API")
public interface IndentsApi {

    @ApiOperation(value = "Create  new  indents", nickname = "indentsCreatePost", notes = "Create  new indents", response = IndentResponse.class, tags={ "Inventory","Indent", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Indent created Successfully", response = IndentResponse.class),
        @ApiResponse(code = 400, message = "Invalid Input", response = ErrorRes.class) })
    @RequestMapping(value = "/indents/_create",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<IndentResponse> indentsCreatePost( @NotNull@ApiParam(value = "Unique id for a tenant.", required = true) @Valid @RequestParam(value = "tenantId", required = true) String tenantId,@ApiParam(value = "Create  new Indent"  )  @Valid @RequestBody IndentRequest indentRequest, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;


    @ApiOperation(value = "Get the list of indents", nickname = "indentsSearchPost", notes = "indents", response = IndentResponse.class, tags={ "Inventory","Indent", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Indent retrieved Successfully", response = IndentResponse.class),
        @ApiResponse(code = 400, message = "Invalid Input", response = ErrorRes.class) })
    @RequestMapping(value = "/indents/_search",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<IndentResponse> indentsSearchPost( @NotNull@ApiParam(value = "Unique id for a tenant.", required = true) @Valid @RequestParam(value = "tenantId", required = true) String tenantId,@ApiParam(value = "Parameter to carry Request metadata in the request body"  )  @Valid @RequestBody RequestInfo requestInfo, @Size(max=50)@ApiParam(value = "comma seperated list of Ids") @Valid @RequestParam(value = "ids", required = false) List<String> ids,@ApiParam(value = "issue store of the Indent ") @Valid @RequestParam(value = "issueStore", required = false) Long issueStore,@ApiParam(value = "indent date of the Indent ") @Valid @RequestParam(value = "indentDate", required = false) Long indentDate,@ApiParam(value = "indentNumber  Auto generated number, read only <ULB short code><Store Code><fin. Year><serial No.> ") @Valid @RequestParam(value = "indentNumber", required = false) String indentNumber,@ApiParam(value = "indent purpose of the Indent ", allowableValues = "Consumption, RepairsAndMaintenance, Capital, MaterialTransferNote") @Valid @RequestParam(value = "indentPurpose", required = false) String indentPurpose,@ApiParam(value = "description of the Indent ") @Valid @RequestParam(value = "description", required = false) String description,@ApiParam(value = "indent status of the Indent ", allowableValues = "CREATED, APPROVED, REJECTED, CANCELED") @Valid @RequestParam(value = "indentStatus", required = false) String indentStatus,@ApiParam(value = "totalIndentValue  denormalized value from Indent Material ") @Valid @RequestParam(value = "totalIndentValue", required = false) BigDecimal totalIndentValue,@ApiParam(value = "pageSize") @Valid @RequestParam(value = "pageSize", required = false) Integer pageSize,@ApiParam(value = "offset") @Valid @RequestParam(value = "offset", required = false) Integer offset,@ApiParam(value = "This takes any field from the Object seperated by comma and asc,desc keywords.   example name asc,code desc or name,code or name,code desc  ") @Valid @RequestParam(value = "sortBy", required = false) String sortBy, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;


    @ApiOperation(value = "Update any of the indents", nickname = "indentsUpdatePost", notes = "Update any of the indents", response = IndentResponse.class, tags={ "Inventory","Indent", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Indent updated Successfully", response = IndentResponse.class),
        @ApiResponse(code = 400, message = "Invalid Input", response = ErrorRes.class) })
    @RequestMapping(value = "/indents/_update",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<IndentResponse> indentsUpdatePost( @NotNull@ApiParam(value = "Unique id for a tenant.", required = true) @Valid @RequestParam(value = "tenantId", required = true) String tenantId,@ApiParam(value = "common Request info"  )  @Valid @RequestBody IndentRequest indentRequest, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;

}
