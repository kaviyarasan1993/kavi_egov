/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.egov.inv.api;

import io.swagger.annotations.*;
import org.egov.inv.model.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.util.List;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-12-14T09:31:14.044Z")

@Api(value = "materialtypestoremappings", description = "the materialtypestoremappings API")
public interface MaterialtypestoremappingsApi {

    @ApiOperation(value = "Create  new  material type store mappings", notes = "Create  new  material type store mappings", response = MaterialTypeStoreResponse.class, tags = {"MaterialTypeStoreMappings",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Material Type Store Mapping created Successfully", response = MaterialTypeStoreResponse.class),
            @ApiResponse(code = 400, message = "Invalid Input", response = ErrorRes.class)})

    @RequestMapping(value = "/materialtypestoremapping/_create",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.POST)
    ResponseEntity<MaterialTypeStoreResponse> materialtypestoremappingsCreatePost(@NotNull @ApiParam(value = "Unique id for a tenant.", required = true) @RequestParam(value = "tenantId", required = true) String tenantId, @ApiParam(value = "This object holds the Material Type Store Mapping information.") @Valid @RequestBody MaterialTypeStoreRequest materialtypestoreRequest);

    @ApiOperation(value = "Get the list of material store mappings", notes = "material store mappings", response = MaterialStoreMappingResponse.class, tags = {"MaterialStoreMappings",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Material Store Mapping retrieved Successfully", response = MaterialStoreMappingResponse.class),
            @ApiResponse(code = 400, message = "Invalid Input", response = ErrorRes.class)})

    @RequestMapping(value = "/materialtypestoremapping/_search",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.POST)
    ResponseEntity<MaterialTypeStoreResponse> materialstoremappingSearchPost(@NotNull @ApiParam(value = "Unique id for a tenant.", required = true) @RequestParam(value = "tenantId", required = true) String tenantId, @ApiParam(value = "Parameter to carry Request metadata in the request body") @Valid @RequestBody org.egov.common.contract.request.RequestInfo requestInfo, @Size(max = 50) @ApiParam(value = "comma seperated list of Ids") @RequestParam(value = "ids", required = false) List<String> ids, @ApiParam(value = "material type code of material type store mapping ") @RequestParam(value = "materialType", required = false) String materialType, @ApiParam(value = "store code of material store mapping ") @RequestParam(value = "store", required = false) String store, @ApiParam(value = "active flag of material store mapping ") @RequestParam(value = "active", required = false) Boolean active, @Min(0) @Max(100) @ApiParam(value = "Number of records returned.", defaultValue = "20") @RequestParam(value = "pageSize", required = false, defaultValue = "20") Integer pageSize, @ApiParam(value = "offset") @RequestParam(value = "offset", required = false) Integer offset, @ApiParam(value = "Page number", defaultValue = "1") @RequestParam(value = "pageNumber", required = false, defaultValue = "1") Integer pageNumber, @ApiParam(value = "This takes any field from the Object seperated by comma and asc,desc keywords. example name asc,code desc or name,code or name,code desc", defaultValue = "id") @RequestParam(value = "sortBy", required = false, defaultValue = "id") String sortBy, @RequestHeader(value = "Accept", required = false) String accept, BindingResult errors) throws Exception;


    @ApiOperation(value = "Update any of the material type store mappings", notes = "Update any of the material type store mappings", response = MaterialTypeStoreResponse.class, tags = {"MaterialTypeStoreMappings",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Material Type Store Mapping updated Successfully", response = MaterialTypeStoreResponse.class),
            @ApiResponse(code = 400, message = "Invalid Input", response = ErrorRes.class)})

    @RequestMapping(value = "/materialtypestoremapping/_update",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.POST)
    ResponseEntity<MaterialTypeStoreResponse> materialtypestoremappingsUpdatePost(@NotNull @ApiParam(value = "Unique id for a tenant.", required = true) @RequestParam(value = "tenantId", required = true) String tenantId, @ApiParam(value = "common Request info") @Valid @RequestBody MaterialTypeStoreRequest materialtypestoreRequest);

}
