# File Store API
swagger: '2.0'
info:
  title: File strore API's
  description: API's to create and get files by filestor id and tag
  version: "1.0.0"
# will be prefixed to all paths
basePath: /filestore
produces:
  - FILE
paths:
  /v1/files/id:
    get:
      summary: Get files by filestore id
      description: |
       Get files by filesstore id.
      parameters:
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
        - name: fileStoreId
          in: query
          description: filestore id for a file.
          required: true
          type: string
          format: varchar
        - name : module
          in : query
          description : module name for file
          type : string
          format : varchar
      tags:
        - Files
      responses:
        200:
          description: File resource object with details
          schema:
            type: object
            items:
              $ref: '#/definitions/Resource'
        '400':
          description: tenantId,filestore or module id is not present
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: tenantId,filestore or module id provided were not found
          schema:
            $ref: '#/definitions/Error'
  /v1/files:
    post:
      summary: Store files
      description: |
        Create files for different modules.
      consumes :
            - multipart/form-data
      parameters:
        - name: file
          in: formData
          description: File Object to store
          required: true
          type : file
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
        - name : module
          in : query
          description : Name of module to store file.
          type : string
          format : varchar
        - name : tag
          in : query
          description : Unique tag name for files.
          type : string
          format : varchar
      tags:
        - Files
      responses:
        200:
          description: StorageResponse with file details like filestore Id etc
          schema:
            type: object
            items:
                $ref: '#/definitions/StorageResponse'
        '400':
          description: tenantId,module or file data is not present
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: tenantId,module or file data is not present
          schema:
            $ref: '#/definitions/Error'
  /v1/files/tag:
    post:
      summary: Retrieve files by unique tag name
      description: |
        Retrieve files by unique tag name.
      parameters:
        - name: tag
          in: query
          description: Unique tag name for files
          required: true
          type : string
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
        - name : module
          in : query
          description : Name of madule for files
          type : string
          format : varchar

      tags:
        - Files
      responses:
        200:
          description: Retrive file content and url by tag name
          schema:
            type: object
            items:
                $ref: '#/definitions/GetFilesByTagResponse'
        '400':
          description: tenantId,module or file data is not present
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: tenantId,module or file data is not present
          schema:
            $ref: '#/definitions/Error'

definitions:
  StorageResponse:
    type: object
    properties:
      files:
        type: array
        items:
          $ref: '#/definitions/File'
      responseInfo :
        type: object
        items :
          $ref: '#/definitions/ResponseInfo'
  Resource :
    type : object
    properties :
      contentType :
        type : string
        description : File content type
      fileName :
        type : string
        description : Name of the file
      Resource :
        type : string
        description : InputStreamSource from package org.springframework.core.io.Resource
  GetFilesByTagResponse:
    type : object
    properties :
      files :
        type : array
        items :
          $ref: '#/definitions/FileRecord'
  FileRecord:
    type : object
    properties :
      url :
        type : string
        description : file url stored
      contentType :
        type : string
        description : content type of file
  File:
    type: object
    properties:
      fileStoreId:
        type: string
        description: Unique filestore id across modules.

  RequestInfo :
    type: object
    properties:
      apiId :
         type: string
         description: unique API ID.
      ver :
         type : string
         description :  API version.
      ts :
         type : string
         description : response timestamp YYYY-MM-DDThh:mm:ss+/-nn:nn (timezone defaulted to +5.30) .
      action :
         type : string
         description: api action like GET/POST/PUT/DELETE in case of http calls.
      did :
         type : string
         description : device UUID from which API is called.
      key :
         type : string
         description : API key (dynamic).
      msgId :
         type : string
         description : unique request message id, UUID, for handling API idempotency.
      requesterId :
         type : string
         description : UserId of the user calling.
      authToken :
         type : string
         description : //session/jwt/saml token/oauth token.
    required :
       - apiId
       - ver
       - ts
  ResponseInfo :
    type : object
    properties :
      apiId :
        type : string
        description : unique API ID.
      ver :
        type : string
        description : .
      ts :
        type : string
        description : response timestamp YYYY-MM-DDThh:mm:ss+/-nn:nn (timezone defaulted to +5.30).
      resMsgId :
        type : string
        description : unique response message id (UUID).
      msgId :
        type : string
        description : message id of the request.
      status :
        type : string
        description : status of request e.g. successful, failed etc.
    required :
        - apiId
        - ver
        - ts
        - status

  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
