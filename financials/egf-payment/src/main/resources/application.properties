server.port=8880
server.context-path=/egf-payment

app.timezone=UTC

persist.through.kafka=yes

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/egf-payment
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.tomcat.default-read-only=false


#Kafaka general config
spring.kafka.consumer.value-deserializer=org.egov.common.queue.HashMapDeserializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id=egf-voucher
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer 

flyway.user=postgres
flyway.password=postgres
flyway.outOfOrder=false
flyway.table=egf_payment_schema_version
flyway.baseline-on-migrate=false
flyway.url=jdbc:postgresql://localhost:5432/egf-payment

fetch_data_from=db

es.host=localhost
es.transport.port=9300
es.cluster.name=docker-cluster

logging.pattern.console=%clr(%X{CORRELATION_ID:-}) %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}