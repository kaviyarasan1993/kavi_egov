#Set context root
server.contextPath=/tl-masters

#Kafka configuration

auto.offset.reset.config=earliest
spring.kafka.bootstrap.servers=${spring.embedded.kafka.brokers}
#spring.embedded.kafka.brokers=${spring.embedded.kafka.brokers}
spring.embedded.kafka.brokers=embededkafkabroker


#database configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=postgres

#application properties
invalid.input=tradelicense.INVALID_INPUT
duplicate.documentType.name=Found duplicate DocumentType name, please provide another DocumentType Name
duplicate.uom.code=Found duplicate UOM code, please provide another UOM code
duplicate.uom.name=Found duplicate UOM name, please provide another UOM name
duplicate.category.code=Found duplicate Category code, please provide another Category code
duplicate.category.name=Found duplicate Category name, please provide another Category Name
duplicate.subcategory.name=Found duplicate SubCategory name, please provide another SubCategory Name
egov.tradelicense.subcategory.inactive.msg=cannot mark this category as inactive, As there are active subcategories under this category
duplicate.subcategory.code=Found duplicate SubCategory code, please provide another SubCategory code
duplicate.subcategory.detail=Found duplicate SubCategory detail, please provide another SubCategory detail
duplicate.businessnature.code=Found duplicate BusinessNature code, please provide another BusinessNature code
duplicate.feematrix.code=Found duplicate Feematrix code, please provide another Feematrix code
duplicate.code=tradelicense.RECORD_ALREADY_EXISTS_WITH_CODE
duplicate.name =tradelicense.RECORD_ALREADY_EXISTS_WITH_NAME
already.exists.uom.code=tradelicense.UOM_RECORD_ALREADY_EXISTS_WITH_CODE
already.exists.uom.name=tradelicense.UOM_RECORD_ALREADY_EXISTS_WITH_NAME
already.exists.category.code=tradelicense.CATEGORY_RECORD_ALREADY_EXISTS_WITH_CODE
already.exists.category.name=tradelicense.CATEGORY_RECORD_ALREADY_EXISTS_WITH_NAME
already.exists.subcategory.code=tradelicense.SUBCATEGORY_RECORD_ALREADY_EXISTS_WITH_CODE
already.exists.subcategory.name=tradelicense.SUBCATEGORY_RECORD_ALREADY_EXISTS_WITH_NAME
duplicate.license.status=Found duplicate license, please provide another license status
error.documenttype.category=Category is required , please enter Valid Category
error.documenttype.subcategory=Sub Category is required , please enter Valid Sub Category

invlaid.duplicate.categorydetail=Duplicate Category Detail Found
invalid.category.type=cannot create category with SubCategory details
invalid.category.id.msg=category id may be null or not valid
invalid.category.validityYears.msg=ValidityYears  may be empty or not valid
invalid.documenttype.id.msg=documenttype id may be null or not valid
invalid.license.status.id.msg=license status id may be null or not valid
invalid.uom.id.msg=provided uom id is not valid
invalid.uom.msg=provided uom is not valid
invalid.parent.id.msg=provided parent is not valid
invalid.sequence.range.msg=provided sequence ranges are not valid
invalid.applicationtype.msg=provided application type is not valid
invalid.financialyear.msg=provided financial year is not valid
invalid.range.code=tradelicense.INVALID_RANGE
invalid.from.range.code=fromRange can not be greater than toRange
invalid.rate.application.type=Rates Already defined for the application type
duplicate.penalty.rate=found duplicate penaltyRate
spring.jackson.serialization.write-dates-as-timestamps=false
egov.category.validityYears.nullcheck.msg=provided ValidityYear is not valid, and that should be null or zero.
success.status=SUCCESSFUL
failed.status=FAILED

#Pagination place holders
default.page.size=30
default.page.number=1
default.offset=0



#financial year service
egov.services.egf-masters.hostname=http://egov-micro-dev.egovernments.org/
egov.services.egf-masters.basepath=egf-masters/
egov.services.egf-masters.searchpath=financialyears/_search

#Kafka Topics
egov.tradelicense.category.create.validated=category-create-validated
egov.tradelicense.category.update.validated=category-update-validated
egov.tradelicense.uom.create.validated=uom-create-validated
egov.tradelicense.uom.update.validated=uom-update-validated
egov.tradelicense.feematrix.create.validated=feematrix-create-validated
egov.tradelicense.feematrix.update.validated=feematrix-update-validated
egov.tradelicense.documenttype.create.validated=documenttype-create-validated
egov.tradelicense.documenttype.update.validated=documenttype-update-validated
egov.tradelicense.penaltyrate.create.validated=penaltyrate-create-validated
egov.tradelicense.penaltyrate.update.validated=penaltyrate-update-validated
egov.tradelicense.licensestatus.create.validated=licensestatus-create-validated
egov.tradelicense.licensestatus.update.validated=licensestatus-update-validated
egov.tradelicense.documenttypev2.create.validated=documenttypev2-create-validated
egov.tradelicense.documenttypev2.update.validated=documenttypev2-update-validated
document.create.success.status.message=Legacy documenttype(s) created successfully, with documenttype Number(s) {documenttypes}
document.update.success.status.message=documenttype(s) updated successfully, with documenttype Number(s) {documenttypesNumbers}
error.document.types.notfound=No Document found, Please provide valid Documents
error.document.types.empty= Document found empty, Please provide valid Documents

#profiles
spring.profiles.active=production

app.timezone=UTC


spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id=tl-masters
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#logging
logging.pattern.console=%clr(%X{CORRELATION_ID:-}) %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}

#flyway configuration
flyway.user=postgres
flyway.password=postgres
flyway.outOfOrder=true
flyway.baseline-on-migrate=true
flyway.url=jdbc:postgresql://localhost:5432/postgres
flyway.locations=db/migration/main
invalid.category.id.message=provided category/subcategoryid does not Exists.
invalid.input.id.msg=id should be passed for updating.
invalid.input.id.tenantid.msg=Record with given id and tenantid does not exists.
invalid.financialyear.error.msg=Record with given Financial year does not exists.
duplicate.feematrix.record=Rates Already defined for the financial year.
egov.tradelicense.feematrix.validated=feematrix-validated
egov.tradelicense.feematrix.create.validated.key=feematrix-create-validated
egov.tradelicense.feematrix.update.validated.key=feematrix-update-validated
egov.tradelicense.feematrix.validated.group=feematrix-validated-group
egov.tradelicense.feematrix.validated.id=feematrix-validated-id
egov.tradelicense.feematrixdetail.delete.validated.key=feematrixdetail-delete-validated
egov.tradelicense.endpoint.exception.msg=Unable to get data from financial year service.
error.feematrix.details.id.notfound.msg=Record with given feematrix details id does not exists.
egov.tradelicense.invalid.feematrix.msg=Provided feematrix record is not valid.