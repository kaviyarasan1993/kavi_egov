'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _RaisedButton = require('material-ui/RaisedButton');

var _RaisedButton2 = _interopRequireDefault(_RaisedButton);

var _reactBootstrap = require('react-bootstrap');

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _showFields = require('./showFields');

var _showFields2 = _interopRequireDefault(_showFields);

var _egovCommonUtility = require('egov-common-utility');

var _jsonpath = require('jsonpath');

var _jsonpath2 = _interopRequireDefault(_jsonpath);

var _UiButton = require('./components/UiButton');

var _UiButton2 = _interopRequireDefault(_UiButton);

var _utility = require('./utility/utility');

var _UiTable = require('./components/UiTable');

var _UiTable2 = _interopRequireDefault(_UiTable);

var _UiBackButton = require('./components/UiBackButton');

var _UiBackButton2 = _interopRequireDefault(_UiBackButton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var specifications = {};

var reqRequired = [];

var Report = function (_Component) {
  _inherits(Report, _Component);

  function Report(props) {
    _classCallCheck(this, Report);

    var _this = _possibleConstructorReturn(this, (Report.__proto__ || Object.getPrototypeOf(Report)).call(this, props));

    _this.getVal = function (path, isDate) {
      var val = _lodash2.default.get(_this.props.formData, path);

      if (isDate && val && ((val + "").length == 13 || (val + "").length == 12) && new Date(Number(val)).getTime() > 0) {
        var _date = new Date(Number(val));
        return ('0' + _date.getDate()).slice(-2) + '/' + ('0' + (_date.getMonth() + 1)).slice(-2) + '/' + _date.getFullYear();
      }
      return typeof val != "undefined" && (typeof val == "string" || typeof val == "number" || typeof val == "boolean") ? val === true ? "Yes" : val === false ? "No" : val + "" : "";
    };

    _this.printer = function () {
      var mywindow = window.open('', 'PRINT', 'height=400,width=600');

      var cdn = '\n     <!-- Latest compiled and minified CSS -->\n     <link rel="stylesheet" media="all" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">\n\n     <!-- Optional theme -->\n     <link rel="stylesheet" media="all" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">  ';
      mywindow.document.write('<html><head><title> </title>');
      mywindow.document.write(cdn);
      mywindow.document.write('</head><body>');
      mywindow.document.write(document.getElementById('printable').innerHTML);
      mywindow.document.write('</body></html>');

      mywindow.document.close(); // necessary for IE >= 10
      mywindow.focus(); // necessary for IE >= 10*/

      setTimeout(function () {
        mywindow.print();
        mywindow.close();
      }, 1000);

      return true;
    };

    return _this;
  }

  _createClass(Report, [{
    key: 'setLabelAndReturnRequired',
    value: function setLabelAndReturnRequired(configObject) {
      if (configObject && configObject.groups) {
        for (var i = 0; configObject && i < configObject.groups.length; i++) {
          configObject.groups[i].label = (0, _egovCommonUtility.translate)(configObject.groups[i].label);
          for (var j = 0; j < configObject.groups[i].fields.length; j++) {
            configObject.groups[i].fields[j].label = (0, _egovCommonUtility.translate)(configObject.groups[i].fields[j].label);
          }

          if (configObject.groups[i].children && configObject.groups[i].children.length) {
            for (var k = 0; k < configObject.groups[i].children.length; k++) {
              this.setLabelAndReturnRequired(configObject.groups[i].children[k]);
            }
          }
        }
      }
    }
  }, {
    key: 'setInitialUpdateChildData',
    value: function setInitialUpdateChildData(form, children) {
      var _form = JSON.parse(JSON.stringify(form));
      for (var i = 0; i < children.length; i++) {
        for (var j = 0; j < children[i].groups.length; j++) {
          if (children[i].groups[j].multiple) {
            var arr = _lodash2.default.get(_form, children[i].groups[j].jsonPath);
            var ind = j;
            var _stringifiedGroup = JSON.stringify(children[i].groups[j]);
            var regex = new RegExp(children[i].groups[j].jsonPath.replace("[", "\[").replace("]", "\]") + "\\[\\d{1}\\]", 'g');
            for (var k = 1; k < arr.length; k++) {
              j++;
              children[i].groups[j].groups.splice(ind + 1, 0, JSON.parse(_stringifiedGroup.replace(regex, children[i].groups[ind].jsonPath + "[" + k + "]")));
              children[i].groups[j].groups[ind + 1].index = ind + 1;
            }
          }

          if (children[i].groups[j].children && children[i].groups[j].children.length) {
            this.setInitialUpdateChildData(form, children[i].groups[j].children);
          }
        }
      }
    }
  }, {
    key: 'hideField',
    value: function hideField(specs, moduleName, actionName, hideObject) {
      if (hideObject.isField) {
        for (var i = 0; i < specs[moduleName + "." + actionName].groups.length; i++) {
          for (var j = 0; j < specs[moduleName + "." + actionName].groups[i].fields.length; j++) {
            if (hideObject.name == specs[moduleName + "." + actionName].groups[i].fields[j].name) {
              specs[moduleName + "." + actionName].groups[i].fields[j].hide = true;
              break;
            }
          }
        }
      } else {
        var flag = 0;
        for (var _i = 0; _i < specs[moduleName + "." + actionName].groups.length; _i++) {
          if (hideObject.name == specs[moduleName + "." + actionName].groups[_i].name) {
            flag = 1;
            specs[moduleName + "." + actionName].groups[_i].hide = true;
            break;
          }
        }

        if (flag == 0) {
          for (var _i2 = 0; _i2 < specs[moduleName + "." + actionName].groups.length; _i2++) {
            if (specs[moduleName + "." + actionName].groups[_i2].children && specs[moduleName + "." + actionName].groups[_i2].children.length) {
              for (var _j = 0; _j < specs[moduleName + "." + actionName].groups[_i2].children.length; _j++) {
                for (var k = 0; k < specs[moduleName + "." + actionName].groups[_i2].children[_j].groups.length; k++) {
                  if (hideObject.name == specs[moduleName + "." + actionName].groups[_i2].children[_j].groups[k].name) {
                    specs[moduleName + "." + actionName].groups[_i2].children[_j].groups[k].hide = true;
                    break;
                  }
                }
              }
            }
          }
        }
      }
    }
  }, {
    key: 'showField',
    value: function showField(specs, moduleName, actionName, showObject) {
      if (showObject.isField) {
        for (var i = 0; i < specs[moduleName + "." + actionName].groups.length; i++) {
          for (var j = 0; j < specs[moduleName + "." + actionName].groups[i].fields.length; j++) {
            if (showObject.name == specs[moduleName + "." + actionName].groups[i].fields[j].name) {
              specs[moduleName + "." + actionName].groups[i].fields[j].hide = false;
              break;
            }
          }
        }
      } else {
        var flag = 0;
        for (var _i3 = 0; _i3 < specs[moduleName + "." + actionName].groups.length; _i3++) {
          if (showObject.name == specs[moduleName + "." + actionName].groups[_i3].name) {
            flag = 1;
            specs[moduleName + "." + actionName].groups[_i3].hide = false;
            break;
          }
        }

        if (flag == 0) {
          for (var _i4 = 0; _i4 < specs[moduleName + "." + actionName].groups.length; _i4++) {
            if (specs[moduleName + "." + actionName].groups[_i4].children && specs[moduleName + "." + actionName].groups[_i4].children.length) {
              for (var _j2 = 0; _j2 < specs[moduleName + "." + actionName].groups[_i4].children.length; _j2++) {
                for (var k = 0; k < specs[moduleName + "." + actionName].groups[_i4].children[_j2].groups.length; k++) {
                  if (showObject.name == specs[moduleName + "." + actionName].groups[_i4].children[_j2].groups[k].name) {
                    specs[moduleName + "." + actionName].groups[_i4].children[_j2].groups[k].hide = false;
                    break;
                  }
                }
              }
            }
          }
        }
      }
    }
  }, {
    key: 'setInitialUpdateData',
    value: function setInitialUpdateData(form, specs, moduleName, actionName, objectName) {
      var setMockData = this.props.setMockData;

      var _form = JSON.parse(JSON.stringify(form));
      var ind;
      for (var i = 0; i < specs[moduleName + "." + actionName].groups.length; i++) {
        if (specs[moduleName + "." + actionName].groups[i].multiple) {
          var arr = _lodash2.default.get(_form, specs[moduleName + "." + actionName].groups[i].jsonPath);
          ind = i;
          var _stringifiedGroup = JSON.stringify(specs[moduleName + "." + actionName].groups[i]);
          var regex = new RegExp(specs[moduleName + "." + actionName].groups[i].jsonPath.replace(/\[/g, "\\[").replace(/\]/g, "\\]") + "\\[\\d{1}\\]", 'g');
          for (var j = 1; j < arr.length; j++) {
            i++;
            specs[moduleName + "." + actionName].groups.splice(ind + 1, 0, JSON.parse(_stringifiedGroup.replace(regex, specs[moduleName + "." + actionName].groups[ind].jsonPath + "[" + j + "]")));
            specs[moduleName + "." + actionName].groups[ind + 1].index = ind + 1;
          }
        }

        for (var j = 0; j < specs[moduleName + "." + actionName].groups[i].fields.length; j++) {
          if (specs[moduleName + "." + actionName].groups[i].fields[j].showHideFields && specs[moduleName + "." + actionName].groups[i].fields[j].showHideFields.length) {
            for (var k = 0; k < specs[moduleName + "." + actionName].groups[i].fields[j].showHideFields.length; k++) {
              if (specs[moduleName + "." + actionName].groups[i].fields[j].showHideFields[k].ifValue == _lodash2.default.get(form, specs[moduleName + "." + actionName].groups[i].fields[j].jsonPath)) {
                if (specs[moduleName + "." + actionName].groups[i].fields[j].showHideFields[k].hide && specs[moduleName + "." + actionName].groups[i].fields[j].showHideFields[k].hide.length) {
                  for (var a = 0; a < specs[moduleName + "." + actionName].groups[i].fields[j].showHideFields[k].hide.length; a++) {
                    this.hideField(specs, moduleName, actionName, specs[moduleName + "." + actionName].groups[i].fields[j].showHideFields[k].hide[a]);
                  }
                }

                if (specs[moduleName + "." + actionName].groups[i].fields[j].showHideFields[k].show && specs[moduleName + "." + actionName].groups[i].fields[j].showHideFields[k].show.length) {
                  for (var a = 0; a < specs[moduleName + "." + actionName].groups[i].fields[j].showHideFields[k].show.length; a++) {
                    this.showField(specs, moduleName, actionName, specs[moduleName + "." + actionName].groups[i].fields[j].showHideFields[k].show[a]);
                  }
                }
              }
            }
          }
        }

        if (specs[moduleName + "." + actionName].groups[ind || i].children && specs[moduleName + "." + actionName].groups[ind || i].children.length) {
          this.setInitialUpdateChildData(form, specs[moduleName + "." + actionName].groups[ind || i].children);
        }
      }

      setMockData(specs);
    }
  }, {
    key: 'initData',
    value: function initData() {
      try {
        var hash = window.location.hash.split("/");
        if (hash.length == 4) {
          specifications = process.env.NODE_ENV === "production" ? require('egov-' + hash[2] + '/specifications/' + hash[2] + '.specs').default : require('../../' + hash[2] + '/lib/specifications/' + hash[2] + '.specs').default;
        } else {
          specifications = process.env.NODE_ENV === "production" ? require('egov-' + hash[2] + '/specifications/master/' + hash[3]).default : require('../../' + hash[2] + '/lib/specifications/master/' + hash[3]).default;
        }
      } catch (e) {}

      var _props = this.props,
          setMetaData = _props.setMetaData,
          setModuleName = _props.setModuleName,
          setActionName = _props.setActionName,
          setMockData = _props.setMockData;

      var hashLocation = window.location.hash;
      var self = this;
      var obj = specifications[hashLocation.split("/")[2] + '.' + hashLocation.split("/")[1]];
      self.setLabelAndReturnRequired(obj);
      setMetaData(specifications);
      setMockData(JSON.parse(JSON.stringify(specifications)));
      setModuleName(hashLocation.split("/")[2]);
      setActionName(hashLocation.split("/")[1]);
      //Get view form data
      var url = specifications[hashLocation.split("/")[2] + '.' + hashLocation.split("/")[1]].url.split("?")[0];
      var hash = window.location.hash.split("/");
      var value = decodeURIComponent(self.props.match.params.id);
      var query = _defineProperty({}, specifications[hashLocation.split("/")[2] + '.' + hashLocation.split("/")[1]].url.split("?")[1].split("=")[0], value);
      //handle 2nd parameter
      if (specifications[hashLocation.split("/")[2] + '.' + hashLocation.split("/")[1]].url.split("?")[1].split("=")[2]) {
        var _query2;

        var pval = specifications[hashLocation.split("/")[2] + '.' + hashLocation.split("/")[1]].url.split("?")[1].split("=")[2];
        var pname = specifications[hashLocation.split("/")[2] + '.' + hashLocation.split("/")[1]].url.split("?")[1].split("=")[1].split('&')[1];

        query = (_query2 = {}, _defineProperty(_query2, specifications[hashLocation.split("/")[2] + '.' + hashLocation.split("/")[1]].url.split("?")[1].split("=")[0], value), _defineProperty(_query2, pname, pval), _query2);
      }

      if (window.location.href.indexOf("?") > -1) {

        var qs = window.location.href.split("?")[1];
        if (qs && qs.indexOf("=") > -1) {
          qs = qs.indexOf("&") > -1 ? qs.split("&") : [qs];
          for (var i = 0; i < qs.length; i++) {
            query[qs[i].split("=")[0]] = qs[i].split("=")[1];
          }
        }
      }

      _egovCommonUtility.Api.commonApiPost(url, query, {}, false, specifications[hashLocation.split("/")[2] + '.' + hashLocation.split("/")[1]].useTimestamp).then(function (res) {
        self.props.setFormData(res);
        self.setInitialUpdateData(res, JSON.parse(JSON.stringify(specifications)), hashLocation.split("/")[2], hashLocation.split("/")[1], specifications[hashLocation.split("/")[2] + '.' + hashLocation.split("/")[1]].objectName);
      }, function (err) {});
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.initData();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          mockData = _props2.mockData,
          moduleName = _props2.moduleName,
          actionName = _props2.actionName,
          formData = _props2.formData,
          fieldErrors = _props2.fieldErrors;
      var handleChange = this.handleChange,
          getVal = this.getVal,
          addNewCard = this.addNewCard,
          removeCard = this.removeCard,
          printer = this.printer;


      var renderTable = function renderTable() {
        if (moduleName && actionName && formData && formData[objectName]) {
          var objectName = mockData[moduleName + '.' + actionName].objectName;
          var flag = 0;
          var count = 0;
          var dataList = {
            resultHeader: ["#", "Name", "File"],
            resultValues: []
          };
          for (var _i5 = 0; _i5 < mockData[moduleName + "." + actionName].groups.length; _i5++) {
            for (var j = 0; j < mockData[moduleName + "." + actionName].groups[_i5].fields.length; j++) {
              if (mockData[moduleName + "." + actionName].groups[_i5].fields[j].type == "singleFileUpload" && _lodash2.default.get(formData, mockData[moduleName + "." + actionName].groups[_i5].fields[j].jsonPath)) {
                flag = 1;
                count++;
                var fileStoreId = _lodash2.default.get(formData, mockData[moduleName + "." + actionName].groups[_i5].fields[j].jsonPath);
                dataList.resultValues.push([count, "File", "<a href=/filestore/v1/files/id?tenantId=" + localStorage.getItem("tenantId") + "&fileStoreId=" + fileStoreId + ">Download</a>"]);
              }
            }
          }

          if (formData[objectName].documents && formData[objectName].documents.length) {
            flag = 1;
            for (var i = 0; i < formData[objectName].documents.length; i++) {
              dataList.resultValues.push([i + 1, formData[objectName].documents[i].name || "File", "<a href=/filestore/v1/files/id?tenantId=" + localStorage.getItem("tenantId") + "&fileStoreId=" + formData[objectName].documents[i].fileStoreId + ">Download</a>"]);
            }
          }

          if (flag == 1) {
            return _react2.default.createElement(_UiTable2.default, { resultList: dataList });
          }
        }
      };

      return _react2.default.createElement(
        'div',
        { className: 'Report' },
        _react2.default.createElement(
          _reactBootstrap.Row,
          null,
          _react2.default.createElement(
            _reactBootstrap.Col,
            { xs: 6, md: 6 },
            _react2.default.createElement(
              'h3',
              { style: { paddingLeft: 15, "marginBottom": "0" } },
              !_lodash2.default.isEmpty(mockData) && moduleName && actionName && mockData[moduleName + '.' + actionName] && mockData[moduleName + '.' + actionName].title ? (0, _egovCommonUtility.translate)(mockData[moduleName + '.' + actionName].title) : ""
            )
          )
        ),
        _react2.default.createElement(_UiBackButton2.default, null),
        _react2.default.createElement(
          'form',
          { id: 'printable' },
          !_lodash2.default.isEmpty(mockData) && moduleName && actionName && mockData[moduleName + '.' + actionName] && _react2.default.createElement(_showFields2.default, { groups: mockData[moduleName + '.' + actionName].groups, noCols: mockData[moduleName + '.' + actionName].numCols, ui: 'google', handler: "", getVal: getVal, fieldErrors: fieldErrors, useTimestamp: mockData[moduleName + '.' + actionName].useTimestamp || false, addNewCard: "", removeCard: "", screen: 'view' }),
          _react2.default.createElement('br', null),
          renderTable(),
          _react2.default.createElement('br', null)
        ),
        _react2.default.createElement(
          'div',
          { style: { "textAlign": "center" } },
          _react2.default.createElement(_UiButton2.default, { item: { "label": "Print", "uiType": "view" }, ui: 'google', handler: printer })
        )
      );
    }
  }]);

  return Report;
}(_react.Component);

var mapStateToProps = function mapStateToProps(state) {
  return {
    metaData: state.framework.metaData,
    mockData: state.framework.mockData,
    moduleName: state.framework.moduleName,
    actionName: state.framework.actionName,
    formData: state.frameworkForm.form,
    fieldErrors: state.frameworkForm.fieldErrors
  };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  return {
    setFormData: function setFormData(data) {
      dispatch({ type: "SET_FORM_DATA", data: data });
    },
    setMetaData: function setMetaData(metaData) {
      dispatch({ type: "SET_META_DATA", metaData: metaData });
    },
    setMockData: function setMockData(mockData) {
      dispatch({ type: "SET_MOCK_DATA", mockData: mockData });
    },
    setModuleName: function setModuleName(moduleName) {
      dispatch({ type: "SET_MODULE_NAME", moduleName: moduleName });
    },
    setActionName: function setActionName(actionName) {
      dispatch({ type: "SET_ACTION_NAME", actionName: actionName });
    },
    setLoadingStatus: function setLoadingStatus(loadingStatus) {
      dispatch({ type: "SET_LOADING_STATUS", loadingStatus: loadingStatus });
    },
    toggleSnackbarAndSetText: function toggleSnackbarAndSetText(snackbarState, toastMsg, isSuccess, isError) {
      dispatch({ type: "TOGGLE_SNACKBAR_AND_SET_TEXT", snackbarState: snackbarState, toastMsg: toastMsg, isSuccess: isSuccess, isError: isError });
    }
  };
};
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Report);