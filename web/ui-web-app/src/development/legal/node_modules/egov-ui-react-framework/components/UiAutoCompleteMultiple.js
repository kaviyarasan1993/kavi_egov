'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _SelectField = require('material-ui/SelectField');

var _SelectField2 = _interopRequireDefault(_SelectField);

var _AutoComplete = require('material-ui/AutoComplete');

var _AutoComplete2 = _interopRequireDefault(_AutoComplete);

var _MenuItem = require('material-ui/MenuItem');

var _MenuItem2 = _interopRequireDefault(_MenuItem);

var _egovCommonUtility = require('egov-common-utility');

var _jsonpath = require('jsonpath');

var _jsonpath2 = _interopRequireDefault(_jsonpath);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var UiAutoCompleteMultiple = function (_Component) {
	_inherits(UiAutoCompleteMultiple, _Component);

	function UiAutoCompleteMultiple(props) {
		_classCallCheck(this, UiAutoCompleteMultiple);

		var _this = _possibleConstructorReturn(this, (UiAutoCompleteMultiple.__proto__ || Object.getPrototypeOf(UiAutoCompleteMultiple)).call(this, props));

		_this.renderAutoComplete = function (item) {
			var dropDownData = _this.props.dropDownData;

			var dataSourceConfig = {
				text: 'value',
				value: 'key'
			};

			switch (_this.props.ui) {
				case 'google':
					return _react2.default.createElement(
						'div',
						null,
						_react2.default.createElement(_AutoComplete2.default, {
							className: 'custom-form-control-for-textfield',
							id: item.jsonPath.split(".").join("-"),
							listStyle: { maxHeight: 200, overflow: 'auto' },
							filter: function filter(searchText, key) {
								return key.toLowerCase().includes(searchText.toLowerCase());
							},
							floatingLabelStyle: { "color": item.isDisabled ? "#A9A9A9" : "#696969", "fontSize": "20px", "white-space": "nowrap" },
							inputStyle: { "color": "#5F5C57" },
							floatingLabelFixed: true,
							style: { "display": item.hide ? 'none' : 'inline-block' },
							errorStyle: { "float": "left" },
							dataSource: dropDownData.hasOwnProperty(item.jsonPath) ? dropDownData[item.jsonPath] : [],
							dataSourceConfig: dataSourceConfig,
							floatingLabelText: _react2.default.createElement(
								'span',
								null,
								item.label,
								' ',
								_react2.default.createElement(
									'span',
									{ style: { "color": "#FF0000" } },
									item.isRequired ? " *" : ""
								)
							),
							fullWidth: true,
							value: _this.props.getVal(item.jsonPath),
							disabled: item.isDisabled,
							errorText: _this.props.fieldErrors[item.jsonPath],
							onKeyUp: function onKeyUp(e) {
								_this.props.handler({ target: { value: item.allowWrite ? e.target.value : "" } }, item.jsonPath, item.isRequired ? true : false, '', item.requiredErrMsg, item.patternErrMsg);
							},
							onNewRequest: function onNewRequest(value, index) {
								_this.props.handler({ target: { value: value.key } }, item.jsonPath, item.isRequired ? true : false, '', item.requiredErrMsg, item.patternErrMsg);
								if (_this.props.autoComHandler && item.autoCompleteDependancy) {
									_this.props.autoComHandler(item.autoCompleteDependancy, item.jsonPath);
								}
							}
						})
					);
			}
		};

		_this.state = {
			dropDownData: []
		};
		return _this;
	}

	_createClass(UiAutoCompleteMultiple, [{
		key: 'initData',
		value: function initData(props) {
			var item = props.item,
			    setDropDownData = props.setDropDownData,
			    useTimestamp = props.useTimestamp;

			var values = [];
			// console.log(this.props.item);
			if (item.hasOwnProperty("url") && item.url && item.url.search("\\|") > -1 && item.url.search("{") == -1) {
				var splitArray = item.url.split("?");
				var context = "";
				var id = {};
				// id[splitArray[1].split("&")[1].split("=")[0]]=e.target.value;
				for (var j = 0; j < splitArray[0].split("/").length; j++) {
					if (j == splitArray[0].split("/").length - 1) {
						context += splitArray[0].split("/")[j];
					} else {
						context += splitArray[0].split("/")[j] + "/";
					}
				}

				var queryStringObject = splitArray[1].split("|")[0].split("&");
				for (var i = 0; i < queryStringObject.length; i++) {
					if (i) {
						id[queryStringObject[i].split("=")[0]] = queryStringObject[i].split("=")[1];
					}
				}

				var response = _egovCommonUtility.Api.commonApiPost(context, id, {}, "", useTimestamp || false).then(function (response) {

					if (response) {
						var keys = _jsonpath2.default.query(response, splitArray[1].split("|")[1]);
						var valueList = splitArray[1].split("|")[2].split(",");

						if (valueList.length > 1) {
							for (var l = 0; l < valueList.length; l++) {
								values[l] = _jsonpath2.default.query(response, splitArray[1].split("|")[2].split(",")[l]);
							}
						} else {
							values[0] = _jsonpath2.default.query(response, splitArray[1].split("|")[2].split(",")[0]);
						}

						var dropDownData = [];
						for (var k = 0; k < keys.length; k++) {
							var obj = {};
							obj["key"] = item.convertToString ? keys[k].toString() : item.convertToNumber ? Number(keys[k]) : keys[k];
							for (var l = 0; l < values.length; l++) {
								if (l > 0) {
									obj["value"] += '-';
									obj["value"] += values[l][k];
								} else {
									obj["value"] = values[l][k];
								}
							}
							if (item.hasOwnProperty("isKeyValuePair") && item.isKeyValuePair) {
								obj["value"] = keys[k] + obj["value"];
							}
							dropDownData.push(obj);
						}
						dropDownData.unshift({ key: null, value: "-- Please Select --" });
						setDropDownData(item.jsonPath, dropDownData);
					}
				}, function (err) {
					console.log(err);
				});
			} else if (item.hasOwnProperty("defaultValue") && _typeof(item.defaultValue) == "object") {
				setDropDownData(item.jsonPath, item.defaultValue);
			}
		}
	}, {
		key: 'componentDidMount',
		value: function componentDidMount() {
			this.initData(this.props);
		}
	}, {
		key: 'render',
		value: function render() {
			return _react2.default.createElement(
				'div',
				null,
				this.renderAutoComplete(this.props.item)
			);
		}
	}]);

	return UiAutoCompleteMultiple;
}(_react.Component);

var mapStateToProps = function mapStateToProps(state) {
	return { dropDownData: state.framework.dropDownData };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	return {
		setDropDownData: function setDropDownData(fieldName, dropDownData) {
			dispatch({ type: "SET_DROPDWON_DATA", fieldName: fieldName, dropDownData: dropDownData });
		}
	};
};
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(UiAutoCompleteMultiple);