'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _RaisedButton = require('material-ui/RaisedButton');

var _RaisedButton2 = _interopRequireDefault(_RaisedButton);

var _Dialog = require('material-ui/Dialog');

var _Dialog2 = _interopRequireDefault(_Dialog);

var _FlatButton = require('material-ui/FlatButton');

var _FlatButton2 = _interopRequireDefault(_FlatButton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var UiHyperLink = function (_Component) {
  _inherits(UiHyperLink, _Component);

  function UiHyperLink(props) {
    _classCallCheck(this, UiHyperLink);

    var _this = _possibleConstructorReturn(this, (UiHyperLink.__proto__ || Object.getPrototypeOf(UiHyperLink)).call(this, props));

    _this.renderDlgBx = function (item) {
      switch (_this.props.ui) {
        case 'google':
          var actions = [_react2.default.createElement(_FlatButton2.default, {
            label: 'Cancel',
            primary: true,
            onClick: _this.handleClose
          }), _react2.default.createElement(_FlatButton2.default, {
            label: 'Submit',
            primary: true,
            disabled: true,
            onClick: _this.handleClose
          })];
          return _react2.default.createElement(
            'div',
            null,
            _react2.default.createElement(_FlatButton2.default, { href: item.url,
              target: '_blank', id: item.label.split(".").join("-"), type: item.uiType || "button", label: item.label, primary: typeof item.primary != 'undefined' ? item.primary : true, secondary: item.secondary || false
              //onClick={this.handleOpen}
              , disabled: item.isDisabled ? true : false }),
            _react2.default.createElement(_Dialog2.default, {
              title: 'Dialog With Actions',
              actions: actions,
              modal: true,
              open: _this.state.open
            })
          );
      }
    };

    _this.state = {
      open: false
    };

    _this.handleOpen = function () {
      _this.setState({ open: true });
    };

    _this.handleClose = function () {
      _this.setState({ open: false });
    };
    return _this;
  }

  _createClass(UiHyperLink, [{
    key: 'render',
    value: function render() {
      console.log("dialog");
      return this.renderDlgBx(this.props.item);
    }
  }]);

  return UiHyperLink;
}(_react.Component);

exports.default = UiHyperLink;