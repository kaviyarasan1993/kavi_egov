'use strict';

Object.defineProperty(exports, "__esModule", {
   value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _SelectField = require('material-ui/SelectField');

var _SelectField2 = _interopRequireDefault(_SelectField);

var _MenuItem = require('material-ui/MenuItem');

var _MenuItem2 = _interopRequireDefault(_MenuItem);

var _egovCommonUtility = require('egov-common-utility');

var _jsonpath = require('jsonpath');

var _jsonpath2 = _interopRequireDefault(_jsonpath);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _reactRouter = require('react-router');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var UiSelectField = function (_Component) {
   _inherits(UiSelectField, _Component);

   function UiSelectField(props) {
      _classCallCheck(this, UiSelectField);

      var _this = _possibleConstructorReturn(this, (UiSelectField.__proto__ || Object.getPrototypeOf(UiSelectField)).call(this, props));

      _this.renderSelect = function (item) {
         var _this$props = _this.props,
             dropDownData = _this$props.dropDownData,
             value = _this$props.value;
         //console.log('jsonPath ---->', item.jsonPath, this.props.getVal(item.jsonPath));

         switch (_this.props.ui) {
            case 'google':
               return _react2.default.createElement(
                  _SelectField2.default,
                  {
                     className: 'custom-form-control-for-select',
                     id: item.jsonPath.split(".").join("-"),
                     floatingLabelStyle: { "color": item.isDisabled ? "#A9A9A9" : "#696969", "fontSize": "20px", "white-space": "nowrap" },
                     labelStyle: { "color": "#5F5C57" },
                     floatingLabelFixed: true,
                     dropDownMenuProps: { animated: false, targetOrigin: { horizontal: 'left', vertical: 'bottom' } },
                     style: { "display": item.hide ? 'none' : 'inline-block' },
                     errorStyle: { "float": "left" },
                     fullWidth: true,
                     hintText: 'Please Select',
                     floatingLabelText: _react2.default.createElement(
                        'span',
                        null,
                        item.label,
                        ' ',
                        _react2.default.createElement(
                           'span',
                           { style: { "color": "#FF0000" } },
                           item.isRequired ? " *" : ""
                        )
                     ),
                     value: value,
                     onChange: function onChange(event, key, value) {
                        _this.props.handler({ target: { value: value } }, item.jsonPath, item.isRequired ? true : false, '', item.requiredErrMsg, item.patternErrMsg, item.expression, item.expressionMsg);
                     },
                     disabled: item.isDisabled,
                     errorText: _this.props.fieldErrors[item.jsonPath],
                     maxHeight: 200 },
                  dropDownData && dropDownData.map(function (dd, index) {
                     return _react2.default.createElement(_MenuItem2.default, { value: dd.key && dd.key.toString(), key: index, primaryText: dd.value });
                  })
               );
         }
      };

      return _this;
   }

   _createClass(UiSelectField, [{
      key: 'initData',
      value: function initData(props) {
         var item = props.item,
             setDropDownData = props.setDropDownData,
             setDropDownOriginalData = props.setDropDownOriginalData,
             useTimestamp = props.useTimestamp;

         if (item.hasOwnProperty("url") && item.url && item.url.search("\\|") > -1 && item.url.search("{") == -1) {
            var splitArray = item.url.split("?");
            var context = "";
            var id = {};

            for (var j = 0; j < splitArray[0].split("/").length; j++) {
               if (j == splitArray[0].split("/").length - 1) {
                  context += splitArray[0].split("/")[j];
               } else {
                  context += splitArray[0].split("/")[j] + "/";
               }
            }

            var queryStringObject = splitArray[1].split("|")[0].split("&");
            for (var i = 0; i < queryStringObject.length; i++) {
               if (i) {
                  id[queryStringObject[i].split("=")[0]] = queryStringObject[i].split("=")[1];
               }
            }

            var response = _egovCommonUtility.Api.commonApiPost(context, id, {}, "", useTimestamp || false, false, "", "", item.isStateLevel).then(function (response) {
               if (response) {
                  var queries = splitArray[1].split("|");
                  var keys = _jsonpath2.default.query(response, queries[1]);
                  var values = _jsonpath2.default.query(response, queries[2]);
                  var otherPair = [];
                  if (item.hasOwnProperty("isKeyOtherPair") && item.isKeyOtherPair) {
                     otherPair = _jsonpath2.default.query(response, '$..' + item.isKeyOtherPair);
                  }
                  if (item.hasOwnProperty("isCurrentYear") && item.isCurrentYear) {
                     var date = new Date();
                     var currentYear = date.getFullYear();
                     keys = _lodash2.default.filter(keys, function (key) {
                        return key <= currentYear;
                     });
                     values = _lodash2.default.filter(values, function (value) {
                        return value <= currentYear;
                     });
                  }

                  var others = [];
                  if (queries.length > 3) {
                     for (var _i = 3; _i < queries.length; _i++) {
                        others.push(_jsonpath2.default.query(response, queries[_i]) || undefined);
                     }
                  }

                  var dropDownData = [];
                  for (var k = 0; k < keys.length; k++) {
                     var obj = {};
                     obj["key"] = item.convertToString ? keys[k].toString() : item.convertToNumber ? Number(keys[k]) : keys[k];
                     obj["value"] = values[k];
                     if (item.hasOwnProperty("isKeyOtherPair") && item.isKeyOtherPair) {
                        otherPair[k] = otherPair[k] ? "-" + otherPair[k] : "";

                        obj["value"] = values[k] + "" + otherPair[k];
                     }
                     if (others && others.length > 0) {
                        var otherItemDatas = [];
                        for (var _i2 = 0; _i2 < others.length; _i2++) {
                           otherItemDatas.push(others[_i2][k] || undefined);
                        }
                        obj['others'] = otherItemDatas;
                     }

                     if (item.hasOwnProperty("isKeyValuePair") && item.isKeyValuePair) {
                        obj["value"] = keys[k] + "-" + values[k];
                     }
                     dropDownData.push(obj);
                  }

                  dropDownData.sort(function (s1, s2) {
                     return s1.value < s2.value ? -1 : s1.value > s2.value ? 1 : 0;
                  });

                  dropDownData.unshift({ key: null, value: "-- Please Select --" });
                  setDropDownData(item.jsonPath, dropDownData);
                  setDropDownOriginalData(item.jsonPath, response);
               }
            }, function (err) {
               console.log(err);
            });
         } else if (item.hasOwnProperty("defaultValue") && _typeof(item.defaultValue) == "object") {
            setDropDownData(item.jsonPath, item.defaultValue);
         }
      }
   }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
         this.initData(this.props);
      }
   }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
         var _props = this.props,
             dropDownData = _props.dropDownData,
             value = _props.value;

         //load dependant field values on update/view screen

         if (dropDownData == undefined && value && nextProps.dropDownData) {
            var _props2 = this.props,
                item = _props2.item,
                handler = _props2.handler;

            if (handler) handler({ target: { value: value } }, item.jsonPath, item.isRequired ? true : false, '', item.requiredErrMsg, item.patternErrMsg, item.expression, item.expressionMsg);
         }

         if (this.props.location.pathname != nextProps.history.location.pathname || dropDownData === undefined) {
            this.initData(nextProps);
         }
      }
   }, {
      key: 'render',
      value: function render() {
         return this.renderSelect(this.props.item);
      }
   }]);

   return UiSelectField;
}(_react.Component);

var mapStateToProps = function mapStateToProps(state, props) {
   var item = props.item;

   var value = _lodash2.default.get(state.frameworkForm.form, item.jsonPath);
   if (item.convertToString && value) value = value.toString();else if (item.convertToNumber && value) {
      value = parseInt(value);
   }

   return {
      dropDownData: state.framework.dropDownData[item.jsonPath],
      value: value
   };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
   return {
      setDropDownData: function setDropDownData(fieldName, dropDownData) {
         dispatch({ type: "SET_DROPDWON_DATA", fieldName: fieldName, dropDownData: dropDownData });
      },
      setDropDownOriginalData: function setDropDownOriginalData(fieldName, dropDownData) {
         dispatch({ type: "SET_ORIGINAL_DROPDWON_DATA", fieldName: fieldName, dropDownData: dropDownData });
      }
   };
};
exports.default = (0, _reactRouter.withRouter)((0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(UiSelectField));