'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactBootstrap = require('react-bootstrap');

var _TextField = require('material-ui/TextField');

var _TextField2 = _interopRequireDefault(_TextField);

var _FloatingActionButton = require('material-ui/FloatingActionButton');

var _FloatingActionButton2 = _interopRequireDefault(_FloatingActionButton);

var _Dialog = require('material-ui/Dialog');

var _Dialog2 = _interopRequireDefault(_Dialog);

var _FlatButton = require('material-ui/FlatButton');

var _FlatButton2 = _interopRequireDefault(_FlatButton);

var _UiTextField = require('./UiTextField');

var _UiTextField2 = _interopRequireDefault(_UiTextField);

var _UiSelectField = require('./UiSelectField');

var _UiSelectField2 = _interopRequireDefault(_UiSelectField);

var _UiSelectFieldMultiple = require('./UiSelectFieldMultiple');

var _UiSelectFieldMultiple2 = _interopRequireDefault(_UiSelectFieldMultiple);

var _UiCheckBox = require('./UiCheckBox');

var _UiCheckBox2 = _interopRequireDefault(_UiCheckBox);

var _UiEmailField = require('./UiEmailField');

var _UiEmailField2 = _interopRequireDefault(_UiEmailField);

var _UiMobileNumber = require('./UiMobileNumber');

var _UiMobileNumber2 = _interopRequireDefault(_UiMobileNumber);

var _UiTextArea = require('./UiTextArea');

var _UiTextArea2 = _interopRequireDefault(_UiTextArea);

var _UiMultiSelectField = require('./UiMultiSelectField');

var _UiMultiSelectField2 = _interopRequireDefault(_UiMultiSelectField);

var _UiNumberField = require('./UiNumberField');

var _UiNumberField2 = _interopRequireDefault(_UiNumberField);

var _UiDatePicker = require('./UiDatePicker');

var _UiDatePicker2 = _interopRequireDefault(_UiDatePicker);

var _UiMultiFileUpload = require('./UiMultiFileUpload');

var _UiMultiFileUpload2 = _interopRequireDefault(_UiMultiFileUpload);

var _UiSingleFileUpload = require('./UiSingleFileUpload');

var _UiSingleFileUpload2 = _interopRequireDefault(_UiSingleFileUpload);

var _UiAadharCard = require('./UiAadharCard');

var _UiAadharCard2 = _interopRequireDefault(_UiAadharCard);

var _UiPanCard = require('./UiPanCard');

var _UiPanCard2 = _interopRequireDefault(_UiPanCard);

var _UiLabel = require('./UiLabel');

var _UiLabel2 = _interopRequireDefault(_UiLabel);

var _UiRadioButton = require('./UiRadioButton');

var _UiRadioButton2 = _interopRequireDefault(_UiRadioButton);

var _UiTextSearch = require('./UiTextSearch');

var _UiTextSearch2 = _interopRequireDefault(_UiTextSearch);

var _UiDocumentList = require('./UiDocumentList');

var _UiDocumentList2 = _interopRequireDefault(_UiDocumentList);

var _UiAutoComplete = require('./UiAutoComplete');

var _UiAutoComplete2 = _interopRequireDefault(_UiAutoComplete);

var _UiDate = require('./UiDate');

var _UiDate2 = _interopRequireDefault(_UiDate);

var _UiPinCode = require('./UiPinCode');

var _UiPinCode2 = _interopRequireDefault(_UiPinCode);

var _UiArrayField = require('./UiArrayField');

var _UiArrayField2 = _interopRequireDefault(_UiArrayField);

var _UiFileTable = require('./UiFileTable');

var _UiFileTable2 = _interopRequireDefault(_UiFileTable);

var _egovCommonUtility = require('egov-common-utility');

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var multiFieldAddToTable = function (_Component) {
  _inherits(multiFieldAddToTable, _Component);

  function multiFieldAddToTable(props) {
    _classCallCheck(this, multiFieldAddToTable);

    var _this = _possibleConstructorReturn(this, (multiFieldAddToTable.__proto__ || Object.getPrototypeOf(multiFieldAddToTable)).call(this, props));

    _this.handler = function (e, property, isRequired, pattern) {
      var requiredErrMsg = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : "Required";
      var patternErrMsg = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : "Pattern Missmatch";
      var expression = arguments[6];
      var expErr = arguments[7];
      var isDate = arguments[8];
      var formData = _this.state.formData;

      _lodash2.default.set(formData, property, e.target.value);
      _this.setState({
        formData: formData
      }, function () {
        this.props.getVal();
      });
    };

    _this.addToParent = function () {

      _this.setState({});
    };

    _this.renderFields = function (item, screen) {
      if (screen == "view" && ["documentList", "fileTable", "arrayText", "arrayNumber"].indexOf(item.type) > -1) {
        if (item.type == "datePicker") {
          item.isDate = true;
        }
        item.type = "label";
      }
      switch (item.type) {
        case 'text':
          return _react2.default.createElement(_UiTextField2.default, { ui: _this.props.ui, getVal: _this.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.handler });
        case 'textarea':
          return _react2.default.createElement(_UiTextArea2.default, { ui: _this.props.ui, getVal: _this.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.handler });
        case 'singleValueListMultiple':
          return _react2.default.createElement(_UiSelectFieldMultiple2.default, { ui: _this.props.ui, useTimestamp: _this.props.useTimestamp, getVal: _this.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.handler });
        case 'singleValueList':
          return _react2.default.createElement(_UiSelectField2.default, { ui: _this.props.ui, useTimestamp: _this.props.useTimestamp, getVal: _this.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.handler });
        case 'multiValueList':
          return _react2.default.createElement(_UiMultiSelectField2.default, { ui: _this.props.ui, getVal: _this.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.handler });
        case 'autoCompelete':
          return _react2.default.createElement(_UiAutoComplete2.default, { ui: _this.props.ui, getVal: _this.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.props.handler, autoComHandler: _this.autoComHandler || "" });
        case 'number':
          return _react2.default.createElement(_UiNumberField2.default, { ui: _this.props.ui, getVal: _this.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.handler });
        case 'mobileNumber':
          return _react2.default.createElement(_UiMobileNumber2.default, { ui: _this.props.ui, getVal: _this.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.handler });
        case 'checkbox':
          return _react2.default.createElement(_UiCheckBox2.default, { ui: _this.props.ui, getVal: _this.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.handler });
        case 'email':
          return _react2.default.createElement(_UiEmailField2.default, { ui: _this.props.ui, getVal: _this.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.handler });
        case 'datePicker':
          return _react2.default.createElement(_UiDatePicker2.default, { ui: _this.props.ui, getVal: _this.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.handler });
        case 'singleFileUpload':
          return _react2.default.createElement(_UiSingleFileUpload2.default, { ui: _this.props.ui, getVal: _this.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.handler });
        case 'multiFileUpload':
          return _react2.default.createElement(_UiMultiFileUpload2.default, { ui: _this.props.ui, getVal: _this.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.handler });
        case 'pan':
          return _react2.default.createElement(_UiPanCard2.default, { ui: _this.props.ui, getVal: _this.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.handler });
        case 'aadhar':
          return _react2.default.createElement(_UiAadharCard2.default, { ui: _this.props.ui, getVal: _this.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.handler });
        case 'pinCode':
          return _react2.default.createElement(_UiPinCode2.default, { ui: _this.props.ui, getVal: _this.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.handler });
        case 'label':
          return _react2.default.createElement(_UiLabel2.default, { getVal: _this.getVal, item: item });
        case 'radio':
          return _react2.default.createElement(_UiRadioButton2.default, { ui: _this.props.ui, getVal: _this.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.handler });
        case 'textSearch':
          return _react2.default.createElement(_UiTextSearch2.default, { ui: _this.props.ui, getVal: _this.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.props.handler, autoComHandler: _this.autoComHandler });
      }
    };

    _this.renderArrayField = function (item) {
      switch (_this.props.ui) {
        case 'google':
          return _react2.default.createElement(
            'div',
            null,
            _react2.default.createElement(
              _Dialog2.default,
              {
                title: _this.props.item.label,
                actions: _react2.default.createElement(_FlatButton2.default, {
                  label: (0, _egovCommonUtility.translate)("pt.create.button.viewdcb.close"),
                  primary: true,
                  onClick: _this.handleClose
                }),
                modal: false,
                open: _this.state.open,
                onRequestClose: _this.handleClose },
              _react2.default.createElement(
                _reactBootstrap.Row,
                null,
                _this.props.item.values.map(function (v, i) {
                  return _react2.default.createElement(
                    _reactBootstrap.Col,
                    { xs: 12, md: 6 },
                    _this.renderFields(v, _this.props.screen)
                  );
                }),
                _react2.default.createElement(
                  _reactBootstrap.Col,
                  { xs: 12, md: 4 },
                  _react2.default.createElement(_FlatButton2.default, {
                    label: (0, _egovCommonUtility.translate)("pt.create.groups.ownerDetails.fields.add"),
                    secondary: true,
                    style: { "marginTop": 39 },
                    onClick: _this.addToParent
                  })
                )
              ),
              _react2.default.createElement('br', null)
            ),
            _react2.default.createElement(_FlatButton2.default, { label: "click to add location details",
              onClick: function onClick(e) {
                _this.setState({ open: true });
              }
            })
          );
      }
    };

    _this.handleOpen = function () {
      _this.setState({
        open: true
      });
    };

    _this.handleClose = function () {
      _this.setState({
        open: false
      });
    };

    _this.getVal = function (path, dateBool) {
      var _val = _lodash2.default.get(_this.state.formData, path);
      console.log(path + "--" + _lodash2.default.get(_this.state.formData, path));

      if (dateBool && typeof _val == 'string' && _val && _val.indexOf("-") > -1) {
        var _date = _val.split("-");
        return new Date(_date[0], Number(_date[1]) - 1, _date[2]);
      }

      return typeof _val != "undefined" ? _val : "";
    };

    _this.valueFromList = function (index) {
      var list = [].concat(_toConsumableArray(_this.state.valueList));
      list.splice(index, 1);
      _this.setState({
        valueList: list
      }, function () {
        _this.props.handler({ target: { value: _this.state.valueList.length ? _this.state.valueList : "" } }, _this.props.item.jsonPath, _this.props.item.isRequired ? true : false, '', _this.props.item.requiredErrMsg, _this.props.item.patternErrMsg);
      });
    };

    _this.state = {
      open: false,
      currentValue: '',
      valueList: [],
      formData: {},
      index: 0
    };
    return _this;
  }
  // componentWillReceiveProps(nextProps) {
  //   let arrayValue = this.props.getVal(this.props.item.jsonPath);
  //   console.log(arrayValue)
  //   let { valueList } = this.state;
  //   if (_.isArray(arrayValue) && JSON.stringify(arrayValue) != JSON.stringify(valueList)) {
  //     this.setState({
  //       valueList: arrayValue
  //     })
  //   }
  // }

  _createClass(multiFieldAddToTable, [{
    key: 'render',
    value: function render() {
      console.log(this.state.formData);
      return _react2.default.createElement(
        'div',
        null,
        this.renderArrayField(this.props.item)
      );
    }
  }]);

  return multiFieldAddToTable;
}(_react.Component);

exports.default = multiFieldAddToTable;


var mapStateToProps = function mapStateToProps(state) {
  return {
    formData: state.frameworkForm.form
  };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  return {
    setFormData: function setFormData(data) {
      dispatch({ type: "SET_FORM_DATA", data: data });
    }
  };
};