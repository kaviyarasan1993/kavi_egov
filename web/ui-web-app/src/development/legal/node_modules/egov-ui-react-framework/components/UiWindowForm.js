"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _reactBootstrap = require("react-bootstrap");

var _TextField = require("material-ui/TextField");

var _TextField2 = _interopRequireDefault(_TextField);

var _FloatingActionButton = require("material-ui/FloatingActionButton");

var _FloatingActionButton2 = _interopRequireDefault(_FloatingActionButton);

var _Dialog = require("material-ui/Dialog");

var _Dialog2 = _interopRequireDefault(_Dialog);

var _FlatButton = require("material-ui/FlatButton");

var _FlatButton2 = _interopRequireDefault(_FlatButton);

var _egovCommonUtility = require("egov-common-utility");

var _lodash = require("lodash");

var _lodash2 = _interopRequireDefault(_lodash);

var _showFields = require("../showFields");

var _showFields2 = _interopRequireDefault(_showFields);

var _reactRedux = require("react-redux");

var _jsonpath = require("jsonpath");

var _jsonpath2 = _interopRequireDefault(_jsonpath);

var _utility = require("../utility/utility");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//import $ from "jquery";

var specifications = {};
var reqRequired = [];

var UiWindowForm = function (_Component) {
  _inherits(UiWindowForm, _Component);

  function UiWindowForm(props) {
    _classCallCheck(this, UiWindowForm);

    var _this = _possibleConstructorReturn(this, (UiWindowForm.__proto__ || Object.getPrototypeOf(UiWindowForm)).call(this, props));

    _this.create = function (formData) {
      var self = _this,
          _url = void 0;
      // if(e) e.preventDefault();
      self.props.setLoadingStatus("loading");
      if (self.state.mockData[self.props.item.modulepath].tenantIdRequired) {}
      //Check if documents, upload and get fileStoreId
      var formdocumentData = formData[self.state.mockData[self.props.item.modulepath].objectName];
      var documentPath = self.state.mockData[self.props.item.modulepath].documentsPath;

      formdocumentData = formdocumentData && formdocumentData.length && formdocumentData[0] || formdocumentData;
      if (documentPath) {
        formdocumentData = _lodash2.default.get(formData, documentPath);
      }

      if (formdocumentData["documents"] && formdocumentData["documents"].length) {
        (function () {
          var documents = [].concat(_toConsumableArray(formdocumentData["documents"]));
          var _docs = [];
          var counter = documents.length,
              breakOut = 0;

          var _loop = function _loop(i) {
            (0, _utility.fileUpload)(documents[i].fileStoreId, self.props.moduleName, function (err, res) {
              if (breakOut == 1) return;
              if (err) {
                breakOut = 1;
                self.props.setLoadingStatus("hide");
                self.props.toggleSnackbarAndSetText(true, err, false, true);
              } else {
                _docs.push(_extends({}, documents[i], {
                  fileStoreId: res.files[0].fileStoreId
                }));
                counter--;
                if (counter == 0 && breakOut == 0) {
                  formdocumentData["documents"] = _docs;
                  self.checkForOtherFiles(formData, _url);
                }
              }
            });
          };

          for (var i = 0; i < documents.length; i++) {
            _loop(i);
          }
        })();
      }
      if (/\{.*\}/.test(self.state.mockData[self.props.item.modulepath].url)) {
        _url = self.state.mockData[self.props.item.modulepath].url;
        var match = _url.match(/\{.*\}/)[0];
        var jPath = match.replace(/\{|}/g, "");
        _url = _url.replace(match, _lodash2.default.get(formData, jPath));
      }

      self.checkForOtherFiles(formData, _url);
    };

    _this.checkForOtherFiles = function (formData, _url) {
      //let { mockData, actionName, moduleName } = this.props;
      var self = _this;
      var fileList = {};
      _this.getFileList(self.state.mockData[self.props.item.modulepath], formData, fileList);
      var counter = Object.keys(fileList).length;
      if (!counter) {
        self.makeAjaxCall(formData, _url);
      } else {
        (function () {
          var breakOut = 0;

          var _loop2 = function _loop2(key) {
            (0, _utility.fileUpload)(fileList[key], "legal", function (err, res) {
              if (breakOut == 1) return;
              if (err) {
                breakOut = 1;
                self.props.setLoadingStatus("hide");
              } else {
                counter--;
                _lodash2.default.set(formData, key, res.files[0].fileStoreId);
                if (counter == 0 && breakOut == 0) self.makeAjaxCall(formData, _url);
              }
            });
          };

          for (var key in fileList) {
            _loop2(key);
          }
        })();
      }
    };

    _this.getFileList = function (mockObject, formData) {
      var fileList = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      for (var i = 0; i < mockObject.groups.length; i++) {
        for (var j = 0; j < mockObject.groups[i].fields.length; j++) {
          if (mockObject.groups[i].fields[j].type == "singleFileUpload" && _lodash2.default.get(formData, mockObject.groups[i].fields[j].jsonPath)) {
            fileList[mockObject.groups[i].fields[j].jsonPath] = _lodash2.default.get(formData, mockObject.groups[i].fields[j].jsonPath);
          }
        }

        if (mockObject.groups[i].children && mockObject.groups[i].children.length) {
          for (var k = 0; k < mockObject.groups[i].children.length; k++) {
            _this.getFileList(mockObject.groups[i].children[k], formData, fileList);
          }
        }
      }
    };

    _this.makeAjaxCall = function (formData, url) {
      var self = _this;
      delete formData.ResponseInfo;
      //return console.log(formData);
      _egovCommonUtility.Api.commonApiPost(url || self.state.mockData[self.props.item.modulepath].url, "", formData, "", true).then(function (response) {
        self.props.setLoadingStatus("hide");
        self.initData();
        self.setState({
          valuesObj: {},
          open: false,
          index: -1
        });
        // self.props.toggleSnackbarAndSetText(true, translate(self.props.actionName == "create" ? "wc.create.message.success" : "wc.update.message.success"), true);
      }, function (err) {
        self.props.setLoadingStatus("hide");
        //self.props.toggleSnackbarAndSetText(true, err.message);
      });
    };

    _this.editRow = function (index) {
      var _this$props = _this.props,
          item = _this$props.item,
          getVal = _this$props.getVal;

      var jsonPath = item.jsonPath + "." + item.arrayPath + "[" + index + "]";
      var data = getVal(jsonPath);
      _this.setState({
        valuesObj: data,
        index: index,
        open: true
      });
    };

    _this.deleteRow = function (index) {};

    _this.renderTable = function (item) {
      var _internal_val = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

      if (item.tableConfig) {
        return _react2.default.createElement(
          _reactBootstrap.Col,
          { xs: 12, md: 8 },
          _react2.default.createElement(
            "table",
            { className: "table table-striped table-bordered", responsive: true },
            _react2.default.createElement(
              "thead",
              null,
              _react2.default.createElement(
                "tr",
                null,
                _react2.default.createElement(
                  "th",
                  null,
                  "#"
                ),
                item.tableConfig.header.map(function (v, i) {
                  var style = {};
                  if (v.style) {
                    style = v.style;
                  }

                  return _react2.default.createElement(
                    "th",
                    { style: style, key: i },
                    (0, _egovCommonUtility.translate)(v.label)
                  );
                }),
                _react2.default.createElement(
                  "th",
                  null,
                  (0, _egovCommonUtility.translate)("reports.common.action")
                )
              )
            ),
            _react2.default.createElement(
              "tbody",
              null,
              _lodash2.default.isArray(_internal_val) && _internal_val.map(function (v, i) {
                return _react2.default.createElement(
                  "tr",
                  null,
                  _react2.default.createElement(
                    "td",
                    null,
                    i
                  ),
                  item.tableConfig.rows.map(function (value, idx) {
                    return _react2.default.createElement(
                      "td",
                      null,
                      _lodash2.default.get(v, value.displayField)
                    );
                    //this.renderFields(_.get(v,value.displayField),value.type)}</td>);
                  }),
                  _react2.default.createElement(
                    "td",
                    null,
                    _react2.default.createElement(
                      "div",
                      {
                        className: "material-icons",
                        onClick: function onClick() {
                          _this.editRow(i);
                        }
                      },
                      "edit"
                    )
                  )
                );
              })
            )
          )
        );
      } else {
        return _react2.default.createElement(
          _reactBootstrap.Col,
          { xs: 12, md: 6 },
          _react2.default.createElement(_TextField2.default, {
            className: "cutustom-form-controll-for-textfield",
            id: item.jsonPath.split(".").join("-"),
            floatingLabelStyle: {
              color: "#A9A9A9",
              fontSize: "20px",
              "white-space": "nowrap"
            },
            inputStyle: { color: "#5F5C57" },
            floatingLabelFixed: true,
            maxLength: item.maxLength || "",
            style: { display: item.hide ? "none" : "inline-block" },
            errorStyle: { float: "left" },
            fullWidth: true,
            floatingLabelText: _react2.default.createElement(
              "span",
              null,
              item.label,
              " ",
              _react2.default.createElement(
                "span",
                { style: { color: "#FF0000" } },
                item.isRequired ? " *" : ""
              )
            )
            //value = {this.state.valueList.join(", ")}
            , value: _internal_val && _internal_val.constructor == Array ? _internal_val.join(", ") : "",
            disabled: true
          })
        );
      }
    };

    _this.renderField = function (item) {
      var val = _this.props.getVal(item.jsonPath + "." + item.arrayPath);
      if (item.displayField && val && val.constructor == Array) {
        val = _jsonpath2.default.query(val, "$.." + item.displayField);
      }
      if (item.isExceptFirstRecord && val && val.constructor == Array) {
        val.shift();
      }
      if (_this.props.readonly === "true") {
        return _react2.default.createElement(
          "div",
          null,
          _react2.default.createElement(
            _reactBootstrap.Col,
            { xs: 12 },
            _react2.default.createElement(
              "label",
              null,
              _react2.default.createElement(
                "span",
                { style: { fontWeight: 500, fontSize: "13px" } },
                (0, _egovCommonUtility.translate)(item.label)
              )
            )
          ),
          _react2.default.createElement(
            _reactBootstrap.Col,
            { xs: 12 },
            val && val.constructor == Array ? val.join(", ") : ""
          )
        );
      } else {
        return _react2.default.createElement(
          _reactBootstrap.Row,
          null,
          _this.renderTable(item, val),
          _react2.default.createElement(
            _reactBootstrap.Col,
            { xs: 12, md: 6 },
            _react2.default.createElement(
              _FloatingActionButton2.default,
              {
                style: { marginTop: 39 },
                mini: true,
                onClick: function onClick() {
                  _this.handleOpen();
                }
              },
              _react2.default.createElement(
                "i",
                { className: "material-icons" },
                "add"
              )
            )
          )
        );
      }
    };

    _this.renderArrayField = function (item) {
      var _React$createElement;

      var mockData = _this.state.mockData;
      var fieldErrors = _this.props.fieldErrors;
      var handleChange = _this.handleChange,
          getValueFn = _this.getValueFn;

      var self = _this;
      switch (_this.props.ui) {
        case "google":
          return _react2.default.createElement(
            "div",
            null,
            _this.renderField(item),
            _react2.default.createElement(
              _Dialog2.default,
              (_React$createElement = {
                title: _this.props.item.label,
                modal: true,
                actions: [_react2.default.createElement(_FlatButton2.default, {
                  label: (0, _egovCommonUtility.translate)("pt.create.groups.ownerDetails.fields.add"),
                  disabled: _lodash2.default.isEmpty(_this.state.valuesObj),
                  secondary: true,
                  style: { marginTop: 5 },
                  onClick: function onClick(e) {
                    var oldData = self.props.getVal(self.props.item.jsonPath + "." + self.props.item.arrayPath);
                    if (self.state.index >= 0) {
                      oldData[self.state.index] = self.state.valuesObj;
                    } else {
                      _lodash2.default.isArray(oldData) ? oldData.push(self.state.valuesObj) : oldData = [self.state.valuesObj];
                    }
                    if (self.state.mockData[self.props.item.modulepath].url) {
                      var formData = _lodash2.default.clone(self.props.formData);
                      _lodash2.default.set(formData, self.props.item.jsonPath + "." + self.props.item.arrayPath, oldData);
                      self.create(formData);
                    } else {
                      self.props.handler({ target: { value: oldData } }, self.props.item.jsonPath + "." + self.props.item.arrayPath, self.props.item.isRequired ? true : false, "", self.props.item.requiredErrMsg, self.props.item.patternErrMsg);
                      self.setState({
                        valuesObj: {},
                        open: false,
                        index: -1
                      });
                    }
                  }
                }), _react2.default.createElement(_FlatButton2.default, {
                  label: (0, _egovCommonUtility.translate)("pt.create.button.viewdcb.close"),
                  primary: true,
                  onClick: _this.handleClose
                })]
              }, _defineProperty(_React$createElement, "modal", false), _defineProperty(_React$createElement, "open", _this.state.open), _defineProperty(_React$createElement, "contentStyle", { width: "80%", "max-width": "80%" }), _defineProperty(_React$createElement, "onRequestClose", _this.handleClose), _defineProperty(_React$createElement, "autoScrollBodyContent", true), _React$createElement),
              " ",
              _react2.default.createElement(
                "div",
                null,
                !_lodash2.default.isEmpty(mockData) && mockData[_this.props.item.modulepath] && _react2.default.createElement(_showFields2.default, {
                  groups: mockData[_this.props.item.modulepath].groups,
                  noCols: mockData[_this.props.item.modulepath].numCols,
                  ui: "google",
                  handler: handleChange,
                  getVal: getValueFn,
                  fieldErrors: fieldErrors,
                  useTimestamp: mockData[_this.props.item.modulepath].useTimestamp || false,
                  addNewCard: "",
                  removeCard: ""
                })
              )
            )
          );
      }
    };

    _this.handleChange = function (e, property, isRequired, pattern, requiredErrMsg, patternErrMsg) {
      var newObj = _lodash2.default.set(_this.state.valuesObj, property, e.target.value);
      _this.setState({
        valuesObj: newObj
      });
      //$("#title>div>div:nth-child(2)").text(this.state.valuesObj.title);
      //$("#gender>div>div:nth-child(2)").text(this.state.valuesObj.gender);
      // dispatch({type:"HANDLE_CHANGE_FRAMEWORK", property,value: e.target.value, isRequired, pattern, requiredErrMsg, patternErrMsg});
    };

    _this.getValueFn = function (path) {
      return typeof _lodash2.default.get(_this.state.valuesObj, path) != "undefined" ? _lodash2.default.get(_this.state.valuesObj, path) : _lodash2.default.get(_this.props.formData, path) != "undefined" ? _lodash2.default.get(_this.props.formData, path) : "";
    };

    _this.handleOpen = function () {
      _this.setState({
        open: true
      });
    };

    _this.handleClose = function () {
      _this.setState({
        open: false
      });
    };

    _this.state = {
      open: false,
      mockData: null,
      valuesObj: {},
      index: -1
    };
    _this.handleChange = _this.handleChange.bind(_this);
    _this.getValueFn = _this.getValueFn.bind(_this);
    return _this;
  }

  _createClass(UiWindowForm, [{
    key: "setLabelAndReturnRequired",
    value: function setLabelAndReturnRequired(configObject) {
      if (configObject && configObject.groups) {
        for (var i = 0; configObject && i < configObject.groups.length; i++) {
          configObject.groups[i].label = (0, _egovCommonUtility.translate)(configObject.groups[i].label);
          for (var j = 0; j < configObject.groups[i].fields.length; j++) {
            configObject.groups[i].fields[j].label = (0, _egovCommonUtility.translate)(configObject.groups[i].fields[j].label);
            if (configObject.groups[i].fields[j].isRequired && !configObject.groups[i].fields[j].hide && !configObject.groups[i].hide) reqRequired.push(configObject.groups[i].fields[j].jsonPath);
          }

          if (configObject.groups[i].children && configObject.groups[i].children.length) {
            for (var k = 0; k < configObject.groups[i].children.length; k++) {
              this.setLabelAndReturnRequired(configObject.groups[i].children[k]);
            }
          }
        }
      }
    }
  }, {
    key: "initData",
    value: function initData() {
      var self = this;
      specifications = process.end.NODE_ENV == "production" ? require(this.props.item.subPath + ".specs").default : require("../../" + this.props.item.subPath + ".specs").default;
      var result = typeof results == "string" ? JSON.parse(specifications) : specifications;
      var obj = specifications[this.props.item.modulepath];
      self.setLabelAndReturnRequired(obj);

      this.setState({
        mockData: JSON.parse(JSON.stringify(specifications))
      });
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.initData();
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        "div",
        null,
        this.renderArrayField(this.props.item)
      );
    }
  }]);

  return UiWindowForm;
}(_react.Component);

var mapStateToProps = function mapStateToProps(state) {
  return {
    fieldErrors: state.frameworkForm.fieldErrors,
    formData: state.frameworkForm.form
  };
};
var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  return {
    setLoadingStatus: function setLoadingStatus(loadingStatus) {
      dispatch({ type: "SET_LOADING_STATUS", loadingStatus: loadingStatus });
    }
  };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(UiWindowForm);