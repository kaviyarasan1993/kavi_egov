'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _RaisedButton = require('material-ui/RaisedButton');

var _RaisedButton2 = _interopRequireDefault(_RaisedButton);

var _egovCommonUtility = require('egov-common-utility');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var UiSingleFileUpload = function (_Component) {
  _inherits(UiSingleFileUpload, _Component);

  function UiSingleFileUpload(props) {
    _classCallCheck(this, UiSingleFileUpload);

    var _this = _possibleConstructorReturn(this, (UiSingleFileUpload.__proto__ || Object.getPrototypeOf(UiSingleFileUpload)).call(this, props));

    _this.renderSingleFileUpload = function (item) {
      switch (_this.props.ui) {
        case 'google':
          if (item.readonly) {
            return _react2.default.createElement(
              'a',
              { href: window.location.origin + "/filestore/v1/files/id?tenantId=" + localStorage.tenantId + "&fileStoreId=" + _this.props.getVal(item.jsonPath), target: '_blank' },
              (0, _egovCommonUtility.translate)(item.label)
            );
          } else {
            /*
              <RaisedButton
                floatingLabelStyle={{"color": "#696969"}}
                style={{"display": (item.hide ? 'none' : 'block')}}
                containerElement='label'
                fullWidth={true}
                value={this.props.getVal(item.jsonPath)}
                disabled={item.isDisabled}
                label={item.label}>
                  <input id={item.jsonPath.split(".").join("-")}   type="file" style={{ display: 'none' }} onChange={(e) => this.props.handler({target:{value: e.target.files[0]}}, item.jsonPath, item.isRequired ? true : false, '', item.requiredErrMsg, item.patternErrMsg)}/>
              </RaisedButton>
            */
            return _react2.default.createElement(
              'div',
              { style: { "marginTop": "17px", "display": item.hide ? 'none' : 'inline-block' } },
              _react2.default.createElement(
                'label',
                null,
                item.label,
                ' ',
                _react2.default.createElement(
                  'span',
                  { style: { "color": "#FF0000" } },
                  item.isRequired ? " *" : ""
                )
              ),
              _react2.default.createElement('br', null),
              _react2.default.createElement('input', {
                id: item.jsonPath.split(".").join("-"),
                disabled: item.isDisabled,
                type: 'file',
                style: { "marginTop": "10px" },
                onChange: function onChange(e) {
                  return _this.props.handler({ target: { value: e.target.files[0] } }, item.jsonPath, item.isRequired ? true : false, '', item.requiredErrMsg, item.patternErrMsg);
                } })
            );
          }
      }
    };

    return _this;
  }

  _createClass(UiSingleFileUpload, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        null,
        this.renderSingleFileUpload(this.props.item)
      );
    }
  }]);

  return UiSingleFileUpload;
}(_react.Component);

exports.default = UiSingleFileUpload;