'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactBootstrap = require('react-bootstrap');

var _Card = require('material-ui/Card');

var _egovCommonUtility = require('egov-common-utility');

var _reactRedux = require('react-redux');

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _jsonpath = require('jsonpath');

var _jsonpath2 = _interopRequireDefault(_jsonpath);

var _UiButton = require('./UiButton');

var _UiButton2 = _interopRequireDefault(_UiButton);

var _UiCheckBox = require('./UiCheckBox');

var _UiCheckBox2 = _interopRequireDefault(_UiCheckBox);

var _jquery = require('jquery');

var _jquery2 = _interopRequireDefault(_jquery);

require('datatables.net-buttons/js/buttons.html5.js');

require('datatables.net-buttons/js/buttons.flash.js');

var _jszip = require('jszip/dist/jszip');

var _jszip2 = _interopRequireDefault(_jszip);

var _pdfmake = require('pdfmake/build/pdfmake');

var _pdfmake2 = _interopRequireDefault(_pdfmake);

var _vfs_fonts = require('pdfmake/build/vfs_fonts');

var _vfs_fonts2 = _interopRequireDefault(_vfs_fonts);

require('datatables.net-buttons-bs');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
// const $ = require('jquery');
// $.DataTable = require('datatables.net');
// const dt = require('datatables.net-bs');
//
// const buttons = require('datatables.net-buttons-bs');
//
// require('datatables.net-buttons/js/buttons.colVis.js'); // Column visibility
// require('datatables.net-buttons/js/buttons.html5.js'); // HTML 5 file export
// require('datatables.net-buttons/js/buttons.flash.js'); // Flash file export
// require('datatables.net-buttons/js/buttons.print.js'); // Print view button

// HTML 5 file export
// Flash file export


_pdfmake2.default.vfs = _vfs_fonts2.default.pdfMake.vfs;

var enumWithUnderscore = [{
	propertyName: "rateType"
}];

var UiTable = function (_Component) {
	_inherits(UiTable, _Component);

	function UiTable(props) {
		_classCallCheck(this, UiTable);

		var _this = _possibleConstructorReturn(this, (UiTable.__proto__ || Object.getPrototypeOf(UiTable)).call(this, props));

		_this.state = {};
		return _this;
	}

	_createClass(UiTable, [{
		key: 'componentWillMount',
		value: function componentWillMount() {
			(0, _jquery2.default)('#searchTable').DataTable({
				dom: '<"col-md-4"l><"col-md-4"B><"col-md-4"f>rtip',
				buttons: ['excel', {
					extend: 'pdf',
					orientation: 'landscape',
					pageSize: 'LEGAL',
					exportOptions: {
						modifier: {
							page: 'current'
						}
					},
					customize: function customize(doc) {
						doc.defaultStyle.fontSize = 10; //<-- set fontsize to 16 instead of 10
						// doc.style.tableBorder=5;
					},
					text: 'Pdf/Print'
				}, 'copy', 'csv'
				// , {
				//     extend: 'print',
				//     customize: function ( win ) {
				//         $(win.document.body)
				//             .css( 'font-size', '6pt' )
				//             // .prepend(
				//             //     '<img src="http://datatables.net/media/images/logo-fade.png" style="position:absolute; top:0; left:0;" />'
				//             // );
				//
				//         // $(win.document.body).find( 'table' )
				//         //     .addClass( 'compact' )
				//         //     .css( 'font-size', 'inherit' );
				//     }
				// }
				],
				bDestroy: true,
				language: {
					"emptyTable": "No Records"
				}
			});
		}
	}, {
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			(0, _jquery2.default)('#searchTable').DataTable().destroy(true);
		}
	}, {
		key: 'componentWillUpdate',
		value: function componentWillUpdate() {
			var flag = this.props.flag;

			if (flag == 1) {
				flag = 0;
				(0, _jquery2.default)('#searchTable').dataTable().fnDestroy();
			}
		}
	}, {
		key: 'componentDidUpdate',
		value: function componentDidUpdate() {
			(0, _jquery2.default)('#searchTable').DataTable({
				dom: '<"col-md-4"l><"col-md-4"B><"col-md-4"f>rtip',
				buttons: ['excel', {
					extend: 'pdf',
					orientation: 'landscape',
					pageSize: 'LEGAL',
					exportOptions: {
						modifier: {
							page: 'current'
						}
					},
					customize: function customize(doc) {
						doc.defaultStyle.fontSize = 10; //<-- set fontsize to 16 instead of 10
						// var myTable = document.getElementById('searchTable');
						// myTable.style.border="1px solid black";
					},

					text: 'Pdf/Print'
				}, 'copy', 'csv'
				// ,  {
				//   extend: 'print',
				//   customize: function ( win ) {
				//       $(win.document.body)
				//           .css( 'font-size', '8pt' )
				//       //     .prepend(
				//       //         '<img src="http://datatables.net/media/images/logo-fade.png" style="position:absolute; top:0; left:0;" />'
				//       //     );
				// 			//
				//       // $(win.document.body).find( 'table' )
				//       //     .addClass( 'compact' )
				//       //     .css( 'font-size', 'inherit' );
				//   }
				// }
				],
				ordering: false,
				bDestroy: true,
				language: {
					"emptyTable": "No Records"
				}
			});
		}
	}, {
		key: 'componentDidMount',
		value: function componentDidMount() {
			var _this2 = this;

			var self = this;
			if (this.props.resultList.resultHeader && this.props.resultList.resultHeader.length) {
				var _loop = function _loop(m) {
					if (_this2.props.resultList.resultHeader[m].url) {
						var splitArray = _this2.props.resultList.resultHeader[m].url.split("?");
						var context = "";
						var id = {};
						for (j = 0; j < splitArray[0].split("/").length; j++) {
							if (j == splitArray[0].split("/").length - 1) {
								context += splitArray[0].split("/")[j];
							} else {
								context += splitArray[0].split("/")[j] + "/";
							}
						}

						var queryStringObject = splitArray[1].split("|")[0].split("&");
						for (i = 0; i < queryStringObject.length; i++) {
							if (i) {
								id[queryStringObject[i].split("=")[0]] = queryStringObject[i].split("=")[1];
							}
						}
						_egovCommonUtility.Api.commonApiPost(context, id, {}, "", self.props.useTimestamp || false).then(function (response) {
							var keys = _jsonpath2.default.query(response, splitArray[1].split("|")[1]);
							var values = _jsonpath2.default.query(response, splitArray[1].split("|")[2]);
							var dropDownData = {};
							for (var k = 0; k < keys.length; k++) {
								dropDownData[keys[k]] = values[k];
							}
							self.setState(_defineProperty({}, self.props.resultList.resultHeader[m].label, dropDownData), function () {});
						}, function (err) {});
					}
				};

				for (var m = 0; m < this.props.resultList.resultHeader.length; m++) {
					var j;
					var i;

					_loop(m);
				}
			}
		}
	}, {
		key: 'render',
		value: function render() {
			var _props = this.props,
			    resultList = _props.resultList,
			    rowClickHandler = _props.rowClickHandler,
			    showDataTable = _props.showDataTable,
			    showHeader = _props.showHeader,
			    rowButtonClickHandler = _props.rowButtonClickHandler,
			    rowCheckboxClickHandler = _props.rowCheckboxClickHandler,
			    selectedValue = _props.selectedValue;

			var self = this;

			var getNameById = function getNameById(item2, i2) {
				if (resultList.resultHeader[i2].isChecked) {
					var selected = false;
					if (selectedValue == item2) {
						selected = true;
					}
					return _react2.default.createElement(
						'span',
						{ style: { "margin-right": "20px" } },
						_react2.default.createElement(_UiCheckBox2.default, { item: resultList.resultHeader[i2].checkedItem, ui: 'google', handler: function handler() {
								rowCheckboxClickHandler(item2);
							}, isSelected: selected })
					);
				} else if (resultList.resultHeader[i2].isAction) {
					if (_lodash2.default.isArray(item2)) {
						return resultList.resultHeader[i2].actionItems.map(function (actionitem, index) {

							return _react2.default.createElement(
								'span',
								{ style: { "margin-right": "20px" } },
								_react2.default.createElement(
									'a',
									{ onClick: function onClick() {
											rowButtonClickHandler(actionitem.url, item2[1]);
										} },
									item2[0]
								)
							);

							//		return 	(<span style={{"margin-right":"20px"}}><Button item={{"label": item2[0], "uiType":"primary"}} ui="google" handler={()=>{rowButtonClickHandler(actionitem.url,item2[1])}}/></span>)
						});
					} else {
						return resultList.resultHeader[i2].actionItems.map(function (actionitem, index) {
							return _react2.default.createElement(
								'span',
								{ style: { "margin-right": "20px" } },
								_react2.default.createElement(_UiButton2.default, { item: { "label": actionitem.label, "uiType": "primary" }, ui: 'google', handler: function handler() {
										rowButtonClickHandler(actionitem.url, item2);
									} })
							);
						});
					}
				} else if (resultList.resultHeader[i2].url) {
					return self.state[resultList.resultHeader[i2].label] ? self.state[resultList.resultHeader[i2].label][item2] : item2 + "";
				} else if (resultList.resultHeader[i2].isDate) {
					var _date = new Date(Number(item2));
					return ('0' + _date.getDate()).slice(-2) + '/' + ('0' + (_date.getMonth() + 1)).slice(-2) + '/' + _date.getFullYear();
				} else if (resultList.resultHeader[i2].isComma) {
					var _commaVal = item2.toString();
					var y = _commaVal.split(".")[1];
					_commaVal = _commaVal.split(".")[0];
					var lastThree = _commaVal.substring(_commaVal.length - 3);
					var otherNumbers = _commaVal.substring(0, _commaVal.length - 3);
					if (otherNumbers != '') lastThree = ',' + lastThree;
					var resCal = otherNumbers.replace(/\B(?=(\d{2})+(?!\d))/g, ",") + lastThree;
					var res = y == null ? resCal : resCal + "." + y;
					return res;
				} else {
					return item2 === true ? (0, _egovCommonUtility.translate)("employee.createPosition.groups.fields.outsourcepost.value1") : item2 === false ? (0, _egovCommonUtility.translate)("employee.createPosition.groups.fields.outsourcepost.value2") : item2 === null ? "" : item2 + "";
				}
			};

			var _removeEnumUnderScore = function _removeEnumUnderScore(item2, i2) {
				if (resultList.resultHeader[i2].label == "Rate Type") {}
			};

			var renderTable = function renderTable() {
				return _react2.default.createElement(
					_Card.Card,
					{ className: 'uiCard' },
					_react2.default.createElement(_Card.CardHeader, { title: _react2.default.createElement(
							'strong',
							null,
							' ',
							showHeader == undefined ? (0, _egovCommonUtility.translate)("ui.table.title") : showHeader ? (0, _egovCommonUtility.translate)("ui.table.title") : "",
							' '
						) }),
					_react2.default.createElement(
						_Card.CardText,
						null,
						_react2.default.createElement(
							_reactBootstrap.Table,
							{ className: 'table table-striped table-bordered', cellspacing: '0', width: '100%', id: showDataTable == undefined ? "searchTable" : showDataTable ? "searchTable" : "", responsive: true },
							_react2.default.createElement(
								'thead',
								null,
								_react2.default.createElement(
									'tr',
									null,
									resultList.resultHeader && resultList.resultHeader.length && resultList.resultHeader.map(function (item, i) {
										return _react2.default.createElement(
											'th',
											{ key: i },
											(0, _egovCommonUtility.translate)(item.label)
										);
									})
								)
							),
							_react2.default.createElement(
								'tbody',
								null,
								resultList.hasOwnProperty("resultValues") && resultList.resultValues.map(function (item, i) {

									return _react2.default.createElement(
										'tr',
										{ key: i, onClick: function onClick() {
												if (!resultList.disableRowClick) {
													rowClickHandler(i);
												}
											} },
										item.map(function (item2, i2) {
											return _react2.default.createElement(
												'td',
												{ key: i2 },
												typeof item2 != "undefined" ? getNameById(item2, i2) : ""
											);
										})
									);
								})
							)
						)
					)
				);
			};

			return _react2.default.createElement(
				'div',
				null,
				this.props.resultList && renderTable()
			);
		}
	}]);

	return UiTable;
}(_react.Component);

var mapStateToProps = function mapStateToProps(state) {
	return { flag: state.report.flag };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	return {
		setFlag: function setFlag(flag) {
			dispatch({ type: "SET_FLAG", flag: flag });
		}
	};
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(UiTable);