'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _RaisedButton = require('material-ui/RaisedButton');

var _RaisedButton2 = _interopRequireDefault(_RaisedButton);

var _reactRedux = require('react-redux');

var _egovCommonUtility = require('egov-common-utility');

var _reactBootstrap = require('react-bootstrap');

var _Card = require('material-ui/Card');

var _UiTextField = require('./UiTextField');

var _UiTextField2 = _interopRequireDefault(_UiTextField);

var _UiSelectField = require('./UiSelectField');

var _UiSelectField2 = _interopRequireDefault(_UiSelectField);

var _UiSelectFieldMultiple = require('./UiSelectFieldMultiple');

var _UiSelectFieldMultiple2 = _interopRequireDefault(_UiSelectFieldMultiple);

var _UiCheckBox = require('./UiCheckBox');

var _UiCheckBox2 = _interopRequireDefault(_UiCheckBox);

var _UiEmailField = require('./UiEmailField');

var _UiEmailField2 = _interopRequireDefault(_UiEmailField);

var _UiMobileNumber = require('./UiMobileNumber');

var _UiMobileNumber2 = _interopRequireDefault(_UiMobileNumber);

var _UiTextArea = require('./UiTextArea');

var _UiTextArea2 = _interopRequireDefault(_UiTextArea);

var _UiMultiSelectField = require('./UiMultiSelectField');

var _UiMultiSelectField2 = _interopRequireDefault(_UiMultiSelectField);

var _UiNumberField = require('./UiNumberField');

var _UiNumberField2 = _interopRequireDefault(_UiNumberField);

var _UiDatePicker = require('./UiDatePicker');

var _UiDatePicker2 = _interopRequireDefault(_UiDatePicker);

var _UiMultiFileUpload = require('./UiMultiFileUpload');

var _UiMultiFileUpload2 = _interopRequireDefault(_UiMultiFileUpload);

var _UiSingleFileUpload = require('./UiSingleFileUpload');

var _UiSingleFileUpload2 = _interopRequireDefault(_UiSingleFileUpload);

var _UiAadharCard = require('./UiAadharCard');

var _UiAadharCard2 = _interopRequireDefault(_UiAadharCard);

var _UiPanCard = require('./UiPanCard');

var _UiPanCard2 = _interopRequireDefault(_UiPanCard);

var _UiLabel = require('./UiLabel');

var _UiLabel2 = _interopRequireDefault(_UiLabel);

var _UiRadioButton = require('./UiRadioButton');

var _UiRadioButton2 = _interopRequireDefault(_UiRadioButton);

var _UiTextSearch = require('./UiTextSearch');

var _UiTextSearch2 = _interopRequireDefault(_UiTextSearch);

var _UiDocumentList = require('./UiDocumentList');

var _UiDocumentList2 = _interopRequireDefault(_UiDocumentList);

var _UiAutoComplete = require('./UiAutoComplete');

var _UiAutoComplete2 = _interopRequireDefault(_UiAutoComplete);

var _UiDate = require('./UiDate');

var _UiDate2 = _interopRequireDefault(_UiDate);

var _UiPinCode = require('./UiPinCode');

var _UiPinCode2 = _interopRequireDefault(_UiPinCode);

var _UiArrayField = require('./UiArrayField');

var _UiArrayField2 = _interopRequireDefault(_UiArrayField);

var _UiFileTable = require('./UiFileTable');

var _UiFileTable2 = _interopRequireDefault(_UiFileTable);

var _jsonpath = require('jsonpath');

var _jsonpath2 = _interopRequireDefault(_jsonpath);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function getSum(total, num) {
	return total + num;
}

var UiMultiFieldTable = function (_Component) {
	_inherits(UiMultiFieldTable, _Component);

	function UiMultiFieldTable(props) {
		_classCallCheck(this, UiMultiFieldTable);

		var _this = _possibleConstructorReturn(this, (UiMultiFieldTable.__proto__ || Object.getPrototypeOf(UiMultiFieldTable)).call(this, props));

		_this.escapeRegExp = function (str) {
			return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
		};

		_this.deleteRow = function (ind) {
			//Changes to handle dependency sum
			var dependencyFlag = 0;
			var depField = "";
			var sumField = "";

			var values = Object.assign([], _this.state.values);
			values.splice(ind, 1);
			var regexp = new RegExp(_this.escapeRegExp(_this.state.jsonPath) + '\\[\\d+\\]');
			for (var i = 0; i < values.length; i++) {
				for (var j = 0; j < values[i].length; j++) {
					values[i][j].jsonPath = values[i][j].jsonPath.replace(regexp, _this.state.jsonPath + '[' + i + ']');
					if (values[i][j].dependency) //Changes to handle dependency sum
						{
							dependencyFlag = 1;
							depField = values[i][j].dependency;
							sumField = values[i][j].jsonPath;
						}
				}
			}

			_this.setState({
				values: values,
				index: _this.state.index - 1,
				isintialLoad: false
			}, function () {
				var formData = JSON.parse(JSON.stringify(_this.props.formData));
				var formDataArray = _lodash2.default.get(formData, _this.state.jsonPath);
				if (formDataArray && formDataArray.length) {
					formDataArray.splice(ind, 1);
					var newArray = _lodash2.default.cloneDeep(formDataArray);
					var newFormData = _lodash2.default.set(formData, _this.state.jsonPath, formDataArray);
					_this.props.setFormData(newFormData);
				}
			});

			if (dependencyFlag == 1) //Changes to handle dependency sum
				{
					var _formData = JSON.parse(JSON.stringify(_this.props.formData));
					if (_formData) {
						var field = sumField.substr(0, sumField.lastIndexOf("["));
						var last = sumField.substr(sumField.lastIndexOf("]") + 2);

						var arrval = _lodash2.default.get(_formData, field);
						if (arrval) {
							var len = _lodash2.default.get(_formData, field).length;

							var amtsum = 0;
							var svalue = "";
							for (var i = 0; i < len; i++) {
								var ifield = field + '[' + i + ']' + '.' + last;
								if (i == ind) {
									svalue = "";
								} else {
									svalue = _lodash2.default.get(_formData, ifield);
									amtsum += parseInt(svalue);
								}
							}
							_this.props.handler({ target: { value: amtsum } }, depField, false, '', '');
						}
					}
				}
		};

		_this.renderFields = function (item, screen) {
			if (screen == "view" && ["documentList", "fileTable", "arrayText", "arrayNumber"].indexOf(item.type) > -1) {
				if (item.type == "datePicker") {
					item.isDate = true;
				}
				item.type = "label";
			}
			switch (item.type) {
				case 'text':
					return _react2.default.createElement(_UiTextField2.default, { ui: _this.props.ui, getVal: _this.props.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.props.handler });
				case 'textarea':
					return _react2.default.createElement(_UiTextArea2.default, { ui: _this.props.ui, getVal: _this.props.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.props.handler });
				case 'singleValueListMultiple':
					return _react2.default.createElement(_UiSelectFieldMultiple2.default, { ui: _this.props.ui, useTimestamp: _this.props.useTimestamp, getVal: _this.props.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.props.handler });
				case 'singleValueList':
					return _react2.default.createElement(_UiSelectField2.default, { ui: _this.props.ui, useTimestamp: _this.props.useTimestamp, getVal: _this.props.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.props.handler });
				case 'multiValueList':
					return _react2.default.createElement(_UiMultiSelectField2.default, { ui: _this.props.ui, getVal: _this.props.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.props.handler });
				case 'autoCompelete':
					return _react2.default.createElement(_UiAutoComplete2.default, { ui: _this.props.ui, getVal: _this.props.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.props.handler, autoComHandler: _this.props.autoComHandler || "" });
				case 'number':
					return _react2.default.createElement(_UiNumberField2.default, { ui: _this.props.ui, getVal: _this.props.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.props.handler });
				case 'mobileNumber':
					return _react2.default.createElement(_UiMobileNumber2.default, { ui: _this.props.ui, getVal: _this.props.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.props.handler });
				case 'checkbox':
					return _react2.default.createElement(_UiCheckBox2.default, { ui: _this.props.ui, getVal: _this.props.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.props.handler });
				case 'email':
					return _react2.default.createElement(_UiEmailField2.default, { ui: _this.props.ui, getVal: _this.props.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.props.handler });
				case 'datePicker':
					return _react2.default.createElement(_UiDatePicker2.default, { ui: _this.props.ui, getVal: _this.props.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.props.handler });
				case 'singleFileUpload':
					return _react2.default.createElement(_UiSingleFileUpload2.default, { ui: _this.props.ui, getVal: _this.props.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.props.handler });
				case 'multiFileUpload':
					return _react2.default.createElement(_UiMultiFileUpload2.default, { ui: _this.props.ui, getVal: _this.props.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.props.handler });
				case 'pan':
					return _react2.default.createElement(_UiPanCard2.default, { ui: _this.props.ui, getVal: _this.props.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.props.handler });
				case 'aadhar':
					return _react2.default.createElement(_UiAadharCard2.default, { ui: _this.props.ui, getVal: _this.props.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.props.handler });
				case 'pinCode':
					return _react2.default.createElement(_UiPinCode2.default, { ui: _this.props.ui, getVal: _this.props.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.props.handler });
				case 'label':
					return _react2.default.createElement(_UiLabel2.default, { getVal: _this.props.getVal, item: item });
				case 'radio':
					return _react2.default.createElement(_UiRadioButton2.default, { ui: _this.props.ui, getVal: _this.props.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.props.handler });
				case 'textSearch':
					return _react2.default.createElement(_UiTextSearch2.default, { ui: _this.props.ui, getVal: _this.props.getVal, item: item, fieldErrors: _this.props.fieldErrors, handler: _this.props.handler, autoComHandler: _this.props.autoComHandler });
			}
		};

		_this.renderTable = function (item) {
			// console.log(item.tableList.hasFooter, item.tableList.footer);
			var formData = _this.props.formData;

			var footerArray = [];

			item.tableList.values.map(function (val) {
				footerArray.push(undefined);
			});

			// console.log(formData);

			if (item.tableList.hasFooter) {
				for (var i = 0; i < item.tableList.footer.length; i++) {
					// console.log(JSON.stringify(formData));
					for (var key in item.tableList.footer[i]) {
						// console.log(key);
						var array = _jsonpath2.default.query(formData, '$..' + item.tableList.footer[i][key]);
						// console.log(array);
						footerArray.splice(key + 1, 0, array.reduce(function (previousValue, currentValue) {
							return Number(previousValue) + Number(currentValue);
						}, 0));
					}
				}
			}

			// console.log(footerArray);

			return _react2.default.createElement(
				'div',
				null,
				_react2.default.createElement(
					_reactBootstrap.Table,
					{ className: 'table table-striped table-bordered', responsive: true },
					_react2.default.createElement(
						'thead',
						null,
						_react2.default.createElement(
							'tr',
							null,
							_react2.default.createElement(
								'th',
								null,
								'#'
							),
							item.tableList.header.map(function (v, i) {
								var style = {};
								if (v.style) {
									style = v.style;
								}

								return _react2.default.createElement(
									'th',
									{ style: style, key: i },
									(0, _egovCommonUtility.translate)(v.label)
								);
							}),
							!item.tableList.actionsNotRequired ? _react2.default.createElement(
								'th',
								null,
								(0, _egovCommonUtility.translate)("reports.common.action")
							) : ''
						)
					),
					_react2.default.createElement(
						'tbody',
						null,
						_this.state.values.map(function (v, i) {
							return _react2.default.createElement(
								'tr',
								{ key: i },
								_react2.default.createElement(
									'td',
									null,
									i + 1
								),
								v.map(function (v2, i2) {
									return _react2.default.createElement(
										'td',
										{ key: i2 },
										_this.renderFields(v2, _this.props.screen)
									);
								}),
								!item.tableList.actionsNotRequired ? _react2.default.createElement(
									'td',
									null,
									_react2.default.createElement(
										'div',
										{ className: 'material-icons', onClick: function onClick() {
												_this.deleteRow(i);
											} },
										'delete'
									)
								) : ''
							);
						})
					),
					item.tableList.hasFooter ? _react2.default.createElement(
						'tfoot',
						null,
						_react2.default.createElement(
							'tr',
							null,
							footerArray.map(function (val, index) {
								var value = val !== undefined ? val.toFixed(2) : '';
								return _react2.default.createElement(
									'td',
									{ key: index, className: 'text-right', style: { fontWeight: 'bold' } },
									value ? 'Total: ' + value : ''
								);
							}),
							!item.tableList.actionsNotRequired ? _react2.default.createElement('td', null) : ''
						)
					) : ''
				),
				!item.tableList.actionsNotRequired ? _react2.default.createElement(
					'div',
					{ style: { "textAlign": "right" } },
					_react2.default.createElement(_RaisedButton2.default, { label: (0, _egovCommonUtility.translate)("pgr.lbl.add"), primary: true, onClick: function onClick() {
							_this.addNewRow();
						} })
				) : ''
			);
		};

		_this.state = {
			values: [],
			list: [],
			index: 0,
			jsonPath: "",
			isintialLoad: false
		};
		return _this;
	}

	_createClass(UiMultiFieldTable, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			this.setState({
				values: [this.props.item.tableList.values],
				list: Object.assign([], this.props.item.tableList.values),
				jsonPath: this.props.item.jsonPath
			});
		}
	}, {
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(nextProps) {
			var valuesArray = [];
			var isintialLoad = this.state.isintialLoad;

			if (nextProps.formData) {
				var numberOfRowsArray = _lodash2.default.get(nextProps.formData, this.props.item.jsonPath);
				var listValues = _lodash2.default.cloneDeep(this.props.item.tableList.values);
				if (numberOfRowsArray && numberOfRowsArray.length > 0 && !isintialLoad) {
					for (var i = 0; i < numberOfRowsArray.length; i++) {
						var listValuesArray = _lodash2.default.cloneDeep(listValues);
						for (var j = 0; j < listValuesArray.length; j++) {
							listValuesArray[j].jsonPath = listValuesArray[j].jsonPath.replace(this.state.jsonPath + "[" + 0 + "]", this.state.jsonPath + "[" + i + "]");
						}
						valuesArray.push(listValuesArray);
					}
					this.setState({
						values: valuesArray,
						index: numberOfRowsArray ? numberOfRowsArray.length - 1 : 0,
						isintialLoad: true
					});
				} else if (numberOfRowsArray && numberOfRowsArray.length == 0) {
					this.setState({
						isintialLoad: true
					});
				}
			}
		}
	}, {
		key: 'addNewRow',
		value: function addNewRow() {
			var _this2 = this;

			var val = JSON.parse(JSON.stringify(this.state.list));
			var regexp = new RegExp(this.state.jsonPath + "\\[\\d{1}\\]", "g");
			this.setState({
				index: this.state.index + 1
			}, function () {
				for (var i = 0; i < val.length; i++) {
					//val[i].jsonPath = val[i].jsonPath.replace(regexp, this.state.jsonPath + "[" + this.state.index + "]")
					val[i].jsonPath = val[i].jsonPath.replace(_this2.state.jsonPath + "[" + 0 + "]", _this2.state.jsonPath + "[" + _this2.state.index + "]");
				}
				var values = [].concat(_toConsumableArray(_this2.state.values));
				values.push(val);
				_this2.setState({
					values: values
				});
			});
		}
	}, {
		key: 'render',
		value: function render() {
			return _react2.default.createElement(
				'div',
				null,
				this.renderTable(this.props.item)
			);
		}
	}]);

	return UiMultiFieldTable;
}(_react.Component);

var mapStateToProps = function mapStateToProps(state) {
	return {
		formData: state.frameworkForm.form
	};
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
	return {
		setFormData: function setFormData(data) {
			dispatch({ type: "SET_FORM_DATA", data: data });
		}
	};
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(UiMultiFieldTable);