'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _TextField = require('material-ui/TextField');

var _TextField2 = _interopRequireDefault(_TextField);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var UiNumberField = function (_Component) {
	_inherits(UiNumberField, _Component);

	function UiNumberField(props) {
		_classCallCheck(this, UiNumberField);

		var _this = _possibleConstructorReturn(this, (UiNumberField.__proto__ || Object.getPrototypeOf(UiNumberField)).call(this, props));

		_this.renderNumberBox = function (item) {
			switch (_this.props.ui) {
				case 'google':
					return _react2.default.createElement(_TextField2.default, {
						id: item.jsonPath.split(".").join("-"),
						className: 'custom-form-control-for-textfield',
						floatingLabelStyle: { "color": item.isDisabled ? "#A9A9A9" : "#696969", "fontSize": "20px", "white-space": "nowrap" },
						inputStyle: { "color": "#5F5C57" },
						floatingLabelFixed: true,
						style: { "display": item.hide ? 'none' : 'inline-block' },
						errorStyle: { "float": "left" },
						fullWidth: true,
						type: 'number',
						floatingLabelText: _react2.default.createElement(
							'span',
							null,
							item.label,
							' ',
							_react2.default.createElement(
								'span',
								{ style: { "color": "#FF0000" } },
								item.isRequired ? " *" : ""
							)
						),
						value: _this.props.getVal(item.jsonPath),
						disabled: item.isDisabled,
						errorText: _this.props.fieldErrors[item.jsonPath],
						onChange: function onChange(e) {
							if (e.target.value && !/^\d.*$/.test(e.target.value)) return;
							var val = e.target.value;
							if (val && item.isNumber) {
								val = Number(val);
							};
							_this.props.handler({ target: { value: val } }, item.jsonPath, item.isRequired ? true : false, item.pattern, item.requiredErrMsg, item.patternErrMsg, item.expression, item.expressionMsg);
						} });
			}
		};

		return _this;
	}

	_createClass(UiNumberField, [{
		key: 'render',
		value: function render() {
			return this.renderNumberBox(this.props.item);
		}
	}]);

	return UiNumberField;
}(_react.Component);

exports.default = UiNumberField;