'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactBootstrap = require('react-bootstrap');

var _TextField = require('material-ui/TextField');

var _TextField2 = _interopRequireDefault(_TextField);

var _SelectField = require('material-ui/SelectField');

var _SelectField2 = _interopRequireDefault(_SelectField);

var _MenuItem = require('material-ui/MenuItem');

var _MenuItem2 = _interopRequireDefault(_MenuItem);

var _DatePicker = require('material-ui/DatePicker');

var _DatePicker2 = _interopRequireDefault(_DatePicker);

var _TimePicker = require('material-ui/TimePicker');

var _TimePicker2 = _interopRequireDefault(_TimePicker);

var _common = require('./common');

var _api = require('./api');

var _api2 = _interopRequireDefault(_api);

var _CircularProgress = require('material-ui/CircularProgress');

var _CircularProgress2 = _interopRequireDefault(_CircularProgress);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _AutoComplete = require('material-ui/AutoComplete');

var _AutoComplete2 = _interopRequireDefault(_AutoComplete);

var _Checkbox = require('material-ui/Checkbox');

var _Checkbox2 = _interopRequireDefault(_Checkbox);

var _RadioButton = require('material-ui/RadioButton');

var _materialUi = require('./styles/material-ui');

var _materialUi2 = _interopRequireDefault(_materialUi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Fields = function (_Component) {
  _inherits(Fields, _Component);

  function Fields(props) {
    _classCallCheck(this, Fields);

    var _this2 = _possibleConstructorReturn(this, (Fields.__proto__ || Object.getPrototypeOf(Fields)).call(this, props));

    _this2.pad = function (n) {
      return n < 10 ? "0" + n : n;
    };

    _this2.renderFields = function (obj) {
      var des = (0, _common.translate)(obj.description);
      var mandatory = obj.required == true ? " *" : "";
      var description = des + mandatory;
      if (obj.variable) {
        switch (obj.dataType) {
          case "string":
            if (obj.url) return _react2.default.createElement(CustomAutoComplete, { obj: obj, description: description, value: _this2.props.value, handler: _this2.props.handler });
            return _react2.default.createElement(
              _reactBootstrap.Col,
              { xs: 12, sm: 4, md: 3, lg: 3 },
              _react2.default.createElement(_TextField2.default, { className: 'custom-form-control-for-textfield', fullWidth: true, ref: obj.code, floatingLabelText: description, value: _this2.props.value, onChange: function onChange(e, newValue) {
                  return _this2.props.handler(newValue, obj.code, obj.required, '');
                }, errorText: _this2.props.error ? _this2.props.error : "", maxLength: '50' })
            );
          case "checkbox":
            return _react2.default.createElement(
              _reactBootstrap.Col,
              { xs: 12, sm: 12, md: 12, lg: 12 },
              _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(_Checkbox2.default, { label: description, checked: _this2.props.value ? _this2.props.value : false, onCheck: function onCheck(e, isChecked) {
                    _this2.props.handler(isChecked ? true : "", obj.code, obj.required, '');
                  } }),
                _this2.props.error ? _react2.default.createElement(
                  'span',
                  { className: 'errorMsg' },
                  _this2.props.error
                ) : null
              )
            );
          case "radiogroup":
            return _react2.default.createElement(
              _reactBootstrap.Col,
              { xs: 12, sm: 12, md: 12, lg: 12 },
              _react2.default.createElement(
                'div',
                { className: 'radio-group' },
                _react2.default.createElement(
                  'div',
                  { className: 'field-title' },
                  obj.description,
                  obj.required ? " *" : "",
                  _this2.props.error ? _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(
                      'span',
                      { className: 'errorMsg' },
                      _this2.props.error
                    )
                  ) : null
                ),
                _react2.default.createElement(
                  _RadioButton.RadioButtonGroup,
                  { name: obj.code, defaultSelected: _this2.props.value, className: 'row', onChange: function onChange(e, value) {
                      _this2.props.handler(value, obj.code, obj.required, '');
                    } },
                  obj.attribValues && obj.attribValues.map(function (dd, index) {
                    return dd.isActive ? _react2.default.createElement(_RadioButton.RadioButton, { className: 'col-md-4', key: index, value: dd.key, label: (0, _common.translate)(dd.name) }) : null;
                  })
                )
              )
            );
          case "textarea":
            return _react2.default.createElement(
              _reactBootstrap.Col,
              { xs: 12, sm: 4, md: 3, lg: 3 },
              _react2.default.createElement(_TextField2.default, { className: 'custom-form-control-for-textarea', fullWidth: true, ref: obj.code, multiLine: true, rowsMax: 4, floatingLabelText: description, value: _this2.props.value, onChange: function onChange(e, newValue) {
                  return _this2.props.handler(newValue, obj.code, obj.required, '');
                }, errorText: _this2.props.error ? _this2.props.error : "", maxLength: '500' })
            );
          case "integer":
            return _react2.default.createElement(
              _reactBootstrap.Col,
              { xs: 12, sm: 4, md: 3, lg: 3 },
              _react2.default.createElement(_TextField2.default, { className: 'custom-form-control-for-textfield', fullWidth: true, ref: obj.code, floatingLabelText: description, value: _this2.props.value, onChange: function onChange(e, newValue) {
                  return _this2.props.handler(newValue, obj.code, obj.required, /^[+-]?\d+$/);
                }, errorText: _this2.props.error ? _this2.props.error : "", maxLength: '10' })
            );
          case "long":
            return _react2.default.createElement(
              _reactBootstrap.Col,
              { xs: 12, sm: 4, md: 3, lg: 3 },
              _react2.default.createElement(_TextField2.default, { className: 'custom-form-control-for-textfield', fullWidth: true, ref: obj.code, floatingLabelText: description, value: _this2.props.value, onChange: function onChange(e, newValue) {
                  return _this2.props.handler(newValue, obj.code, obj.required, /^[+-]?\d+$/);
                }, errorText: _this2.props.error ? _this2.props.error : "", maxLength: '18' })
            );
          case "double":
            return _react2.default.createElement(
              _reactBootstrap.Col,
              { xs: 12, sm: 4, md: 3, lg: 3 },
              _react2.default.createElement(_TextField2.default, { className: 'custom-form-control-for-textfield', fullWidth: true, ref: obj.code, floatingLabelText: description, value: _this2.props.value, onChange: function onChange(e, newValue) {
                  return _this2.props.handler(newValue, obj.code, obj.required, /^[+-]?\d+(\.\d+)?$/);
                }, errorText: _this2.props.error ? _this2.props.error : "" })
            );
          case "date":
            return _react2.default.createElement(
              _reactBootstrap.Col,
              { xs: 12, sm: 4, md: 3, lg: 3 },
              _react2.default.createElement(_DatePicker2.default, { className: 'custom-form-control-for-textfield', fullWidth: true, ref: obj.code, floatingLabelText: description, value: _this2.props.value ? new Date(_this2.props.value.split('-')[2], _this2.props.value.split('-')[1] - 1, _this2.props.value.split('-')[0]) : '',
                formatDate: function formatDate(date) {
                  var dateObj = new Date(date);
                  var year = dateObj.getFullYear();
                  var month = dateObj.getMonth() + 1;
                  var dt = dateObj.getDate();
                  dt = dt < 10 ? '0' + dt : dt;
                  month = month < 10 ? '0' + month : month;
                  return dt + '-' + month + '-' + year;
                },
                onChange: function onChange(nothing, date) {
                  var dateObj = new Date(date);
                  var year = dateObj.getFullYear();
                  var month = dateObj.getMonth() + 1;
                  var dt = dateObj.getDate();
                  dt = dt < 10 ? '0' + dt : dt;
                  month = month < 10 ? '0' + month : month;
                  _this2.props.handler(dt + '-' + month + '-' + year, obj.code, obj.required, '');
                }
              })
            );
          case "datetime":
            //console.log(this.props.value, this.props.value.split(' '));
            var date = void 0,
                time = void 0;
            if (_this2.props.value) {
              date = _this2.props.value.split(' ')[0];
              time = _this2.props.value.split(' ')[1];
              //console.log((this.props.value && date && time) ? new Date(date.split('-')[2], date.split('-')[1]-1, date.split('-')[0], time.split(':')[0], time.split(':')[1], time.split(':')[2]) : '');
            }
            return _react2.default.createElement(
              _reactBootstrap.Col,
              { xs: 12, sm: 4, md: 3, lg: 3 },
              _react2.default.createElement(_DatePicker2.default, { className: 'custom-form-control-for-textfield', fullWidth: true, ref: obj.code, floatingLabelText: description, value: _this2.props.value && date && time ? new Date(date.split('-')[2], date.split('-')[1] - 1, date.split('-')[0], time.split(':')[0], time.split(':')[1], time.split(':')[2]) : '',
                formatDate: function formatDate(date) {
                  return _this2.props.value;
                },
                onChange: function onChange(nothing, date) {
                  var dateObj = new Date(date);
                  var year = dateObj.getFullYear();
                  var month = dateObj.getMonth() + 1;
                  var dt = dateObj.getDate();
                  dt = dt < 10 ? '0' + dt : dt;
                  month = month < 10 ? '0' + month : month;
                  _this2.props.handler(dt + '-' + month + '-' + year, obj.code, obj.required, '');
                  _this2.refs[obj.code + 'timepicker'].openDialog();
                } }),
              _react2.default.createElement(_TimePicker2.default, { ref: obj.code + 'timepicker', format: '24hr', style: { display: 'none' }, onChange: function onChange(nothing, time) {
                  _this2.props.handler(_this2.props.value + ' ' + _this2.pad(time.getHours()) + ':' + _this2.pad(time.getMinutes()) + ':00', obj.code, obj.required, '');
                } })
            );
          case "singlevaluelist":
            if (obj.url) return _react2.default.createElement(CustomSelectField, { obj: obj, description: description, isMultiple: false, value: _this2.props.value, handler: _this2.props.handler });
            return _react2.default.createElement(
              _reactBootstrap.Col,
              { xs: 12, sm: 4, md: 3, lg: 3 },
              _react2.default.createElement(
                _SelectField2.default,
                { className: 'custom-form-control-for-select', hintText: 'Select', fullWidth: true, ref: obj.code, floatingLabelStyle: _materialUi2.default.floatingLabelStyle, floatingLabelFixed: true, floatingLabelText: description, value: _this2.props.value, onChange: function onChange(event, key, value) {
                    _this2.props.handler(value, obj.code, obj.required, "");
                  } },
                _react2.default.createElement(_MenuItem2.default, { value: '', primaryText: 'Select' }),
                obj.attribValues.map(function (dd, index) {
                  return dd.isActive ? _react2.default.createElement(_MenuItem2.default, { value: (0, _common.translate)(dd.key), key: index, primaryText: (0, _common.translate)(dd.name) }) : null;
                })
              )
            );
          case "multivaluelist":
            if (obj.url) return _react2.default.createElement(CustomSelectField, { obj: obj, description: description, isMultiple: true, value: _this2.props.value, handler: _this2.props.handler });
            return _react2.default.createElement(
              _reactBootstrap.Col,
              { xs: 12, sm: 4, md: 3, lg: 3 },
              _react2.default.createElement(
                _SelectField2.default,
                { className: 'custom-form-control-for-select', hintText: 'Select', fullWidth: true, ref: obj.code, floatingLabelStyle: _materialUi2.default.floatingLabelStyle, floatingLabelFixed: true, multiple: true, floatingLabelText: description, value: _this2.props.value, onChange: function onChange(event, key, value) {
                    _this2.props.handler(value, obj.code, obj.required, "");
                  } },
                obj.attribValues && obj.attribValues.map(function (dd, index) {
                  return dd.isActive ? _react2.default.createElement(_MenuItem2.default, { value: (0, _common.translate)(dd.key), insetChildren: true,
                    checked: _this2.props.value && _this2.props.value.indexOf(dd.key) > -1, key: index, primaryText: (0, _common.translate)(dd.name) }) : null;
                })
              )
            );
          case "file":
            return _react2.default.createElement(
              _reactBootstrap.Col,
              { xs: 12, md: 3 },
              _react2.default.createElement(
                'div',
                null,
                description
              ),
              _react2.default.createElement('input', { type: 'file', className: 'form-control' })
            );
          case "multifile":
            return _react2.default.createElement(
              _reactBootstrap.Col,
              { xs: 12, sm: 4, md: 3, lg: 3 },
              _react2.default.createElement(
                'div',
                null,
                description
              ),
              _react2.default.createElement('input', { type: 'file', multiple: true, className: 'form-control' })
            );
        }
      } else {
        return _react2.default.createElement(
          _reactBootstrap.Col,
          { xs: 12, md: 3 },
          des
        );
      }
    };

    _this2.state = {};
    return _this2;
  }

  _createClass(Fields, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState) {
      //console.log('nextState', nextState, this.state);
      //console.log('nextProps', nextProps, this.props);
      //console.log('ItShouldUpdate', !(_.isEqual(this.props, nextProps) && _.isEqual(this.state, nextState)));
      return !(_lodash2.default.isEqual(this.props, nextProps) && _lodash2.default.isEqual(this.state, nextState));
    }
  }, {
    key: 'render',
    value: function render() {
      return this.renderFields(this.props.obj);
    }
  }]);

  return Fields;
}(_react.Component);

exports.default = Fields;

var CustomAutoComplete = function (_Component2) {
  _inherits(CustomAutoComplete, _Component2);

  function CustomAutoComplete() {
    _classCallCheck(this, CustomAutoComplete);

    var _this3 = _possibleConstructorReturn(this, (CustomAutoComplete.__proto__ || Object.getPrototypeOf(CustomAutoComplete)).call(this));

    _this3.onKeyUpHandler = function (e) {
      var obj = _this3.props.obj;
      if (e.target.value && e.target.value !== _this3.state.prevText) {

        _this3.setState({ prevText: e.target.value });
        _this3.props.handler("", obj.code, obj.required, "");
        var urlsPart = obj.url.split("?");
        var queryParams = {};
        var url = "";
        var _this = _this3;
        if (urlsPart.length === 2) {
          queryParams = JSON.parse('{"' + urlsPart[1].replace(/&/g, '","').replace(/=/g, '":"') + '"}', function (key, value) {
            return key === "" ? value : decodeURIComponent(value);
          });
          url = urlsPart[0];
        } else url = _this3.props.obj.url;

        Object.keys(queryParams).map(function (key) {
          if (!queryParams[key]) {
            queryParams[key] = e.target.value;
            return;
          }
        });

        _api2.default.commonApiGet(url, queryParams).then(function (response) {
          if (!response instanceof Array) {
            var jsonArryKey = Object.keys(response).length > 1 ? Object.keys(response)[1] : "";
            if (jsonArryKey) {
              response = response[jsonArryKey];
            } else {
              response = [];
            }
          }

          var searchList = [];
          response.map(function (item) {
            searchList.push({ key: item.id, name: item.name });
          });
          _this.setState({ searchList: searchList });
        }, function (err) {});
      }
    };

    _this3.state = {
      searchList: [],
      searchText: "",
      prevText: "",
      searchListConfig: {
        text: 'name',
        value: 'key'
      }
    };
    return _this3;
  }

  _createClass(CustomAutoComplete, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState) {
      //console.log('nextState', nextState, this.state);
      //console.log('nextProps', nextProps, this.props);
      //console.log('ItShouldUpdate', !(_.isEqual(this.props, nextProps) && _.isEqual(this.state, nextState)));
      return !(_lodash2.default.isEqual(this.props, nextProps) && _lodash2.default.isEqual(this.state, nextState));
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      var obj = this.props.obj;

      return _react2.default.createElement(
        _reactBootstrap.Col,
        { xs: 12, sm: 4, md: 3, lg: 3 },
        _react2.default.createElement(_AutoComplete2.default, {
          hintText: this.props.description,
          ref: obj.code,
          fullWidth: true,
          floatingLabelText: this.props.description,
          filter: _AutoComplete2.default.noFilter,
          dataSource: this.state.searchList,
          dataSourceConfig: this.state.searchListConfig,
          menuStyle: { overflow: 'auto', maxHeight: '150px' }, listStyle: { overflow: 'auto', lineHeight: '36px', fontSize: '14px' },
          onKeyUp: this.onKeyUpHandler,
          value: this.props.value,
          onNewRequest: function onNewRequest(item, index) {
            if (index === -1) {
              _this4.setState({ searchText: '' });
            } else {
              _this4.setState({ prevText: item.name });
              _this4.props.handler(item.key, obj.code, obj.required, "");
            }
          }
        })
      );
    }
  }]);

  return CustomAutoComplete;
}(_react.Component);

var CustomSelectField = function (_Component3) {
  _inherits(CustomSelectField, _Component3);

  function CustomSelectField() {
    _classCallCheck(this, CustomSelectField);

    var _this5 = _possibleConstructorReturn(this, (CustomSelectField.__proto__ || Object.getPrototypeOf(CustomSelectField)).call(this));

    _this5.renderAttributes = function (obj) {
      var urlsPart = obj.url.split("?");
      var queryParams = {};
      var url = "";
      var _this = _this5;
      if (urlsPart.length === 2) {
        queryParams = JSON.parse('{"' + urlsPart[1].replace(/&/g, '","').replace(/=/g, '":"') + '"}', function (key, value) {
          return key === "" ? value : decodeURIComponent(value);
        });
        url = urlsPart[0];
      } else url = obj.url;
      _api2.default.commonApiPost(url, queryParams, {}).then(function (response) {
        var jsonArryKey = Object.keys(response).length > 1 ? Object.keys(response)[1] : "";
        if (jsonArryKey) {
          var attribValues = [];
          response[jsonArryKey].map(function (item) {
            attribValues.push({ key: item.id, name: item.name });
          });
          _this.setState({ attribValues: attribValues, isLoading: false, loadingText: "" });
        }
      }, function (err) {});
    };

    _this5.renderMenuItems = function (props) {
      return _this5.state.attribValues.map(function (dd, index) {
        if (_this5.props.isMultiple) return _react2.default.createElement(_MenuItem2.default, { value: (0, _common.translate)(dd.key), insetChildren: true,
          checked: _this5.props.value && _this5.props.value.indexOf(dd.key) > -1, key: index, primaryText: (0, _common.translate)(dd.name) });else return _react2.default.createElement(_MenuItem2.default, { value: (0, _common.translate)(dd.key), key: index, primaryText: (0, _common.translate)(dd.name) });
      });
    };

    _this5.state = {
      attribValues: [],
      loadingText: "",
      isLoading: true
    };
    return _this5;
  }

  _createClass(CustomSelectField, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.renderAttributes(this.props.obj);
      this.setState({ loadingText: (0, _common.translate)("csv.lbl.loading") });
    }
  }, {
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState) {
      //console.log('nextState', nextState, this.state);
      //console.log('nextProps', nextProps, this.props);
      //console.log('ItShouldUpdate', !(_.isEqual(this.props, nextProps) && _.isEqual(this.state, nextState)));
      return !(_lodash2.default.isEqual(this.props, nextProps) && _lodash2.default.isEqual(this.state, nextState));
    }
  }, {
    key: 'render',
    value: function render() {
      var _this6 = this;

      var obj = this.props.obj;
      var description = this.props.description;
      var menuItems = this.renderMenuItems(this.props.isMultiple) || null;
      return _react2.default.createElement(
        _reactBootstrap.Col,
        { xs: 12, sm: 4, md: 3, lg: 3 },
        _react2.default.createElement(
          _SelectField2.default,
          { fullWidth: true, ref: obj.code, multiple: this.props.isMultiple,
            floatingLabelText: description, floatingLabelFixed: this.state.isLoading,
            hintText: this.state.loadingText, value: this.props.value, onChange: function onChange(event, key, value) {
              _this6.props.handler(value, obj.code, obj.required, "");
            } },
          menuItems
        )
      );
    }
  }]);

  return CustomSelectField;
}(_react.Component);