'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactBootstrap = require('react-bootstrap');

var _materialUi = require('../styles/material-ui');

var _materialUi2 = _interopRequireDefault(_materialUi);

var _Card = require('material-ui/Card');

var _common = require('../common');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var customStyles = {
  titleStyle: {
    paddingBottom: 0
  }
};

var PdfViewer = function (_Component) {
  _inherits(PdfViewer, _Component);

  function PdfViewer(props) {
    _classCallCheck(this, PdfViewer);

    var _this = _possibleConstructorReturn(this, (PdfViewer.__proto__ || Object.getPrototypeOf(PdfViewer)).call(this, props));

    _this.state = {
      pdfData: undefined
    };
    return _this;
  }

  _createClass(PdfViewer, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactBootstrap.Grid,
        { style: _materialUi2.default.fullWidth },
        _react2.default.createElement(
          _Card.Card,
          { style: _materialUi2.default.marginStyle },
          _react2.default.createElement(_Card.CardTitle, { title: (0, _common.translate)(this.props.title), style: customStyles.titleStyle }),
          _react2.default.createElement(
            _Card.CardText,
            null,
            _react2.default.createElement('iframe', { title: (0, _common.translate)(this.props.title), type: 'application/pdf', style: { width: '100%' }, height: '500', src: this.props.pdfData }),
            this.props.children
          )
        )
      );
    }
  }]);

  return PdfViewer;
}(_react.Component);

exports.default = PdfViewer;