swagger: '2.0'
# eGSP YAML Template Version: 1.0 
# This is a version number for the YAML template. This must not be changed.

info:
  version: 1.0.0
  ######################################################
  # All API's are POST. _create,_search,_update stands for post,get and put. RequestInfo will be part of body.*
  # All _search will be synchronous and all _create and _update will be asynchronous*.
  # RequestInfo and ResponseInfo object should be reffered from Common*.
  # In _search API, tenantId should be passed in query param. In _create/_update, tenantId should be passed in the model.
  # Readonly means that even if these fields are passed in the request, it will be ignored in create/update and will not be added/updated in the entities. The readonly fields might be passed to the _search API's to make use of fields for the search Query API. while calling _search API's even mandatory fields might not be available, it is mandatory only in the _create API's*.
  # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message.
  # Definition must start with Upper case followed by camel case.
  # Every model will have tenantId. Validate tenantId on create.
  # Parameter name must start with small case followed by camel case.
  # Path must be in small case.
  ######################################################
  
  title: Water Charges Management-Master APIs
  description: |
    APIs available for Water Charges Management Usage Type Master definitions.
  contact:
    name: Rishi
host: phoenix-qa.egovernments.org
schemes:
  - https
basePath: '/v1/egov-watercharges-masters/[API endpoint]'

paths:
  /usageType/_search:
  ######################################################
  # Will be synchronous.
  # tenantId should be passed in query param.
  ######################################################
    post:
      summary: Get the list of usage types in the system or a particular usage type.
      description: Return(s) `UsageType(s)` for the given input params.
      parameters:
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
        - $ref: "#/parameters/sortUsageTypes"
        - name: name
          in: query
          description: Name of the usage type.
          required: false
          type: string
          format: varchar
          minLength: 0
          maxLength: 100
          exclusiveMinimum: true
          exclusiveMaximum: false 
        - name: code
          in: query
          description: Unique code of the usage type.
          required: false
          type: string
          minLength: 0
          maxLength: 20
          exclusiveMinimum: true
          exclusiveMaximum: false 
        - name: id
          in: query
          description: Unique Id of usage type
          required: false
          type: array
          items: 
            type: integer
          format: int64
          maxItems: 50
        - name: active
          in: query
          description: True will be set in cases where only active usage types are needed and False will be set when inactive usage types are needed and no value will be set when all usage types are needed.
          required: false
          type: boolean
          format: varchar
          default: true
          allowEmptyValue: true
      responses:
      ###################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message.
      ###################################################
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/UsageTypeRes"
        400:
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

      tags: 
       - Usage Type
       
  /usageType/_create:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  # Must support bulk create.
  ######################################################
    post:
      summary: Create new Usage Type(s).
      description: API to create new usage type(s).
      parameters:
        - name: usageTypes
          in: body
          description: Details for the new usage types + RequestInfo meta data.
          required: true
          schema:
            $ref: '#/definitions/UsageTypeReq'
      
      responses:
      ################################################### All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ###################################################
        201:
          description: Usage Type created sucessfully.
          schema:
            $ref: '#/definitions/UsageTypeRes'
        400:
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      tags:
        - Usage Type      
  
  /usageType/_update:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  # Must support bulk update.
  ######################################################
   post:
      summary: Update usage type(s).
      description: This API will update usage type(s) based on code.
      parameters:
        - name: usageTypes
          in: body
          description: Request header for the usage type with new set of values.
          required: true
          schema:
            $ref: '#/definitions/UsageTypeReq'
      responses:
      ################################################### All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ###################################################
        200:
          description: Usage Type updated.
          schema:
            $ref: '#/definitions/UsageTypeRes'
        400:
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      tags:
        - Usage Type
        
definitions:
########################################################
#RequestInfo and ResponseInfo object should be reffered from Common.
#Definition must start with Upper case followed by camel case.
#Every model will have tenantId
########################################################
  UsageType:
    type: object
    properties:
      id:
       type: integer
       format: int64
       description : Unique identifier of the usage type.
      name:
        type: string
        description: Unique Usage name.
        minLength: 3
        maxLength: 100
      code:
        type: string
        description: Unique code of the usage type. Based on the configration parameters, usage code can be provided from the front end OR can be generated by the system.
        minLength: 3
        maxLength: 20
        readOnly: true
      description:
        type: string
        description: Brief description of Usage Type .
        maxLength: 250
      active:
        type: boolean
        format: varchar
        description: TRUE for active usage type and FALSE for inactive usage type.
      createdBy:
        type: integer
        format: int64
        description: Id of the user who created the record.
      createdDate:
        type: string
        format: date
        description: Date on which the master data was added into the system.
      lastModifiedBy:
        type: integer
        format: int64
        description: Id of the user who last modified the record.
      lastModifiedDate:
        type: string
        format: date
        description: Date on which the master data was last modified.  
      tenantId:
        type: string
        readOnly: true
        description: Unique Identifier of the tenant 
    required:
      - name
      - code 
      - active
      - tenantId
      
  UsageTypeRes:
    type: object
    properties:
      ResponseInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      UsageTypes:
        type: array
        maximum: 500
        items: 
         $ref: '#/definitions/UsageType' 
  UsageTypeReq:
    type: object
    properties:
      RequestInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      UsageTypes:
        type: array
        minimum: 1
        maximum: 100
        items:
          $ref: '#/definitions/UsageType'   
    required:
      - RequestInfo
      - UsageTypes    

parameters:
#########################################################
#Parameter name must start with small case followed by camel case.
#########################################################
  sortUsageTypes:
    name: sort
    in: query
    description: Usage types results will be sorted by name ascending by default if this parameter is not provided.
    type: array
    uniqueItems: true
    minItems: 1
    maxItems: 2
    collectionFormat: pipes
    items:
      type: string
      pattern: '[-+](code|name)'
    default:
      - +name

tags:
  - name: Usage Type
    description: APIs required to for Usage Type Master.
