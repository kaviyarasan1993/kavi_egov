  swagger: '2.0'
  info:
    version: 1.0.0
    title: Water Charges Management Service (WCMS) Master APIs
    description: |
      APIs available for WCMS Masters
        - Create, Update and Search for PipeSize
        - Create, Update and Search for Donation
        - Create, Update and Search for DocumentType
        - Create, Update and Search for SourceType
        - Create, Update and Search for SupplyType
        - Search for ConnectionType
        - Create, Update and Search for Meter Cost
        - Create, Update and Search for Meter Status
        - Search for ApplicationType
        - Create, Update and Search for mapping between DocumentType-ApplicationType
        - Create, Update and Search for Storage Reservoir Master
        - Create, Update and Search for Water Treatment Plant Master
        - Create, Update and Search for Meter Water Rates Master
        - Create, Update and Search for Non Meter Water Rates Master
        - Create, Update and Search for GapCode Master
        - Create, Update and Search for UsageType Master
        - Create, Update and Search for Service Charges Master 
        
    contact:
      name: Rishi
      email: rishi@egovernments.org
  schemes:
    - https
  basePath: '/wcms/masters/[API endpoint]'
  x-common-path: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml'
  x-api-id: 'org.egov.wcms'

  paths:
  # PipeSize  API
    /pipesizes/_create:
      post:
        summary: Create new PipeSize(s).
        description:
              To create new PipeSize(s) in the system.API supports bulk creation and Code is internally generate by the system as sequence number. 
              PipeSize  with combination of tenantId,SizeInmm duplication will not be allowed.
              To create one PipeSize, please pass array with one PipeSize object. 
                 
        tags:
          - Pipe Size
        parameters:
          - name: Pipe Size
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/PipeSizeReq'
        responses:
          '201':
            description: Pipe size (s) created successfully.
            schema:
              $ref: "#/definitions/PipeSizeRes"
          '400':
            description: PipeSize(s) creation failed.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

    /pipesizes/_update:
      post:
        summary: Update PipeSize(s)
        description: API supports bulk update , 
            Following rule apply -
                 PipeSize will be considered to update only if code exists and valid,
             updates existing values based on code.
        tags:
          - Pipe Size
        parameters:
          - name: Pipe Size
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/PipeSizeReq'
        responses:
          '200':
            description: Pipe size(s) updated successfully.
            schema:
              $ref: "#/definitions/PipeSizeRes"
          '400':
            description: Update Pipe Size(s) failed.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

    /pipesizes/_search:
      post:
        summary: Get the list of pipeSize(s) 
        description: |
          Search and get pipesize(s) based on defined search criteria.
          By default results will be sorted by PipeSize Code.
          
           In case multiple parameters are passed PipeSize(s) will be searched as an AND combination of all the parameters.
          
        tags:
          - Pipe Size
        parameters:
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
          - $ref: "#/parameters/ids"
          - $ref: "#/parameters/code"
          - $ref: "#/parameters/sizeInMilimeter"
          - $ref: "#/parameters/active"
          - $ref: "#/parameters/pageSize"
          - $ref: "#/parameters/pageNumber"
        responses:
          200: 
            description: Successful response
            schema:
              $ref: '#/definitions/PipeSizeRes'
          400:
            description: Invalid input
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
  
  # Document Type API
    /documenttypes/_create:
      post:
        summary: Create new DocumentType(s).
        description: To create new DocumenType(s) in the system.API supports bulk creation and Code is internally generate by the system as sequence number. 
              DocumentType  with combination of tenantId,name duplication will not be allowed.
              To create one DocumentType, please pass array with one DocumentType object. 
        tags:
          - DocumentType
        parameters:
          - name: DocumentType
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/DocumentTypeReq'
        responses:
          '201':
            description: Document Type(s) created successfully.
            schema:
              $ref: "#/definitions/DocumentTypesRes"
          '400':
            description: Document type creation failed.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

    /documenttypes/_update:
      post:
        summary: Update DocumentType(s)
        description: API supports bulk update , 
            Following rule apply -
                 DocumentType will be considered to update only if code exists and valid,
             updates existing values based on code.
        tags:
          - DocumentType
        parameters:
          - name: DocumentType
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/DocumentTypeReq'
        responses:
          '200':
            description: Document Type(s) updated successfully.
            schema:
              $ref: "#/definitions/DocumentTypesRes"
          '400':
            description: Document type updation failed.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

    /documenttypse/_search:
      post:
        summary: Get the list of documentType(s) 
        description: |
          Search and get documentType(s) based on defined search criteria.
          By default results will be sorted by DocumentType Code.
          
           In case multiple parameters are passed DocumentType(s) will be searched as an AND combination of all the parameters.
        tags:
          - DocumentType
        parameters:
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
          - $ref: "#/parameters/ids"
          - $ref: "#/parameters/code"
          - $ref: "#/parameters/name"
          - $ref: "#/parameters/active"
          - $ref: "#/parameters/pageSize"
          - $ref: "#/parameters/pageNumber"
        responses:
          200: 
            description: Successful response
            schema:
              $ref: '#/definitions/DocumentTypesRes'
          400:
            description: Invalid input
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
  
  # Source Type API
    /sourcetypes/_search:
      post:
        summary: Get the list of sourceType(s) 
        description: |
               Search and get sourceType(s) based on defined search criteria.
                By default results will be sorted by SourceType Code.
                In case multiple parameters are passed SourceType(s) will be searched as an AND combination of all the parameters.
        tags:
          - SourceType
        parameters:
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
          - $ref: "#/parameters/ids"
          - $ref: "#/parameters/code"
          - $ref: "#/parameters/name"
          - $ref: "#/parameters/pageSize"
          - $ref: "#/parameters/pageNumber"
        responses:
          200: 
            description: Successful response
            schema:
              $ref: '#/definitions/SourceTypesRes'
          400:
            description: Invalid input
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
              
    /sourcetypes/_create:
      post:
        summary: Create new SourceType(s).
        description: To create new SourceType(s) in the system.API supports bulk creation and Code is internally generate by the system as sequence number. 
              SourceType  with combination of tenantId,name duplication will not be allowed.
              To create one SourceType, please pass array with one SourceType object. 
        tags:
          - SourceType
        parameters:
          - name: SourceType
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/SourceTypeReq'
        responses:
          '201':
            description: Source Type(s) created successfully.
            schema:
              $ref: "#/definitions/SourceTypesRes"
          '400':
            description: Source type(s) creation failed.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
              
    /sourcetypes/_update:
      post:
        summary: Update SourceType(s)
        description: API supports bulk update , 
            Following rule apply -
                 SourceType will be considered to update only if code exists and valid,
                  updates existing values based on code.
        tags:
          - SourceType
        parameters:
          - name: SourceType
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/SourceTypeReq'
        responses:
          '200':
            description: Source Type(s) updated successfully.
            schema:
              $ref: "#/definitions/SourceTypesRes"
          '400':
            description: Source type(s) updation failed.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

    # Supply Type API
    /supplytypes/_search:
      post:
        summary: Get the list of supplyType(s) 
        description: |
               Search and get supplyType(s) based on defined search criteria.
                By default results will be sorted by SupplyeType Code.
                In case multiple parameters are passed SupplyType(s) will be searched as an AND combination of all the parameters.
        tags:
          - SupplyType
        parameters:
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
          - $ref: "#/parameters/ids"
          - $ref: "#/parameters/code"
          - $ref: "#/parameters/name"
          - $ref: "#/parameters/pageSize"
          - $ref: "#/parameters/pageNumber"
        responses:
          200: 
            description: Successful response
            schema:
              $ref: '#/definitions/SupplyTypesRes'
          400:
            description: Invalid input
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
              
    /supplytypes/_create:
      post:
        summary: Create new SupplyType(s).
        description: To create new SupplyType(s) in the system.API supports bulk creation and Code is internally generate by the system as sequence number. 
              SupplyType  with combination of tenantId,name duplication will not be allowed.
              To create one SupplyType, please pass array with one SupplyType object. 
        tags:
          - SupplyType
        parameters:
          - name: SupplyType
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/SupplyTypeReq'
        responses:
          '201':
            description: Supply Type(s) created successfully.
            schema:
              $ref: "#/definitions/SupplyTypesRes"
          '400':
            description: Supply type(s) creation failed.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
              
    /supplytypes/_update:
      post:
        summary: Update SupplyType(s)
        description: API supports bulk update , 
            Following rule apply -
                 SupplyType will be considered to update only if code exists and valid,
                  updates existing values based on code.
        tags:
          - SupplyType
        parameters:
          - name: SupplyType
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/SupplyTypeReq'
        responses:
          '200':
            description: Supply Type (s) updated successfully.
            schema:
              $ref: "#/definitions/SupplyTypesRes"
          '400':
            description: Supply type(s) updation failed.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
              
    # Application Type API
    /master/_getapplicationtypes:
      post:
        summary: Get all existing Application Type values
        tags:
          - ApplicationType
        parameters:
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
        responses:
          200: 
            description: Successful response
            schema:
              $ref: '#/definitions/CommonEnumRes'
          400:
            description: Invalid input
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
    
    # Reservoir Types API
    /master/_getreservoirtypes:
      post:
        summary: Get all existing Reservoir Type values
        tags:
          - ReservoirType
        parameters:
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
        responses:
          200: 
            description: Successful response
            schema:
              $ref: '#/definitions/CommonEnumRes'
          400:
            description: Invalid input
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
              
    # Plant Types API
    /master/_getplanttypes:
      post:
        summary: Get all existing Plant Type values
        tags:
          - PlantType
        parameters:
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
        responses:
          200: 
            description: Successful response
            schema:
              $ref: '#/definitions/CommonEnumRes'
          400:
            description: Invalid input
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
              

    # Donation  API
    /donations/_create:
      post:
        summary: Create new Donation(s).
        description: To create new Donation(s) in the system.API supports bulk creation and Code is internally generate by the system as sequence number. 
              Donation with combination of tenantId,usageTypeId,subUsageTypeId,maxPipeSizeId
              and minPipeSizeId duplication will not be allowed.
              To create one Doantion, please pass array with one Donation object. 
        tags:
          - Donation
        parameters:
          - name: Donation
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/DonationReq'
        responses:
          '201':
            description: Donation(s) created successfully.
            schema:
              $ref: "#/definitions/DonationRes"
          '400':
            description: Donation(s) creation failed.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
          
    /donations/_update:
      post:
        summary: Update Donation(s)
        description: API supports bulk update , 
            Following rule apply -
                 Donation will be considered to update only if code exists and valid,
                  updates existing values based on code.
        tags:
          - Donation
        parameters:
          - name: Donation
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/DonationRes'
        responses:
          '200':
            description: Donation(s) updated successfully.
            schema:
              $ref: "#/definitions/DonationRes"
          '400':
            description: Update Donation failed.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
              
    /donations/_search:
      post:
        summary: Get the list of donation(s) 
        description: |
               Search and get donation(s) based on defined search criteria.
                By default results will be sorted by Donation Code.
                In case multiple parameters are passed Donation(s) will be searched as an AND combination of all the parameters.
        tags:
          - Donation
        parameters:
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
          - $ref: "#/parameters/ids"
          - $ref: "#/parameters/code"
          - $ref: "#/parameters/subUsageTypeCode"
          - $ref: "#/parameters/usageTypeCode"
          - $ref: "#/parameters/pipeSizeInMM"
          - $ref: "#/parameters/pageSize"
          - $ref: "#/parameters/pageNumber"
        responses:
          200: 
            description: Successful response
            schema:
              $ref: '#/definitions/DonationRes'
          400:
            description: Invalid input
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
              
   #  Storage Reservoir Master API
    /storagereservoirs/_create:
      post:
        summary: Create new StorageReservoir(s).
        description: To create new StorageReservoir(s) in the system.API supports bulk creation and Code is internally generate by the system as sequence number. 
              StorageReservoir  with combination of tenantId,name duplication will not be allowed.
              To create one StorageReservoir, please pass array with one StorageReservoir object. 
        tags:
          - Storage Reservoir
        parameters:
          - name: Storage Reservoir
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/StorageReservoirReq'
        responses:
          '201':
            description: Storage reservoir(s) created successfully.
            schema:
              $ref: "#/definitions/StorageReservoirRes"
          '400':
            description: Storage Reservoir creation failed.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
              
    /storagereservoirs/_update:
      post:
        summary: Update StorageReservoir(s)
        description: API supports bulk update , 
            Following rule apply -
                 StorageReservoir will be considered to update only if code exists and valid,
                  updates existing values based on code.
        tags:
          - Storage Reservoir
        parameters:
          - name: Storage Reservoir
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/StorageReservoirReq'
        responses:
          '200':
            description: Storage reservoir(s) updated successfully.
            schema:
              $ref: "#/definitions/StorageReservoirRes"
          '400':
            description: Update Storage Reservoir failed.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
              
    /storagereservoirs/_search:
      post:
        summary: Get the list of StorageReservoir(s) 
        description: |
               Search and get storageReservoir(s) based on defined search criteria.
                By default results will be sorted by StorageReservoir Code.
                In case multiple parameters are passed StorageReservoir(s) will be searched as an AND combination of all the parameters.
        tags:
          - Storage Reservoir
        parameters:
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
          - $ref: "#/parameters/ids"
          - $ref: "#/parameters/code"
          - $ref: "#/parameters/reservoirType"
          - $ref: "#/parameters/name"
          - $ref: "#/parameters/pageSize"
          - $ref: "#/parameters/pageNumber"
        responses:
          200: 
            description: Successful response
            schema:
              $ref: '#/definitions/StorageReservoirRes'
          400:
            description: Invalid input
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
              
    #  Water Treatment Plant Master API
    /treatmentplants/_create:
      post:
        summary: Create new TreatmentPlant(s).
        description: To create new TreatmentPlant(s) in the system.API supports bulk creation and Code is internally generate by the system as sequence number. 
              TreatmentPlant with combination of tenantId,name duplication will not be allowed.
              To create one TreatmentPlant, please pass array with one TreatmentPlant object. 
        tags:
          - Treatment Plant
        parameters:
          - name: Treatment Plant
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/TreatmentPlantReq'
        responses:
          '201':
            description: Treatment Plant(s) created successfully.
            schema:
              $ref: "#/definitions/TreatmentPlantRes"
          '400':
            description: TreatmentPlant(s) creation failed.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
        
    /treatmentplants/_update:
      post:
        summary: Update TreatmentPlant(s)
        description: API supports bulk update , 
            Following rule apply -
                 TreatmentPlant will be considered to update only if code exists and valid,
                  updates existing values based on code.
        tags:
          - Treatment Plant
        parameters:
          - name: Treatment Plant
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/TreatmentPlantReq'
        responses:
          '200':
            description: Treatment Plant(s) updated successfully.
            schema:
              $ref: "#/definitions/TreatmentPlantRes"
          '400':
            description: Update Treatment Plant failed.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
              
    /treatmentplant/_search:
      post:
        summary: Get the list of treatmentPlant(s) 
        description: |
               Search and get treatmentPlant(s) based on defined search criteria.
                By default results will be sorted by TreatmentPlant Code.
                In case multiple parameters are passed TreatmentPlant(s) will be searched as an AND combination of all the parameters.
        tags:
          - Treatment Plant
        parameters:
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
          - $ref: "#/parameters/ids"
          - $ref: "#/parameters/code"
          - $ref: "#/parameters/plantType"
          - $ref: "#/parameters/name"
          - $ref: "#/parameters/pageSize"
          - $ref: "#/parameters/pageNumber"
        responses:
          200: 
            description: Successful response
            schema:
              $ref: '#/definitions/TreatmentPlantRes'
          400:
            description: Invalid input
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      
   
              
   # Document Type Vs Application Type API
    /documenttypes-applicationtypes/_create:
      post:
        summary: Create new DocumentTypeApplicationType(s).
        description: To create new DocumentTypeApplicationType(s) in the system.API supports bulk creation and Code is internally generate by the system as sequence number. 
              DocumentTypeApplicationType  with combination of tenantId,documentTypeId and applicationType duplication will not be allowed.
              To create one DocumentTypeApplicationType, please pass array with one DocumentTypeApplicationType object. 
        tags:
          - DocumentTypeApplicationType
        parameters:
          - name: DocumentTypeApplicationType
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/DocumentTypeApplicationTypeReq'
        responses:
          '201':
            description: Document Application(s) created successfully.
            schema:
              $ref: "#/definitions/DocumentTypeApplicationTypesRes"
          '400':
            description: Document Application(s) creation failed.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

    /documenttypes-applicationtypes/_update:
      post:
        summary: Update DocumentTypeApplicationType(s)
        description: API supports bulk update , 
            Following rule apply -
                 DocumentTypeApplicationType will be considered to update only if code exists and valid,
                  updates existing values based on code.
        tags:
          - DocumentTypeApplicationType
        parameters:
          - name: DocumentTypeApplicationType
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/DocumentTypeApplicationTypeReq'
        responses:
          '200':
            description: Document Application(s) updated successfully.
            schema:
              $ref: "#/definitions/DocumentTypeApplicationTypesRes"
          '400':
            description: Update Document Application failed.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

    /documenttypes-applicationtypes/_search:
      post:
        summary: Get the list of documentTypeApplicationType(s) 
        description: |
               Search and get documentTypeApplicationType(s) based on defined search criteria.
                By default results will be sorted by DocumentTypeApplicationType Code.
                In case multiple parameters are passed DocumentTypeApplicationType(s) will be searched as an AND combination of all the parameters.
        tags:
          - DocumentTypeApplicationType
        parameters:
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
          - $ref: "#/parameters/ids"
          - $ref: "#/parameters/code"
          - $ref: "#/parameters/documentType"
          - $ref: "#/parameters/applicationType"
          - $ref: "#/parameters/pageSize"
          - $ref: "#/parameters/pageNumber"
        responses:
          200: 
            description: Successful response
            schema:
              $ref: '#/definitions/DocumentTypeApplicationTypesRes'
          400:
            description: Invalid input
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
              
  #  Meter Water Rates Master API
    /meterwaterrates/_create:
      post:
        summary: Create new MeterWaterRates.
        description: To create new MeterWaterRates in the system.API supports bulk creation and Code is internally generate by the system as sequence number. 
              MeterWaterRates  with combination of tenantId,usageTypeId,sourceTypeId,pipeSizeId and subUsageTypeId duplication will not be allowed.
              To create one MeterWaterRates, please pass array with one MeterWaterRates object. 
        tags:
          - Meter Water Rates
        parameters:
          - name: Meter Water Rates
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/MeterWaterRatesReq'
        responses:
          '201':
            description: Meter water rates created successfully.
            schema:
              $ref: "#/definitions/MeterWaterRatesRes"
          '400':
            description: Meter Water Rates creation failed.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

    /meterwaterrates/_update:
      post:
        summary: Update MeterWaterRates
        description: API supports bulk update , 
            Following rule apply -
                 MeterWaterRates will be considered to update only if code exists and valid,
                  updates existing values based on code.
        tags:
          - Meter Water Rates
        parameters:
          - name: Meter Water Rates
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/MeterWaterRatesReq'
        responses:
          '200':
            description: Meter Water Rates updated successfully.
            schema:
              $ref: "#/definitions/MeterWaterRatesRes"
          '400':
            description: Update Meter Water Rates failed.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
              
    /meterwaterrates/_search:
      post:
        summary: Get the list of meterWaterRates 
        description: |
               Search and get meterWaterRates based on defined search criteria.
                By default results will be sorted by MeterWaterRates Code.
                In case multiple parameters are passed MeterWaterRates will be searched as an AND combination of all the parameters.
        tags:
          - Meter Water Rates
        parameters:
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
          - $ref: "#/parameters/ids"
          - $ref: "#/parameters/code"
          - $ref: "#/parameters/usageTypeCode"
          - $ref: "#/parameters/subUsageTypeCode"
          - $ref: "#/parameters/pipeSizeInMM"
          - $ref: "#/parameters/sourceTypeName"
          - $ref: "#/parameters/pageSize"
          - $ref: "#/parameters/pageNumber"
        responses:
          200: 
            description: Successful response
            schema:
              $ref: '#/definitions/MeterWaterRatesReq'
          400:
            description: Invalid input
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
              
  #  Non  Meter Water Rates Master API
    /nonmeterwaterrates/_create:
      post:
        summary: Create new Non-MeterWaterRates.
        description: To create new Non-MeterWaterRates in the system.API supports bulk creation and Code is internally generate by the system as sequence number. 
              Non-MeterWaterRates  with combination of tenantId,name duplication will not be allowed.
              To create one Non-MeterWaterRates, please pass array with one Non-MeterWaterRates object. 
        tags:
          - Non Meter Water Rates
        parameters:
          - name: Non Meter Water Rates
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/NonMeterWaterRatesReq'
        responses:
          '201':
            description: Non Meter water rates created successfully.
            schema:
              $ref: "#/definitions/NonMeterWaterRatesRes"
          '400':
            description: Invalid input.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

    /nonmeterwaterrates/_update:
      post:
        summary: Update Non-MeterWaterRates
        description: API supports bulk update , 
            Following rule apply -
                 Non-MeterWaterRates will be considered to update only if code exists and valid,
                  updates existing values based on code.
        tags:
          - Non Meter Water Rates
        parameters:
          - name: Non Meter Water Rates
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/NonMeterWaterRatesReq'
        responses:
          '200':
            description: Non Meter Water Rates updated successfully.
            schema:
              $ref: "#/definitions/NonMeterWaterRatesRes"
          '400':
            description: Update Non Meter Water Rates failed.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
              
    /nonmeterwaterrates/_search:
      post:
        summary: Get the list of non-MeterWaterRates 
        description: |
               Search and get non-MeterWaterRates based on defined search criteria.
                By default results will be sorted by Non-MeterWaterRates Code.
                In case multiple parameters are passed Non-MeterWaterRates will be searched as an AND combination of all the parameters.
        tags:
          - Non Meter Water Rates
        parameters:
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
          - $ref: "#/parameters/ids"
          - $ref: "#/parameters/code"
          - $ref: "#/parameters/usageTypeCode"
          - $ref: "#/parameters/subUsageTypeCode"
          - $ref: "#/parameters/pipeSizeInMM"
          - $ref: "#/parameters/sourceTypeName"
          - $ref: "#/parameters/pageSize"
          - $ref: "#/parameters/pageNumber"
        responses:
          200: 
            description: Successful response
            schema:
              $ref: '#/definitions/NonMeterWaterRatesReq'
          400:
            description: Invalid input
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
              
  #  Meter Cost Master API            
    /metercosts/_create:
      post:
        summary: Create new MeterCosts.
        description: To create new MeterCosts in the system.API supports bulk creation and Code is internally generate by the system as sequence number. 
              MeterCosts  with combination of tenantId,metermake duplication will not be allowed.
              To create one MeterCosts, please pass array with one MeterCosts object. 
        tags:
          - Meter Costs
        parameters:
          - name: MeterCost
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/MeterCostReq'
        responses:
          '201':
            description: Meter Costs created successfully.
            schema:
              $ref: '#/definitions/MeterCostRes'
          '400':
            description: Meter Costs creation failed.
            schema:
              $ref: >-
                https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes
                
    /metercosts/_update:
      post:
        summary: Update MeterCosts.
        description: API supports bulk update , 
            Following rule apply -
                 MeterCosts will be considered to update only if code exists and valid,
                  updates existing values based on code.
        tags:
        - Meter Costs
        parameters:
          - name: MeterCosts
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/MeterCostReq'
        responses:
          '200':
            description: Meter Costs updated successfully.
            schema:
              $ref: '#/definitions/MeterCostRes'
          '400':
            description: Update Meter Costs failed.
            schema:
              $ref: >-
                https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes
                
    /metercosts/_search:
      post:
        summary: Get the list of meterCosts
        description: |
               Search and get meterCosts based on defined search criteria.
                By default results will be sorted by MeterCosts Code.
                In case multiple parameters are passed meterCosts will be searched as an AND combination of all the parameters.
        tags:
          - Meter Costs
        parameters:
          - $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo
          - $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId
          - $ref: '#/parameters/ids'
          - $ref: '#/parameters/code'
          - $ref: '#/parameters/meterMake'
          - $ref: '#/parameters/active'
          - $ref: "#/parameters/pageSize"
          - $ref: "#/parameters/pageNumber"
        responses:
          '200':
            description: Successful response
            schema:
              $ref: '#/definitions/MeterCostRes'
          '400':
            description: Invalid input
            schema:
              $ref: >-
               https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes
               
  # Meter Status Master API            
    /meterstatus/_create:
      post:
        summary: Create new MeterStatus.
        description: To create new MeterStatus in the system.API supports bulk creation and Code is internally generate by the system as sequence number. 
              MeterStatus  with combination of tenantId,name duplication will not be allowed.
              To create one MeterStatus, please pass array with one MeterStatus object. 
        tags:
          - Meter Status
        parameters:
          - name: Meter Status
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/MeterStatusReq'
        responses:
          '201':
            description: Meter status created successfully
            schema:
              $ref: '#/definitions/MeterStatusRes'
          '400':
            description: Meter Status creation failed.
            schema:
              $ref: >-
                https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes
              
    /meterStatus/_update:
      post:
        summary: Update MeterStatus
        description: API supports bulk update , 
            Following rule apply -
                 MeterStatus will be considered to update only if code exists and valid,
                  updates existing values based on code.
        tags:
          - Meter Status
        parameters:
          - name: Meter Status
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/MeterStatusReq'
        responses:
          '200':
            description: Meter Status updated successfully.
            schema:
              $ref: '#/definitions/MeterStatusRes'
          '400':
            description: Update Meter Status failed.
            schema:
              $ref: >-
                https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes
              
    /meterStatus/_search:
      post:
        summary: Get the list of meterStatus
        description: |
               Search and get MeterStatus based on defined search criteria.
                By default results will be sorted by MeterStatus Code.
                In case multiple parameters are passed MeterStatus will be searched as an AND combination of all the parameters.
        tags:
          - Meter Status
        parameters:
          - $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo
          - $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId
          - $ref: '#/parameters/ids'
          - $ref: '#/parameters/code'
          - $ref: '#/parameters/active'
          - $ref: '#/parameters/meterStatus'
          - $ref: "#/parameters/pageSize"
          - $ref: "#/parameters/pageNumber"
        responses:
          '200':
            description: Successful response
            schema:
              $ref: '#/definitions/MeterStatusRes'
          '400':
            description: Invalid input
            schema:
              $ref: >-
                https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes
                
  # Service Charges Master API:
    /serviceCharges/_create:
      post:
        summary: Create new ServiceCharges.
        description: To create new ServiceCharges in the system.API supports bulk creation and Code is internally generate by the system as sequence number. 
              To create one ServiceCharges, please pass array with one ServiceCharges object. 
        tags:
          - Service Charge
        parameters:
          - name: Service Charge
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/ServiceChargeReq'
        responses:
          '201':
            description: Service Charge(s) created successfully.
            schema:
              $ref: "#/definitions/ServiceChargeRes"
          '400':
            description: Service Charge creation failed.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

    /serviceCharges/_update:
      post:
        summary: Update ServiceCharges
        description: API supports bulk update , 
            Following rule apply -
                 ServiceCharges will be considered to update only if code exists and valid,
                  updates existing values based on code.
        tags:
          - Service Charge
        parameters:
          - name: Service Charge
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/ServiceChargeReq'
        responses:
          '200':
            description: Service Charge(s) updated successfully.
            schema:
              $ref: "#/definitions/ServiceChargeRes"
          '400':
            description: Update Service Charges failed.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

    /serviceCharges/_search:
      post:
        summary: Get the list of ServiceCharges 
        description: |
               Search and get ServiceCharges based on defined search criteria.
                By default results will be sorted by ServiceCharges Code.
                In case multiple parameters are passed ServiceCharges will be searched as an AND combination of all the parameters.
        tags:
          - Service Charge
        parameters:
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
          - $ref: "#/parameters/ids"
          - $ref: "#/parameters/serviceType"
          - $ref: "#/parameters/serviceChargeType"
          - $ref: "#/parameters/outsideUlb"
          - $ref: "#/parameters/pageSize"
          - $ref: "#/parameters/pageNumber"
        responses:
          200: 
            description: Successful response
            schema:
              $ref: '#/definitions/ServiceChargeRes'
          400:
            description: Invalid input
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  # Gapcode Master API
    /gapcodes/_create:
      post:
        summary: Create new GapCode(s).
        description: To create new GapCode(s) in the system.API supports bulk creation and Code is internally generate by the system as sequence number. 
              To create one GapCode, please pass array with one GapCode object. 
        tags:
          - GapCode
        parameters:
          - name: GapCode
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/GapcodeReq'
        responses:
          '201':
            description: GapCode(s) created successfully.
            schema:
              $ref: "#/definitions/GapcodeRes"
          '400':
            description: GapCode(s ) creation failed.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

    /gapcodes/_update:
      post:
        summary: Update GapCode(s)
        description: API supports bulk update , 
            Following rule apply -
                 GapCode will be considered to update only if code exists and valid,
                  updates existing values based on code.
        tags:
          - GapCode
        parameters:
          - name: GaCcode
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/GapcodeReq'
        responses:
          '200':
            description: GapCode(s) updated successfully.
            schema:
              $ref: "#/definitions/GapcodeRes"
          '400':
            description: Update GapCode failed.
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

    /gapcodes/_search:
      post:
        summary: Get the list of gapCode(s) 
        description: |
               Search and get gapCode(s) based on defined search criteria.
                By default results will be sorted by GapCode Code.
                In case multiple parameters are passed GapCode(s) will be searched as an AND combination of all the parameters.
        tags:
          - GapCode
        parameters:
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
          - $ref: "#/parameters/ids"
          - $ref: "#/parameters/code"
          - $ref: "#/parameters/pageSize"
          - $ref: "#/parameters/pageNumber"
        responses:
          200: 
            description: Successful response
            schema:
              $ref: '#/definitions/GapcodeRes'
          400:
            description: Invalid input
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
              
  # UsageType API  
    /usagetypes/_create:
      post:
        summary: Create new UsageType(s).
        description: To create new UsageType(s) in the system.API supports bulk creation and Code is internally generate by the system as sequence number. 
              To create one UsageType, please pass array with one UsageType object.
              
         UsageType can be created when parentId in the request is "null".
          
          SubUsageType can be created when parentId is not null and equal to one of the existing UsageType. Where parentId refers to the existing usageType Code. 
          
        tags:
          - UsageType
        parameters:
          - name: UsageType 
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/UsageTypeReq'
        responses:
          '201':
            description: UsageType(s) created successfully.
            schema:
              $ref: '#/definitions/UsageTypeRes'
          '400':
            description: UsageType(s) creation failed.
            schema:
              $ref: >-
                https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes
                
    /usagetypes/_update:
      post:
        summary: Update UsageType(s)
        description: API supports bulk update , 
            Following rule apply -
                 UsageType will be considered to update only if code exists and valid,
                  updates existing values based on code.
        tags:
          - UsageType
        parameters:
          - name: UsageType
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/UsageTypeReq'
        responses:
          '200':
            description: Usage Type(s) updated successfully.
            schema:
              $ref: '#/definitions/UsageTypeRes'
          '400':
            description: Update UsageType(s) failed.
            schema:
              $ref: >-
                https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes
                
    /usagetypes/_search:
      post:
        summary: Get the list of usageType(s) 
        description: |
               Search and get usageType(s) based on defined search criteria.
                By default results will be sorted by UsageType Code.
                In case multiple parameters are passed UsageType(s) will be searched as an AND combination of all the parameters.
        tags:
          - UsageType
        parameters:
          - $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo
          - $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId
          - $ref: '#/parameters/ids'
          - $ref: '#/parameters/code'
          - $ref: '#/parameters/name'
          - $ref: '#/parameters/parent'
          - $ref: '#/parameters/isSubUsageType'
          - $ref: "#/parameters/pageSize"
          - $ref: "#/parameters/pageNumber"
        responses:
          '200':
            description: Successful response
            schema:
              $ref: '#/definitions/UsageTypeRes'
          '400':
            description: Invalid input
            schema:
              $ref: >-
                https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes




  parameters:
    ids:
      name: ids
      in: query
      description: comma seperated list of Ids , 
      required: false
      type: integer
      format: int64

    code:
      name: code
      in: query
      description: human readable code
      required: false
      type: string
      minLength: 0
      maxLength: 20
      
    name:
      name: name
      in: query
      description: human readable name
      required: false
      type: string
      minLength: 0
      maxLength: 100
      
    meterMake:
      name: meterMake
      in: query
      description: human readable name
      required: false
      type: string
      minLength: 0
      maxLength: 100
      
    
    sizeInMilimeter:
      name: sizeInMilimeter
      in: query
      type: number
      format: double
      description: Unique H.S.C pipe size in milli-meters.
      
    pipeSizeInMM:
      name: pipeSizeInMM
      in: query
      description: unique sizeInMM of pipe size type
      required: false
      type: number
      
    usageTypeCode:
      name: usageTypeCode
      in: query
      description: unique code of usage type
      required: false
      type: string
      
    subUsageTypeCode:
      name: subUsageTypeCode
      in: query
      description: unique code of sub usage type code
      required: false
      type: string

    sourceTypeName:
      name: sourceTypeName
      in: query
      description: unique name of source type
      required: false
      type: string
    
    documentType:
      name: documentType
      in: query
      description: unique code of document type
      required: false
      type: string
      
    reservoirType:
      name: reservoirType
      in: query
      description: unique name of reservoir type
      required: false
      type: string
      
    plantType:
      name: plantType
      in: query
      description: unique name of plant type
      required: false
      type: string

    applicationType:
      name: applicationType
      in: query
      description: unique identifier of application type
      required: false
      type: string
      
    meterStatus:
      name: meterStatus
      in: query
      description: status of the meter
      required: false
      type: string
      
    active:
      name: active
      in: query
      description: active status of object
      required: false
      type: boolean

    serviceType:
      name: serviceType
      in: query
      description: type of the service
      required: false
      type: string
              
    serviceChargeType:
      name: serviceChargeType
      in: query
      description: type of the service charge
      required: false
      type: string
      
    outsideUlb:
      name: outsideUlb
      in: query
      description: outsideUlb
      required: false
      type: boolean
      
    isSubUsageType:
      name: isSubUsageType
      in: query
      description: harcoded as false for usage type and pass true for subusagetype
      required: false
      type: boolean
        
    pageSize:
      name: pageSize
      in: query
      description: Number of records returned.
      type: integer
      minimum: 0
      exclusiveMinimum: true
      maximum: 1000
      exclusiveMaximum: false
      multipleOf: 10
      default: 50
      
    pageNumber:
     name: pageNumber
     in: query
     description: Page number
     type: integer
     default: 1
              
    parent:
      name: parent
      in: query
      description: parent of subUsageType
      required: false
      type: string 
      
   
      
  definitions:

  # Document Type and Application Type mapping definition
    DocumentTypeApplicationTypeReq:
      type: object
      description:  Contract class to receive request. Array of DocumentTypeApplicationType items are used in case of create ,update and search.
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        DocumentTypeApplicationTypes:
          type: array
          items:
           $ref: '#/definitions/DocumentTypeApplicationType'
      required:
        - RequestInfo
        - DocumentTypeApplicationTypes
    
    DocumentTypeApplicationTypesRes:
      type: object
      description: Contract class to send response. Array of DocumentTypeApplicationType items are used in case  create ,search and response for udpate
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        DocumentTypeApplicationTypes:
          type: array
          maximum: 20
          items:
            $ref: '#/definitions/DocumentTypeApplicationType'

    DocumentTypeApplicationType:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier, typically defined by system and readonly.
        code:
          type: string
          description: unique code is internally generate by the system as sequence number and readonly.
          minLength: 1
          maxLength: 20
        documentTypeId:
          type: integer
          format: int64
          description: documentTypeId of the unique identifier of document type object
        applicationType:
          type: string
          format: varchar
          description: name of the application type object
        mandatory:
          type: boolean
          description: TRUE for mandatory Document Names and FALSE for non mandatory Document Names.
        active:
          type: boolean
          description: TRUE for active Document Names and FALSE for inactive Document Names    
        tenantId:
          type: string
          description: tenant id of the DocumentTypeApplicationType
          minLength: 4
          maxLength: 128
        auditDetails:
          $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
      required:
        - documentTypeId
        - applicationType
        - mandatory
        - active
        - tenantId

    ApplicationType:
      type: object
      properties:
        id:
         type: integer
         format: int64
         description : Unique identifier of the entered type, typically defined by system.
        code:
          description: unique code this should be assigned by system.
          maxLength: 100
          minLength: 3
          enum:
            - ADDITION CONNECTION
            - CHANGE OF USE
            - CLOSING CONNECTION
            - HOLDING CONNECTION
            - NEW CONNECTION
            - REGULARIZATION CONNECTION
            - TITTLE TRANSFER
        name: 
          type: string
          description: human readable name should be assigned by system.
          maxLength: 100
          minLength: 3
        description: 
          type: string
          description: human readable description should be assigned by user.
          maxLength: 100
      required:
        - code
        - name
        
    PlantType:
      type: object
      properties:
        id:
         type: integer
         format: int64
         description : Unique identifier of the entered type, typically defined by system.
        code:
          description: unique code this should be assigned by system.
          maxLength: 100
          minLength: 1
          enum:
            - SANDGRAVEL
        name: 
          type: string
          description: human readable name should be assigned by system.
          maxLength: 100
          minLength: 3
        description: 
          type: string
          description: human readable description should be assigned by user.
          maxLength: 100
      required:
        - code
        - name
        
    ReservoirType:
      type: object
      properties:
        id:
         type: integer
         format: int64
         description : Unique identifier of the entered type, typically defined by system.
        code:
          description: unique code this should be assigned by system.
          maxLength: 100
          minLength: 1
          enum:
            - GROUNDSTORAGERESERVOIR
            - ELEVATEDSTORAGERESERVOIR
        name: 
          type: string
          description: human readable name should be assigned by system.
          maxLength: 100
          minLength: 3
        description: 
          type: string
          description: human readable description should be assigned by user.
          maxLength: 100
      required:
        - code
        - name
        
    CommonDataModel:
      type: object
      properties:
        key:
         type: string
         description : This field holds the name of the enumerator
        object:
         description: This field holds any object of enumerator
         enum: 
           - $ref: '#/definitions/ApplicationType'
           - $ref: '#/definitions/PlantType'
           - $ref: '#/definitions/ReservoirType'
           

    CommonEnumRes:
      type: object
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        DataModelList:
          type: array
          maximum: 10
          items:
            $ref: '#/definitions/CommonDataModel'
  
  # Water Source Type definitions
    SourceTypesRes:
      description: Contract class to send response. Array of SourceType items are used in case  create ,search and response for udpate
      type: object
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        SourceTypes:
          type: array
          maximum: 10
          items:
            $ref: '#/definitions/SourceType'
            
    SourceTypeReq:
      type: object
      description:  Contract class to receive request. Array of SourceType items are used in case of create update and search
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        SourceTypes:
          type: array
          items:
           $ref: '#/definitions/SourceType'
      required:
        - RequestInfo
        - SourceTypes
    
    SourceType:
      type: object
      properties:
        id:
         type: integer
         format: int64
         description : Unique identifier, typically defined by system and readonly.
        code:
          type: string
          description: unique code is internally generate by the system as sequence number and readonly.
          maxLength: 20
          minLength: 1
        name: 
          type: string
          description:  name of the SourceType.
          maxLength: 100
          minLength: 3
        description: 
          type: string
          description: description of the SourceType.
          maxLength: 250
        active:
          type: boolean
          description: TRUE for active and FALSE for inactive.
        sourceCapacity: 
          type: number
          format: double
          description: Capacity of source (in MCFT).
        ulbReserved: 
          type: number
          format: double
          description: Reservation for ULB (in MCFT)
        tenantId:
          type: string
          description: tenant id of the SourceType
          minLength: 4
          maxLength: 128
        auditDetails:
          $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
      required:
        - name
        - active
        - tenantId    

  # Water Supply Type definitions
    SupplyTypesRes:
      type: object
      description: Contract class to send response. Array of SupplyType items are used in case  create ,search and response for udpate
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        SupplyTypes:
          type: array
          maximum: 10
          items:
            $ref: '#/definitions/SupplyType'
            
    SupplyTypeReq:
      description:  Contract class to receive request. Array of SupplyType items are used in case of create and update
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        SupplyTypes:
          type: array
          items:
           $ref: '#/definitions/SupplyType'
      required:
        - RequestInfo
        - SupplyTypes
    
    SupplyType:
      type: object
      properties:
        id:
         type: integer
         format: int64
         description : Unique identifier, typically defined by system and readonly.
        code:
          type: string
          description: unique code is internally generate by the system as sequence number and readonly.
          maxLength: 20
          minLength: 1
        name: 
          type: string
          description:  name of the SupplyType.
          maxLength: 100
          minLength: 3
        active:
          type: boolean
          description: TRUE for active and FALSE for inactive.
        description: 
          type: string
          description: description of the SupplyType.
          maxLength: 250
        tenantId:
          type: string
          description: tenant id of the SupplyType
          minLength: 4
          maxLength: 128
        auditDetails:
          $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
      required:
        - name
        - active
        - tenantId

  # Document Type definitions
    DocumentTypeReq:
      description:  Contract class to receive request. Array of DocumentType items are used in case of create and update
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        DocumentTypes:
          type: array
          items:
           $ref: '#/definitions/DocumentType'
      required:
        - RequestInfo
        - DocumentTypes
    
    DocumentTypesRes:
      type: object
      description: Contract class to send response. Array of DocumentType items are used in case  create ,search and response for udpate
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        DocumentTypes:
          type: array
          maximum: 20
          items:
            $ref: '#/definitions/DocumentType'
          
    DocumentType:
      type: object
      properties:
        id:
         type: integer
         format: int64
         description : Unique identifier, typically defined by system and readonly.
        code:
          type: string
          description: unique code is internally generate by the system as a sequence number and readonly.
          maxLength: 20
          minLength: 1
        name: 
          type: string
          description:  name of the DocumentType.
          maxLength: 100
          minLength: 3
        description: 
          type: string
          description:  description of the DocumentType .
          maxLength: 250
        active:
          type: boolean
          description: TRUE for active and FALSE for inactive.
        tenantId:
          type: string
          description: tenant id of the DocumentType
          minLength: 4
          maxLength: 128
        auditDetails:
          $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
      required:
        - name
        - active
        - tenantId
  
  # PipeSize definitions
    PipeSizeReq:
      type: object
      description:  Contract class to receive request. Array of PipeSize items are used in case of create and update
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        PipeSizes:
          type: array
          items:
            $ref: '#/definitions/PipeSize'
      required:
        - RequestInfo
        - PipeSizes

    PipeSizeRes:
      type: object
      description: Contract class to send response. Array of PipeSize items are used in case  create ,search and response for udpate
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        PipeSizes:
          type: array
          maximum: 20
          items:
            $ref: '#/definitions/PipeSize'
  
    PipeSize:
      type: object
      properties:
        id:
         type: integer
         format: int64
         description : Unique identifier, typically defined by system and readonly.
        code:
          type: string
          description: unique code is internally generate by the system as sequence number and readonly.
          maxLength: 20
          minLength: 1
        sizeInMilimeter:
          type: number
          format: double
          description: Unique H.S.C pipe size in milli-meters.
        sizeInInch:
          type: number
          format: double
          description: H.S.C pipe size in inches.
        description: 
          type: string
          description:  description of the PipeSize.
          maxLength: 250
        active:
          type: boolean
          description: TRUE for active and FALSE for inactive.
        tenantId:
          type: string
          description: tenant id of the PipeSize
          minLength: 4
          maxLength: 128
        auditDetails:
          $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
      required:
        - sizeInMilimeter
        - active
        - tenantId
        
 # Donation definitions
    DonationRes:
      type: object
      description: Contract class to send response. Array of Donation items are used in case  create ,search and response for udpate
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        Donations:
          type: array
          maximum: 20
          items:
            $ref: '#/definitions/Donation'
            
    DonationReq:
      type: object
      description:  Contract class to receive request. Array of Donation items are used in case of create and update
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        Donations:
          type: array
          maximum: 100
          items:
           $ref: '#/definitions/Donation'
      required:
        - RequestInfo
        - Donations
      
    Donation:
      type: object
      properties:
        id:
         type: integer
         format: int64
         description : Unique identifier of the donation, typically defined by system and readonly.
        code:
          type: string
          description: unique code is internally generate by the system as sequence number and readonly.
          maxLength: 20
          minLength: 1
        usageTypeId:
          type: integer
          format: int64
          description: usageTypeId of the unique identifier of usage type object
        subUsageTypeId :
          type: integer
          format: int64
          description: subUsageTypeId  of the unique identifier of sub usage type object
        maxPipeSizeId:
          type: integer
          format: int64
          description: maxPipeSizeId of the unique identifier of pipe size type object
        minPipeSizeId:
          type: integer
          format: int64
          description: minPipeSizeId of the   unique identifier of pipe size type object
        donationAmount:
          type: number
          format: double
          description: donation amount .
        fromDate:
          type: integer
          format: int64
          description: from Date in epoch.
        toDate:
          type: integer
          format: int64
          description: to Date in epoch.
        active:
          type: boolean
          description: TRUE for active and FALSE for inactive.
        tenantId:
          type: string
          description:  tenant id of the Donation
          minLength: 4
          maxLength: 128
        outsideUlb:
          type: boolean
          description: TRUE for outsideUlb  and FALSE for Not outsideUlb.
        auditDetails:
          $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
      required:
        - usageTypeId
        - subUsageTypeId
        - maxPipeSizeId
        - minPipeSizeId
        - donationAmount
        - fromDate
        - toDate
        - active
        - tenantId  

        
  # Water treatment plant  Master definitions
    TreatmentPlantReq:
      type: object
      description:  Contract class to receive request. Array of TreatmentPlant items are used in case of create and update
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        TreatmentPlants:
          type: array
          items:
           $ref: '#/definitions/TreatmentPlant'
      required:
        - RequestInfo
        - TreatmentPlants
    
    TreatmentPlantRes:
      type: object
      description: Contract class to send response. Array of TreatmentPlant items are used in case  create ,search and response for udpate
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        TreatmentPlants:
          type: array
          maximum: 20
          items:
            $ref: '#/definitions/TreatmentPlant'
            
    TreatmentPlant:
      type: object
      properties:
        id:
         type: integer
         format: int64
         description : Unique identifier, typically defined by system and readonly.
        code:
          type: string
          description: unique code is internally generate by the system as sequence number and readonly.
          maxLength: 20
          minLength: 1
        name: 
          type: string
          description: Name of the plant
          maxLength: 100
          minLength: 3
        location: 
          type: string
          description: name of the location.
          minLength : 3
          maxLength : 256
        plantCapacity:
          type: number
          format: double
          description: Water storage capacity of the plant in million litres should be entered
          maxLength: 8
          minLength: 1
        plantType:
          type: string
          description: Type of the water plant 
          enum:
            - Sand gravel
        storageReservoirId:
          type: integer
          format: int64
          description: storageReservoirId  of the unique identifier of Storage Reservoir object  
        description:
          type: string
          description: description of the Treatment Plant
          maxLength: 250
        tenantId:
          type: string
          description: tenant id of the Treatment Plant 
          minLength: 4
          maxLength: 128
        auditDetails:
          $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
      required:
        - name
        - location
        - plantCapacity
        - plantType
        - storageReservoirId
        - tenantId
  
  # Storage Reservoir Master definitions
    StorageReservoirReq:
      type: object
      description:  Contract class to receive request. Array of StorageReservoirs items are used in case of create and update
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        StorageReservoirs:
          type: array
          items:
           $ref: '#/definitions/StorageReservoir'
      required:
        - RequestInfo
        - StorageReservoirs
    
    StorageReservoirRes:
      type: object
      description: Contract class to send response. Array of StorageReservoirs items are used in case  create ,search and response for udpate
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        StorageReservoirs:
          type: array
          items:
            $ref: '#/definitions/StorageReservoir'
            
    StorageReservoir:
      type: object
      properties:
        id:
         type: integer
         format: int64
         description : Unique identifier, typically defined by system and readonly.
        code:
          type: string
          description: unique code is internally generate by the system as sequence number and readonly.
          minLength : 1
          maxLength: 20
        reservoirType:
          type: string
          description: Type of the Reservoir  .
          enum:
            - Ground storage reservoir
            - Elevated storage reservoir
        name: 
          type: string
          description: Name of the Storage Reservoir.
          minLength : 3
          maxLength: 100
        location: 
          type: string
          minLength : 3
          maxLength: 256
          description: Name of the location.
        storageCapacity:
          type: number
          format: double
          description: Water storage capacity of the plant in million litres should be entered
          maxLength: 8
          minLength: 1
        numberofconnection:
          type: number
          description: User should enter details of the distribution line as ID, diameter of pipeline and any other details for the entered respective option
          maxLength: 124
        numberofsublines:
          type: number
          description: User should enter details of the distribution line as ID, diameter of pipeline and any other details for the entered respective option
          maxLength: 124
        numberofmainlines:
          type: number
          description: User should enter details of the distribution line as ID, diameter of pipeline and any other details for the entered respective option
          maxLength: 124
        tenantId:
          type: string
          description: tenant id of the Storage Reservoir
          minLength: 4
          maxLength: 128
        auditDetails:
          $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
      required:
        - reservoirType
        - name
        - location
        - storageCapacity
        - tenantId
        
 # Meter Water Rates Master definitions
    MeterWaterRatesReq:
      type: object
      description:  Contract class to receive request. Array of MeterWaterRates items are used in case of create and update
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        MeterWaterRates:
          type: array
          items:
           $ref: '#/definitions/MeterWaterRates'
      required:
        - RequestInfo
        - MeterWaterRates
    
    MeterWaterRatesRes:
      type: object
      description: Contract class to send response. Array of MeterWaterRates items are used in case  create ,search and response for udpate
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        MeterWaterRates:
          type: array
          maximum: 20
          items:
            $ref: '#/definitions/MeterWaterRates'
            

    MeterWaterRates:
      type: object
      properties:
        id:
         type: integer
         format: int64
         description : Unique identifier, typically defined by system and readonly.
        code:
          type: string
          description: unique code is internally generate by the system as sequence number and readonly.
          maxLength: 20
        usageTypeId:
          type: integer
          format: int64
          description: usageTypeId of the unique identifier of usage type object
        subUsageTypeId:
          type: integer
          format: int64
          description: subUsageTypeId of the unique identifier of sub usage type object
        sourceTypeId:
          type: string
          description: sourceTypeId of the unique identifier of property usage type object
        pipeSizeId:
          type: integer
          format: int64
          description: pipeSizeId of the unique identifier of pipe size type object
        fromDate:
          type: integer
          format: int64
          description: from Date in epoch.
        toDate:
          type: integer
          format: int64
          description: to Date in epoch.
        slab: 
          type: object
          items:
           $ref: '#/definitions/slab'
          description: slab details should be displayed.
        tenantId:
          type: string
          description:  tenant id of the Meter Water Rates
          minLength: 4
          maxLength: 128
        auditDetails:
          $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
      required:
        - sourceTypeId
        - usageTypeId
        - subUsageTypeId
        - pipeSizeId
        - fromDate
        - toDate
        - slab
        - tenantId
      
   # Slab Details definitions
    slab:
      type: object
      properties:
        id:
         type: integer
         format: int64
         description : Unique identifier, typically defined by system and readonly.
        fromUnit:
          type: number
          description: from Unit of the slab .
          maxLength: 20
          minLength: 1
        toUnit:
          type: number
          description: to Unit of the slab .
          maxLength: 20
          minLength: 1
        unitRate:
          type: number
          format: double
          description: Unit Rate of the slab
        tenantId:
          type: string
          description: tenant id of the slab
          minLength: 4
          maxLength: 128
      required:
        - fromUnit
        - toUnit
        - unitRate
        - tenantId
        
  # Meter Cost Master definitions
    MeterCostReq:
      type: object
      description:  Contract class to receive request. Array of MeterCost items are used in case of create and update
      properties:
        RequestInfo:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo
        MeterCosts:
          type: array
          items:
           $ref: '#/definitions/MeterCost'
      required:
        - RequestInfo
        - MeterCosts
        
    MeterCostRes:
      type: object
      description: Contract class to send response. Array of MeterCost items are used in case  create ,search and response for udpate
      properties:
        ResponseInfo:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo
        MeterCosts:
          type: array
          maximum: 20
          items:
            $ref: '#/definitions/MeterCost'
          
          
    MeterCost:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier, typically defined by system and readonly.
        code:
          type: string
          description: unique code is internally generate by the system as sequence number and readonly.
          maxLength: 20
          minLength: 1
        meterMake:
          type: string
          description: Make of the meter
          maxLength: 100
          minLength: 3
        amount:
          type: number
          format: double
          description: meter cost amount
        active:
          type: boolean
          description: TRUE for active and FALSE for inactive.
        tenantId:
          type: string
          description: tenant id of the MeterCost
          minLength: 4
          maxLength: 128
        auditDetails:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails
      required:
        - meterMake
        - amount
        - tenantId
        - active
      
    MeterStatusReq:
      type: object
      description:  Contract class to receive request. Array of MeterStatus items are used in case of create and update
      properties:
        RequestInfo:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo
        MeterStatus:
          type: array
          items:
           $ref: '#/definitions/MeterStatus'
      required:
        - RequestInfo
        - MeterStatus 
        
    MeterStatusRes:
      type: object
      description: Contract class to send response. Array of MeterStatus items are used in case  create ,search and response for udpate
      properties:
        ResponseInfo:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo
        MeterStatus:
          type: array
          maximum: 20
          items:
            $ref: '#/definitions/MeterStatus'
            
            
    MeterStatus:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: 'Unique identifier, typically defined by system and readonly.'
        code:
          type: string
          description: unique code is internally generate by the system as sequence number and readonly.
          maxLength: 20
          minLength: 1
        active:
          type: boolean
          description: TRUE for active and FALSE for inactive.
        meterStatus:
          type: string
          maxLength: 100
          minLength: 3
          description: status of the meter.
        description:
          type: string
          description: description of the meter
          maxLength: 124
        tenantId:
          type: string
          description: tenant id of the MeterStatus
          minLength: 4
          maxLength: 128
        auditDetails:
          $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
          
      required:
        - meterStatus
        - active
        - tenantId
        
     # Non Meter Water Rates Master definitions
    NonMeterWaterRatesReq:
      type: object
      description:  Contract class to receive request. Array of NonMeterWaterRates items are used in case of create and update
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        NonMeterWaterRates:
          type: array
          items:
           $ref: '#/definitions/NonMeterWaterRates'
      required:
        - RequestInfo
        - NonMeterWaterRates
    
    NonMeterWaterRatesRes:
      type: object
      description: Contract class to send response. Array of NonMeterWaterRates items are used in case  create ,search and response for udpate
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        NonMeterWaterRates:
          type: array
          items:
            $ref: '#/definitions/NonMeterWaterRates'

    NonMeterWaterRates:
      type: object
      properties:
        id:
         type: integer
         format: int64
         description : Unique identifier, typically defined by system and readonly.
        code:
          type: string
          description: unique code is internally generate by the system as sequence number and readonly.
          maxLength: 20
        connectionType:
          type: string
          description: possible and supported type of new water connection
          enum:
           - TEMPORARY
           - PERMANENT
        usageTypeId:
          type: integer
          format: int64
          description: usageTypeId of the unique identifier of usage type object
        subUsageTypeId :
          type: integer
          format: int64
          description: subUsageTypeId of the unique identifier of sub usage type object
        sourceTypeId:
          type: integer
          format: int64
          description: sourceTypeId of the unique identifier of source type object
        pipeSizeId:
          type: integer
          format: int64
          description: pipeSizeId of the unique identifier of pipe size type object
        fromDate:
          type: integer
          format: int64
          description: from Date in epoch.
        amount:
          type: number
          format: double
          description: monthly rent for Non-meter
        noOfTaps:
          type: number
          description: monthly rent for Non-meter
        tenantId:
          type: string
          description: tenant id of the Non-MeterWaterRates
          minLength: 4
          maxLength: 128
        auditDetails:
          $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
      required:
        - connectionType
        - sourceTypeId
        - usageTypeId
        - subUsageTypeId
        - pipeSizeId
        - fromDate
        - amount
        - noOfTaps
        - tenantId
        
  # Service Charge definitions
    ServiceChargeReq:
      type: object
      description:  Contract class to receive request. Array of ServiceCharges items are used in case of create and update
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        ServiceCharges:
          type: array
          items:
           $ref: '#/definitions/ServiceCharge'
      required:
        - RequestInfo
        - ServiceCharges
    
    ServiceChargeRes:
      type: object
      description: Contract class to send response. Array of ServiceCharge items are used in case  create ,search and response for udpate
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        ServiceCharges:
          type: array
          maximum: 20
          items:
            $ref: '#/definitions/ServiceCharge'
    
    ServiceCharge:
      type: object
      properties:
        id:
         type: integer
         format: int64
         description : Unique identifier, typically defined by system and readonly.
        code:
          type: string
          description: unique code is internally generate by the system as sequence number and readonly.
          maxLength: 20
        serviceType: 
          type: string
          description: Type of the service 
          enum:
            - Change of ownership
            - Change of connectionType
            - Disconnection
            - Change of Usage
            - No due certificate
        serviceChargeApplicable: 
          type: boolean
          description: TRUE for applicable and FALSE for inapplicable.
        serviceChargeType:
          type: string
          description: Type of the service charge
          enum:
            - Flat
            - Slab
            - Percentage flat
            - Percentage Slab
        description:
          type: string
          description: description of the service charge
          maxLength: 1024
        active:
          type: boolean
          description: TRUE for active and FALSE for inactive.
        effectiveFrom:
          type: integer
          format: int64
          description: effective from date in epoch
        effectiveTo:
          type: integer
          format: int64
          description: effective to date in epoch
        outsideUlb:
          type: boolean
          description: TRUE for outSideUlb and FALSE for Not outSideUlb 
        chargeDetails:
          type: array
          items:
            $ref: '#/definitions/ServiceChargeDetails'
        tenantId:
          type: string
          description:  tenant id of the Service Charge
          minLength: 4
          maxLength: 128
        auditDetails:
          $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
      required:
        - serviceType
        - serviceChargeApplicable
        - serviceChargeType
        - active
        - effectiveFrom
        - effectiveTo
        - tenantId
    
    ServiceChargeDetails:
      type: object
      description:  Contract class to receive request. Array of ServiceChargeDeatils items are used in case of create and update
      properties:
        id:
          type: integer
          format: int64
          description : id is servicechargedetailsid and Unique identifier, typically defined by system and readonly.
        code:
          type: string
          description: unique code is internally generate by the system as sequence number and readonly.
          maxLength: 20
          minLength: 1
        uomFrom:
          type: number
          format: double
          description: uom from of the Service Charge Details
        uomTo:
          type: number
          format: double
          description: uom to of the Service Charge Details
        amountOrpercentage:
          type: number
          format: double
          description: amount in case of flat , slab and percentage in case of
               percentage flat and percentage slab
        serviceCharge :
          type: integer
          format: int 64
          description : serviceCharge Id of the unique identifier of service charge  object
        tenantId:
          type: string
          description: tenant id of the serviceChargeDetails
          minLength: 4
          maxLength: 128
      required:
        - code
        - uomFrom
        - uomTo
        - amountOrpercentage
        - serviceCharge
        - tenantId

  # Gapcode definitions
    GapcodeReq:
      type: object
      description:  Contract class to receive request. Array of GapCode items are used in case of create and update
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        Gapcodes:
          type: array
          maximum: 20
          items:
           $ref: '#/definitions/Gapcode'
      required:
        - RequestInfo
        - Gapcodes
    
    GapcodeRes:
      type: object
      description: Contract class to send response. Array of GapCode items are used in case  create ,search and response for udpate
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        Gapcodes:
          type: array
          maximum: 20
          items:
           $ref: '#/definitions/Gapcode'
    
    Gapcode:
      type: object
      properties:
        id:
         type: integer
         format: int64
         description : id is gapcodeid and Unique identifier, typically defined by system and readonly.
        code : 
          type: string
          description: unique code is internally generate by the system as sequence number and readonly.
          maxLength: 100 
        name : 
          type: string
          description: name of the gapCode
          maxLength: 100 
          minLength: 1
        outSideUlb:
          type: boolean
          description: TRUE for outSideUlb and FALSE for Not outSideUlb.
        active:
          type: boolean
          description: TRUE for active and FALSE for inactive.  
        noOfLastMonths:
          type: string
          description: number of last months
          maxLength: 100
          minLength: 1
        logic:
          type: string
          description: logic of the gap code formula
          maxLength: 50
          minLength: 1
        description: 
          type: string
          description: description  of the gap code.
          maximum: 250  
        tenantId:
          type: string
          description:  tenant id of the gap code
          minLength: 4
          maxLength: 128
      required:
        - name
        - logic
        - noOfLastMonths
        - tenantId
        
    UsageTypeReq:
      type: object
      description:  Contract class to receive request. Array of UsageType items are used in case of create and update
      properties:
        RequestInfo:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo
        UsageTypes:
          type: array
          maximum: 20
          items:
            $ref: '#/definitions/UsageType'
      required:
        - RequestInfo
        - UsageTypes
        
    UsageTypeRes:
      type: object
      description: Contract class to send response. Array of UsageType items are used in case  create ,search and response for udpate
      properties:
        ResponseInfo:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo
        UsageTypes:
          type: array
          maximum: 20
          items:
            $ref: '#/definitions/UsageType'
            
    UsageType:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description:  Unique identifier of the Usage type/ Sub usage type, typically defined by system and
            readonly.
        code:
          type: string
          description: unique code  of the usage type /sub usage type , internally generate by the system as sequence number and readonly.
          maxLength: 20
          minLength: 1
        name:
          type: string
          description: name of UsageType/SubUsageType.
          maxLength: 100
          minLength: 3
        active:
          type: boolean
          description: TRUE for active and FALSE for inactive.
        parent:
          type: string
          description: Unique code of the parent UsageType for subUsageType, null for UsageType.
          maximum: 100
        description:
          type: string
          description: description of the usage type /sub usage type.
          maximum: 250
        tenantId:
          type: string
          description: tenant id of the usage type/sub usage type
          minLength: 4
          maxLength: 128
      required: 
        - name
        - active
        - tenantId      
