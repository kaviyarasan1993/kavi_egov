swagger: '2.0'
# eGSP YAML Template Version: 1.0 
# This is a version number for the YAML template. This must not be changed.

info:
  version: 1.0.0
  ######################################################
  # All API's are POST. _create,_search,_update for post,get and put. RequestInfo will be part of body. For multiple records we can pass multiple value with comman seperated values*.
  # All _search will be synchronous and all _create and _update will be asynchronous*.
  # RequestInfo and ResponseInfo object should be reffered from Common*.
  # In _search API, tenantId should be passed in query param. In _create/_update, tenantId should be passed in the model.
  # Readonly means that even if these fields are passed in the request, it will be ignored in create/update and will not be added/updated in the entities. The readonly fields might be passed to the _search API's to make use of fields for the search Query API. while calling _search API's even mandatory fields might not be available, it is mandatory only in the _create API's*.
  # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message.
  # Definition must start with Upper case followed by camel case.
  # Every model will have tenantId. Validate tenantId on create.
  # Parameter name must start with small case followed by camel case.
  # Path must be in small case.
  ######################################################
  
  title: Property Tax Calculator
  description: |
    * APIs for Property Tax calcuation. This service handles the tax calculation and returns back the detailed tax information.
    
    * All middle level calculated values (MRV, depreciation etc) rounded upto 2 decimal digits and all final values (ARV and all the individual taxes) rounded to nearest one rupee.
  contact:
    name: Ramki
host: phoenix-qa.egovernments.org
schemes:
  - https
basePath: '/properties/taxes/v1'
x-common-path: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml'

paths:
  /_calculate:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  ######################################################
    post:
      summary: Calculates a tax.
      description: API to calculate property tax
      parameters:
        - name: property
          in: body
          description: Details for the property + RequestInfo meta data + other conguration params.
          required: true
          schema:
            $ref: '#/definitions/CalculationRequest'
      
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ###################################################
        200:
          description: returns the detailed calculated tax details.
          schema:
            $ref: '#/definitions/CalculationResponse'
        400:
          description: Invalid Calcualtions data/ failed to get required configuration values.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      tags:
        - Calculation

  /factor/_search:
  ######################################################
  # Will be synchronous.
  # tenantId should be passed in query param.
  ######################################################
    post:
      summary: Search the calculation factors in the system based on the criterion specified.
      description: |
        Search and get calculation factor(s) based on defined search criteria. Currently search parameters are only allowed as HTTP query params. In case multiple parameterts are passed calculation factor will be searched as an AND combination of all the parameters. Maximum result size is restricted based on the maxlength of calculation factors as defined in CalculationFactorResponse model.
        
        By default results will be sorted by fromdate and factorType and code
      parameters:
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
        - name: factorType
          in: query
          description: type of the factor for which factor to be returned.
          required: true
          type: string
        - name: validDate
          in: query
          description: This date will be compared between the available from and to dates for search results, format is dd/MM/yyyy
          required: true
          type: string
          format: date
        - name: code
          in: query
          description: code for the factor type
          required: false
          type: string
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: returns Calculation Factors.
          schema:
            $ref: '#/definitions/CalculationFactorResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
            
  /factor/_create:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  ######################################################
    post:
      description: Creates a Calculation Factor
      parameters:
        - name: calculationFactor
          in: body
          description: Request header for the Calculation Factor.
          required: true
          schema:
            $ref: '#/definitions/CalculationFactorRequest'
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '201':
          description: Calculation Factor(s) created sucessfully.
          schema:
            $ref: '#/definitions/CalculationFactorResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
            
  /factor/_update:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  # Unique identifier of the model to be updated should be passed as path parameter. 
  ######################################################
    post:
      description: Updates a Calculation Factor.
      parameters:
        - name: calculationFactor
          in: body
          description: Request header for the Calculation Factor.
          required: true
          schema:
            $ref: '#/definitions/CalculationFactorRequest'
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: Update CalculationFactor(s) successful
          schema:
            $ref: '#/definitions/CalculationFactorResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
            
  /guidancevalue/_search:
  ######################################################
  # Will be synchronous.
  # tenantId should be passed in query param.
  ######################################################
    post:
      summary: Search the Guidance Values in the system based on the criterion specified.
      description: |
        Search and get Guidance Value(s) based on defined search criteria. Currently search parameters are only allowed as HTTP query params. In case multiple parameterts are passed Guidance Value will be searched as an AND combination of all the parameters. Maximum result size is restricted based on the maxlength of Guidance Values as defined in GuidanceValueResponse model.
        
        By default results will be sorted by from date
      parameters:
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
        - name: boundary
          in: query
          description: boundary for which guidance value to be returned.
          required: true
          type: string
        - name: structure
          in: query
          description: Structure code of the property for which guidance value to be returned.
          required: false
          type: string
        - name: usage
          in: query
          description: Usage code of the property for which guidance value to be returned.
          required: false
          type: string
        - name: subUsage
          in: query
          description: Sub Usage code of the property for which guidance value to be returned.
          required: false
          type: string
        - name: occupancy
          in: query
          description: Occupancy code of the property for which guidance value to be returned.
          required: false
          type: string
        - name: validDate
          in: query
          description: This date will be compared between the available from and to dates for search results, format is dd/MM/yyyy
          required: true
          type: string
          format: date
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: returns Guidance Values.
          schema:
            $ref: '#/definitions/GuidanceValueResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
            
  /guidancevalue/_create:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  ######################################################
    post:
      description: Creates a Guidance Value
      parameters:
        - name: guidanceValue
          in: body
          description: Request header for the Guidance Value.
          required: true
          schema:
            $ref: '#/definitions/GuidanceValueRequest'
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '201':
          description: Guidance Value(s) created sucessfully.
          schema:
            $ref: '#/definitions/GuidanceValueResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
            
  /guidancevalue/_update:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  # Unique identifier of the model to be updated should be passed as path parameter. 
  ######################################################
    post:
      description: Updates a Guidance Value.
      parameters:
        - name: guidanceValue
          in: body
          description: Request header for the Guidance Value.
          required: true
          schema:
            $ref: '#/definitions/GuidanceValueRequest'
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: Update guidanceValue(s) successful
          schema:
            $ref: '#/definitions/GuidanceValueResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
            
  /taxrates/_search:
  ######################################################
  # Will be synchronous.
  # tenantId should be passed in query param.
  ######################################################
    post:
      summary: Search the Tax Rates in the system based on the criterion specified.
      description: |
        Search and get Tax Rate(s) based on defined search criteria. Currently search parameters are only allowed as HTTP query params. In case multiple parameterts are passed Tax Rate will be searched as an AND combination of all the parameters. Maximum result size is restricted based on the maxlength of Tax Rates as defined in TaxRatesResponse model.
        
        By default results will be sorted by from date
      parameters:
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
        - name: taxHead
          in: query
          description: Tax head for which Tax Rate to be returned.
          required: true
          type: string
        - name: validDate
          in: query
          description: This date will be compared between the available from and to dates for search results, format is dd/MM/yyyy
          required: true
          type: string
          format: date
        - name: validARVAmount
          in: query
          description: This ARV amount will be compared between the available from and to values for search results.
          required: true
          type: number
        - name: parentTaxHead
          in: query
          description: Dependent Tax head for which Tax Rate to be returned.
          required: false
          type: string
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: returns Tax Rates.
          schema:
            $ref: '#/definitions/TaxRatesResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
            
  /taxrates/_create:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  ######################################################
    post:
      description: Creates a Tax Rate
      parameters:
        - name: taxRates
          in: body
          description: Request header for the Tax Rate.
          required: true
          schema:
            $ref: '#/definitions/TaxRatesRequest'
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '201':
          description: Tax Rate(s) created sucessfully.
          schema:
            $ref: '#/definitions/TaxRatesResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
            
  /taxrates/_update:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  # Unique identifier of the model to be updated should be passed as path parameter. 
  ######################################################
    post:
      description: Updates a Tax Rate.
      parameters:
        - name: taxRates
          in: body
          description: Request header for the Tax Rate.
          required: true
          schema:
            $ref: '#/definitions/TaxRatesRequest'
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: Update taxRates(s) successful
          schema:
            $ref: '#/definitions/TaxRatesResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
            
  /taxperiods/_search:
  ######################################################
  # Will be synchronous.
  # tenantId should be passed in query param.
  ######################################################
    post:
      summary: Search the Tax Periods in the system based on the criterion specified.
      description: |
        Search and get Tax Period(s) based on defined search criteria. Currently search parameters are only allowed as HTTP query params. In case multiple parameterts are passed Tax Period will be searched as an AND combination of all the parameters. Maximum result size is restricted based on the maxlength of Tax Periods as defined in TaxPeriodResponse model.
        
        By default results will be sorted by fromdate
      parameters:
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
        - name: periodType
          in: query
          description: type of installment, its for monthly, querterly, halfyearly or yearly.
          required: true
          type: string
        - name: validDate
          in: query
          description: This date will be compared between the available from and to dates for search results, format is dd/MM/yyyy
          required: false
          type: string
          format: date
        - name: fromDate
          in: query
          description: If fromDate is given then toDate also mandatory. All the periods from where fromDate is fall in the period to till periods where toDate is fall in the period.
          required: false
          type: string
          format: date
        - name: toDate
          in: query
          description: If fromDate is given then toDate also mandatory. All the periods from where fromDate is fall in the period to till periods where toDate is fall in the period.
          required: false
          type: string
          format: date
        - name: code
          in: query
          description: code for the tax period
          required: false
          type: string
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: returns Tax Periods.
          schema:
            $ref: '#/definitions/TaxPeriodResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
            
  /taxperiods/_create:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  ######################################################
    post:
      description: Creates a Tax Period
      parameters:
        - name: taxPeriods
          in: body
          description: Request header for the Tax Period.
          required: true
          schema:
            $ref: '#/definitions/TaxPeriodRequest'
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '201':
          description: Tax Period(s) created sucessfully.
          schema:
            $ref: '#/definitions/TaxPeriodResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
            
  /taxperiods/_update:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  # Unique identifier of the model to be updated should be passed as path parameter. 
  ######################################################
    post:
      description: Updates a Tax Period.
      parameters:
        - name: taxPeriods
          in: body
          description: Request header for the Tax Period.
          required: true
          schema:
            $ref: '#/definitions/TaxPeriodRequest'
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: Update taxPeriods(s) successful
          schema:
            $ref: '#/definitions/TaxPeriodResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes' 

  /latepaymentpenalty/_calculate:
    post: 
      description: Calculation for the latepayment penalty of the property
      parameters:
       - name: penaltyCalculationRequest
         in: body
         description: Request header of the penalty
         required: true
         schema:
          $ref: '#/definitions/LatePaymentPenaltyRequest'
      responses:
        '200':
          description: Penalty Calculated
          schema:
            $ref: '#/definitions/LatePaymentPenaltyResponse'
        '400':
          description: Unable to calculate penalty
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      tags:
        - Penalty
        
  /transferfeerates/_search:
  ######################################################
  # Will be synchronous.
  # tenantId should be passed in query param.
  ######################################################
    post:
      summary: Search the Transfer Fee Rates in the system based on the criterion specified.
      description: |
        Search and get Transfer Fee Rate(s) based on defined search criteria. Currently search parameters are only allowed as HTTP query params. In case multiple parameterts are passed Transfer Fee Rate will be searched as an AND combination of all the parameters. Maximum result size is restricted based on the maxlength of Transfer Fee Rates as defined in TransferFeeRatesResponse model.
        
        By default results will be sorted by from date
      parameters:
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
        - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
        - name: feeFactor
          in: query
          description: Fee factor for which Transfer Fee Rate to be returned. should be valid enum value from feeFactor in 'TransferFeeRates'.
          required: true
          type: string
        - name: validDate
          in: query
          description: This date will be compared between the available from and to dates for search results, format is dd/MM/yyyy
          required: true
          type: string
          format: date
        - name: validValue
          in: query
          description: This is the value based on the feeFactor value. Eg. feeFactor is propertytax then this validValue should be tax of the respective property. This value amount will be compared between the available from and to values for search results.
          required: true
          type: number
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: returns Transfer Fee Rates.
          schema:
            $ref: '#/definitions/TransferFeeRatesResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
            
  /transferfeerates/_create:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  ######################################################
    post:
      description: Creates a Transfer Fee Rate
      parameters:
        - name: transferFeeRates
          in: body
          description: Request header for the Transfer Fee Rate.
          required: true
          schema:
            $ref: '#/definitions/TransferFeeRatesRequest'
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '201':
          description: Transfer Fee Rate(s) created sucessfully.
          schema:
            $ref: '#/definitions/TransferFeeRatesResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
            
  /transferfeerates/_update:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  # Unique identifier of the model to be updated should be passed as path parameter. 
  ######################################################
    post:
      description: Updates a Transfer Fee Rate.
      parameters:
        - name: transferFeeRates
          in: body
          description: Request header for the Transfer Fee Rate.
          required: true
          schema:
            $ref: '#/definitions/TransferFeeRatesRequest'
        - name: tenantId
          in: query
          description: Unique id for ulb.
          required: true
          type: string
          format: varchar
      tags:
        - Master
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ####################################################
        '200':
          description: Update transferFeeRates(s) successful
          schema:
            $ref: '#/definitions/TransferFeeRatesResponse'
        '400':
          description: Invalid input
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
            
  /transferfee/_calculate:
  ######################################################
  # Will be asynchronous.
  # tenantId should be passed in the model.
  # Validate tenantId before persisting.
  ######################################################
    post:
      summary: Calculates a transfer fee.
      description: API to calculate transfer fee
      parameters:
        - name: transferFeeCalRequest
          in: body
          description: Details to calculate transfer fee.
          required: true
          schema:
            $ref: '#/definitions/TransferFeeCalRequest'
      
      responses:
      ####################################################
      # All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message
      ###################################################
        200:
          description: returns the caluclated transfer fee.
          schema:
            $ref: '#/definitions/TransferFeeCalResponse'
        400:
          description: Invalid Calcualtions data/ failed to get required configuration values.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      tags:
        - Calculation
            
definitions:
########################################################
#RequestInfo and ResponseInfo object should be reffered from Common.
#Definition must start with Upper case followed by camel case.
#Every model will have tenantId
########################################################
  CommonTaxDetails:
    type: object
    description: Common tax details which are calculated or required for calculation at property and unit level
    properties:
      occupancyDate:
        type: string
        format: date
        description: The date of occupancy of this unit/floor. Date is inclduing timestamp, dd/MM/yyyy hh24:mi:ss
      effectiveDate:
        type: string
        format: date
        description: The tax effective date. Date is inclduing timestamp, dd/MM/yyyy hh24:mi:ss
      depreciation:
        type: number
        format: double
        description: depreciation for age of the building. Rounded to 2 decimal digits
      rebateValue:
        type: number
        format: double
        description: The rebate has been given during the tax calculation. Rounded to 2 decimal digits
      calculatedRV:
        type: number
        format: double
        description: Ratable Value calculated. Rounded to nearest rupee
      manualRV:
        type: number
        format: double
        description: Ratable Value entered manually.  Rounded to nearest rupee
      residentialRV:
        type: number
        format: double
        description: Residential Ratable Value. Rounded to nearest rupee
      nonResidentialRV:
        type: number
        format: double
        description: Non Residential Ratable Value. Rounded to nearest rupee
      totalTax:
        type: number
        format: double
        description: Total tax for the unit. Rounded to nearest rupee
      calculatedARV:
        type: number
        format: double
        description: Annual Rental Value calculated. Rounded to nearest rupee
      calculatedMRV:
        type: number
        format: double
        description: Monthly Rental Value calculated. Rounded to nearest rupee
      headWiseTaxes:
        description: Head wise taxes
        type: array
        items:
          $ref: "#/definitions/HeadWiseTax"
    required:
    - occupancyDate
    - effectiveDate
    - calculatedARV
    - totalTax
        
  TaxCalculation:
    type: object
    description: Details of tax calculation
    properties:
      fromDate:
        description: start date from when the tax is applicable. Date is inclduing timestamp, dd/MM/yyyy hh24:mi:ss
        type: string
        format: date
      toDate:
        description: end date till when the tax is applicable. Date is inclduing timestamp, dd/MM/yyyy hh24:mi:ss
        type: string
        format: date
      effectiveDate:
        type: string
        format: date
        description: The date from which tax is effective. Date is inclduing timestamp, dd/MM/yyyy hh24:mi:ss
      propertyTaxes:
        $ref: "#/definitions/CommonTaxDetails"
      unitTaxes:
        description: Unit Taxes
        type: array
        items:
          $ref: "#/definitions/UnitTax"
    required:
    - fromDate
    - toDate
    - effectiveDate
    - propertyTaxes
    - unitTaxes
      
  UnitTax:
    type: object
    properties:
      floorNumber:
        type: string
        description: floor no for the floor
        maxLength: 16
        minLength: 1
      unitNo:
        type: integer
        format: int32
        description: unit no. Some ULBs captures the room wise details in case in the same floor different rooms are used for different purposes.
        maxLength: 8
        minLength: 1
      assessableArea:
        type: number
        format: double
        description: The Structure for which this Guidance value is.
      structureFactor:
        type: number
        format: double
        description: The Structure for which this Guidance value is.
      usageFactor:
        type: number
        format: double
        description: The usage for which this Guidance value is.
      subUsageFactor:
        type: number
        format: double
        description: The subUsage for which this Guidance value is.
      unitTaxes:
        $ref: "#/definitions/CommonTaxDetails"
    required:
    - assessableArea
    - unitTaxes
        
  HeadWiseTax:
    type: object
    properties:
      taxName:
        type: string
        description: name of the tax
      taxDays:
        type: integer
        format: int32
        description: The tax is for these many days.
      taxValue:
        type: number
        format: double
        description: Tax Value. Rounded to nearest rupee
    required:
    - taxName
    - taxValue
        
  CalculationRequest:
    description: Contract class to receive request. Array of Property items  are used in case of create . Where as single Property item is used for update
    properties:
      requestInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      property:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/propertytax/contracts/pt-services/v1-0-0.yml#/definitions/Property'
      taxEffectiveDate:
        type: integer
        format: int64
        description: The tax effective date (time in epoch) has to be provided in floor/unit info which is part of 'Property'. There will be tax rule changes due to GO across the city, that time this property value is mandatory. If this value is sent calculator will not read from floor/unit otherwise will be taken from floor/unit.
      calculationType:
        type: string
        description: Type of calculation
        enum:
         - ARV
         - CVS
         - UAS
      taxPeriod:
        type: string
        description: Tax to be calculated for which type of period
        enum:
          - MONTH
          - QUARTER
          - HALFYEAR
          - ANNUAL
    required:
      - requestInfo
      - property
      - calculationType
      - taxPeriod
      
  CalculationResponse:
    description: Contract class to send response.
    properties:
      responseInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      taxes:
        description: List of taxcalculations for each period
        type: array
        items:
          $ref: '#/definitions/TaxCalculation'
        
  CalculationFactor:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: Unique Identifier of the CalculationFactor
      tenantId:
        type: string
        description: tenant id of the CalculationFactor
        maxLength: 128
        minLength: 4
      factorCode:
        type: string
        description: code for the respctive type of the factor from property master.
        maxLength: 64
        minLength: 4
      factorType:
        type: string
        enum:
          - occupancy
          - usage
          - structure
          - propertytype
          - age
          - toilet
          - road
          - lift
          - parking
        description: Factor Value for Occupancy.
      factorValue:
        type: number
        format: double
        description: Factor Value for Occupancy.
      fromDate:
        type: string
        format: date
        description: Factor value effective date. Date is inclduing timestamp, dd/MM/yyyy hh24:mi:ss
      toDate:
        type: string
        format: date
        description: Factor value end date. Date is inclduing timestamp, dd/MM/yyyy hh24:mi:ss
      auditDetails:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails'
    required:
    - id
    - tenantId
    - factorCode
    - factorType
    - factorValue
    - fromDate
    - toDate

    
  CalculationFactorRequest:
    properties:
      RequestInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      calculationFactors:
        type: array
        minimum: 1
        maximum: 100
        items:
         $ref: '#/definitions/CalculationFactor'
    type: object
    
  CalculationFactorResponse:
    properties:
      ResponseInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      calculationFactors:
        type: array
        maximum: 500
        items:
          $ref: '#/definitions/CalculationFactor'
    type: object
    
  GuidanceValue:
    type: object
    description: Guidance Value
    properties:
      id:
        type: integer
        format: int64
        description: Unique Identifier of the GuidanceValue
      tenantId:
        type: string
        description: tenant id of the GuidanceValue
        maxLength: 128
        minLength: 4
      name:
        type: string
        description: name of the GuidanceValue
        maxLength: 128
        minLength: 4
      boundary:
        type: string
        description: The GuidanceValueBoundary for which this Guidance value is.
        maxLength: 64
        minLength: 1
      structure:
        type: string
        description: The Structure for which this Guidance value is.
        maxLength: 64
        minLength: 1
      usage:
        type: string
        description: The usage for which this Guidance value is.
        maxLength: 64
        minLength: 1
      subUsage:
        type: string
        description: The subUsage for which this Guidance value is.
        maxLength: 64
        minLength: 1
      occupancy:
        type: string
        description: The occupancy for which this Guidance value is.
        maxLength: 64
        minLength: 1        
      value:
        type: number
        format: double
        description: Guidance Value.
      fromDate:
        type: string
        format: date
        description: Guidance value effective date. Date is inclduing timestamp, dd/MM/yyyy hh24:mi:ss
      toDate:
        type: string
        format: date
        description: Guidance value end date. Date is inclduing timestamp, dd/MM/yyyy hh24:mi:ss
      auditDetails:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails'
    required:
    - id
    - tenantId
    - boundary
    - fromDate
    - toDate
    - value
    
  GuidanceValueRequest:
    properties:
      RequestInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      guidanceValues:
        type: array
        minimum: 1
        maximum: 100
        items:
         $ref: '#/definitions/GuidanceValue'
    type: object
    
  GuidanceValueResponse:
    properties:
      ResponseInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      guidanceValues:
        type: array
        maximum: 500
        items:
          $ref: '#/definitions/GuidanceValue'
    type: object
    
  TaxRates:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: Unique Identifier of the TaxRates
      tenantId:
        type: string
        description: tenant id of the GuidanceValue
        maxLength: 128
        minLength: 4
      taxHead:
        type: string
        description: The tax head code for which the tax rates are defined.
      dependentTaxHead:
        type: string
        description: The dependent tax head. Some taxes are defined on another tax value like Library cess on General tax.
      fromDate:
        type: string
        format: date
        description: start date from when the tax rate is applicable. Date is inclduing timestamp, dd/MM/yyyy hh24:mi:ss
      toDate:
        type: string
        format: date
        description: start date from when the tax rate is applicable. Date is inclduing timestamp, dd/MM/yyyy hh24:mi:ss
      fromValue:
        type: number
        format: double
        description: from ARV amount from which the tax rate is applicable
      toValue:
        type: number
        format: double
        description: to ARV amount to which the tax rate is applicable
      usage:
        type: string
        description: The usage code for which the tax rates are defined.
      propertytype:
        type: string
        description: The property type code for which the tax rates are defined.
      ratePercentage:
        type: number
        format: double
        description: The tax rate percentage.
      taxFlatValue:
        type: number
        format: double
        description: for some ARV ranges there might not be percentages, the flat amounts will be defined.
    required:
      - id
      - tenantId
      - taxHead
      - fromDate
      - fromValue
      - toValue
      
  TaxRatesRequest:
    properties:
      RequestInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      taxRates:
        type: array
        minimum: 1
        maximum: 100
        items:
         $ref: '#/definitions/TaxRates'
    type: object
    
  TaxRatesResponse:
    properties:
      ResponseInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      taxRates:
        type: array
        maximum: 500
        items:
          $ref: '#/definitions/TaxRates'
    type: object

  TaxPeriod:
    type: object
    description: A object holds a tax periods.
    properties:
      id:
        type: integer
        format: int64
        description: Unique Identifier of the TaxRates
      tenantId:
        type: string
        description: tenant id of the TaxPeriod
        maxLength: 128
        minLength: 4
      fromDate:
        type: string
        format: date
        description: Start date for tax period. Date is inclduing timestamp, dd/MM/yyyy hh24:mi:ss
      toDate:
        type: string
        format: date
        description: End date for tax period. Date is inclduing timestamp, dd/MM/yyyy hh24:mi:ss
      code:
        type: string
        description: representation of a tax period.
        maxLength: 128
        minLength: 4
      periodType:
        type: string
        description: type of installment, its for monthly, querterly, halfyearly or yearly.
        enum:
          - MONTH
          - QUARTER
          - HALFYEAR
          - ANNUAL
      financialYear:
        type: string
        description: financial year for which this period belongs.
        maxLength: 64
        minLength: 4
      auditDetails:
        $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
    required:
      - id
      - fromDate
      - toDate
      - code
      - periodType
      - tenantId
    
  TaxPeriodRequest:
    properties:
      RequestInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      taxPeriods:
        type: array
        minimum: 1
        maximum: 100
        items:
         $ref: '#/definitions/TaxPeriod'
    type: object
    
  TaxPeriodResponse:
    properties:
      ResponseInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      taxPeriods:
        type: array
        maximum: 500
        items:
          $ref: '#/definitions/TaxPeriod'
    type: object
   
  LatePaymentPenaltyRequest:
    type: object
    description: This object holds the information for the property for which penalty to be calculated
    properties:
      requestInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      upicNo:
       type: string
      tenantId:
        type: string
        description: tenant id of the Property
        maxLength: 128
        minLength: 4
    required:
       - upicNo
       - tenantId 
  
  LatePaymentPenaltyResponse:
    type: object
    description: This object holds the information for the property for which penalty to be calculated
    properties:
      responseInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      upicNo:
       type: string
      tenantId:
        type: string
        description: tenant id of the Property
        maxLength: 128
        minLength: 4
      penalty:
       type: array
       items:
         $ref: '#/definitions/Penalty'
    required:
       - upicNo
       - tenantId
       - penalty

  Penalty:
    type: object
    description: This object would hold the infromation about the penalty imposed on a Property on a perticular period
    properties:
      period:
        type: string
        description: This would define a period for the penalty
      amount:
        type: number
        format: double
        
  TransferFeeRates:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: Unique Identifier of the TransferFeeRates
      tenantId:
        type: string
        description: tenant id of the TransferFeeRates
        maxLength: 128
        minLength: 4
      feeFactor:
        type: string
        description: The fee factor based on which the fee will be calculated.
        enum:
         - PROPERTYTAX
         - DOCUMENTVALUE
         - MARKETVALUE
         - FLATRATE
      fromDate:
        type: string
        format: date
        description: start date from when the fee rate is applicable. Date is inclduing timestamp, dd/MM/yyyy hh24:mi:ss
      toDate:
        type: string
        format: date
        description: start date from when the fee rate is applicable. Date is inclduing timestamp, dd/MM/yyyy hh24:mi:ss
      fromValue:
        type: number
        format: double
        description: from value from which the free rate is applicable. This value is respective to feeFactor
      toValue:
        type: number
        format: double
        description: to value to which the free rate is applicable. This value is respective to feeFactor
      feePercentage:
        type: number
        format: double
        description: The free rate percentage.
      flatValue:
        type: number
        format: double
        description: for some value ranges there might not be percentages, the flat amounts will be defined.
    required:
      - id
      - tenantId
      - feeFactor
      - fromDate
      - fromValue
      - toValue
      
  TransferFeeRatesRequest:
    properties:
      RequestInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      TransferFeeRates:
        type: array
        minimum: 1
        maximum: 100
        items:
         $ref: '#/definitions/TransferFeeRates'
    type: object
    
  TransferFeeRatesResponse:
    properties:
      ResponseInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      TransferFeeRates:
        type: array
        maximum: 100
        items:
          $ref: '#/definitions/TransferFeeRates'
    type: object

  TransferFeeCal:
    type: object
    description: Details for Transfer fee calculation
    properties:
      feeFactor:
        description: Fee factor for which Transfer Fee Rate to be returned. should be valid enum value from feeFactor in 'TransferFeeRates'.
        type: string
      validValue:
        description: This is the value based on the feeFactor value. Eg. feeFactor is propertytax then this validValue should be tax of the respective property. This value amount will be compared between the available from and to values for search results.
        type: number
      validDate:
        type: string
        format: date
        description: This date will be compared between the available from and to dates for search results, format is dd/MM/yyyy
      transferFee:
        description: The calculated transfer fee for a property
        type: number
    required:
    - feeFactor
    - validDate

  TransferFeeCalRequest:
    properties:
      ResponseInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      TransferFeeCals:
        type: array
        minimum: 1
        maximum: 100
        items:
          $ref: '#/definitions/TransferFeeCal'
    type: object
    
  TransferFeeCalResponse:
    properties:
      ResponseInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      TransferFeeCals:
        type: array
        maximum: 100
        items:
          $ref: '#/definitions/TransferFeeCal'
    type: object
