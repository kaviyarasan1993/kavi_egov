swagger: '2.0'
info:
  version: 0.0.0
  title: eGov mSeva 
  description: |
    ### Public Service API ###
     eGov mSeva API Provides the resource to create manage and search citizen service category or group, Service Types, Service request. ServiceRequest API provides the resource to work with Grievance/Complaint creation, updation and search in the platform.
      ## Important
      
      ### readonly ###
      readonly means that even if these fields are passed in the request, it will be ignored in create/update and will not be added/updated in the entities.
        The readonly fields might be passed to the _search API''s to make use of fields for the search Query API. while calling _search API''s even mandatory fields might not be available, it is mandatory only in the _create API's.
      ### Error ###
      All errors will be returned with HTTP error code 400 with customized error code and messages. Consumer of the API need to handle 400 with customized error code and message.
host: phoenix-qa.egovernments.org
schemes:
  - https
basePath: '/v1/[API endpoint]'
###########################################################################
paths:
    /services/_search:
      post:
        summary: get all Services(Complaint Types) available for a given tenantid
        description:
          Provides a list of acceptable service request types and their associated
          service codes. These request types can be unique to each tenant.
        parameters:
          - name: serviceReq
            in: body
            description: Common Request info for the Services.
            required: true
            schema:
              $ref: '#/definitions/ServiceReq'
          - name: tenantId
            in: query
            description: Unique id for for a tenant.
            required: true
            type: string
            format: varchar
          - name: fields
            in: query
            description: Specific fields can be specified per search, can be decalred multiple times comma delimited like field1, field2.... If nothing is passed as Fields, all fields are returned.
            required: false
            type: string
            format: varchar
          - name: sort
            description: This param sorts the result by the fields specified as the parameter value. Fields can be provided as a comma separated string. By default, sorting is done in ascending fashion. Appending :desc to a column will invert the ordering for that column. if nothing is passed it will assume service serviceName in ascending order for default sorting. For example, with a sort string **sort=field1,field2:desc,field3, the table will be sorted in ascending order by field1, in descending order by field2, and in ascending order by field3.** Apart From available fields in Services **REGISTRATION_FREQUENCY** or **RESOLUTION_FREQUENCY** can be used to get Services in order of Registration frequency and Resolution frequency. sort field can be used in conjunction with totalSize to get desired number of records.
            in: query
            required: false
            type: string
            format: varchar
          - name: totalSize
            description: Total No of results returned in the Result, by default maximum 1000 number of records will be returned if totalSize parameter is empty.
            in: query
            required: false
            type: string
            format: integer
        tags:
          - Service
        responses:
          '200':
            description: service definition
            schema:
              $ref: '#/definitions/ServiceRes'
          '400':
            description: tenatId was not provided or General service error
            schema:
              $ref: '#/definitions/ErrorRes'
###########################################################################          
    /services/_create:
      post:
        summary: Creates a new Service for a given tenantId
        description: To add a new Service for a tenant.
        parameters:
          - name: service
            in: body
            description: Details for the new Service .
            required: true
            schema:
              $ref: '#/definitions/ServiceReq'
          - name: tenatId
            in: query
            description: Unique id for tenant.
            required: true
            type: string
            format: varchar
        tags:
            - Service
        responses:
            '201':
              description: service created
              schema:
                $ref: '#/definitions/ServiceRes'
            '400':
              description: tenantId was not provided or General service error
              schema:
                $ref: '#/definitions/ErrorRes'
###########################################################################            
    /services/{serviceCode}/_update:
      post:
        summary: Updates Service Type and its details.
        description: To update details of an existing service.
        parameters:
          - name: tenantId
            in: query
            description: Unique id for ulb.
            required: true
            type: string
            format: varchar
          - name: serviceCode
            in: path
            description: Unique service code for service to be updated .
            required: true
            type: string
            format: varchar
          - name: service
            in: body
            description: Request header for the new Service Request.
            required: true
            schema:
              $ref: '#/definitions/ServiceReq'
        tags:
          - Service
        responses:
          '200':
            description: service updated
            schema:
              $ref: '#/definitions/ServiceRes'
          '400':
            description: serviceCode or tenantId was not provided or General service error
            schema:
              $ref: '#/definitions/ErrorRes'
###########################################################################  
    /seva/_create:
      post:
        summary: Create service requests
        description: To Create new service requests.
        parameters:
          - name: seva
            in: body
            description: The  service request.
            required: true
            schema:
              $ref: '#/definitions/SevaRequest'
        tags:
          - Seva
        responses:
          '201':
            description: Service Request Created
            schema:
              $ref: '#/definitions/SevaResponse'
          '400':
            description:
              serviceCode or tenantId was not provided or General service
              error
            schema:
              $ref: '#/definitions/ErrorRes'
###########################################################################            
    /seva/_search:         
      post:
        summary: Query multiple Seva request
        description: Return service request for a given tenantid and search params.
        parameters:
          - name: requestInfo
            in: body
            description: Request header for the service request details.
            required: true
            schema:
              $ref: '#/definitions/SevaRequest'
          - name: tenantId
            in: query
            description: Unique id for city/ulb.
            required: true
            type: string
            format: varchar
          - name: startDate
            in: query
            description: Earliest datetime to include in search.
            required: false
            type: string
            format: varchar
          - name: endDate
            in: query
            description: Latest datetime to include in search.
            required: false
            type: string
            format: varchar
          - name: status
            in: query
            description:
              Allows one to search for requests which have a specific status. This
              defaults to all statuses; can be declared multiple times, comma
              delimited;
            required: false
            type: string
            format: varchar
          - name: lastModifiedDatetime
            in: query
            description: last modified date for the given serviceRequest.
            required: false
            type: string
            format: varchar
          - name: fields
            description: Specific fields can be specified per search, can be decalred multiple times, comma delimited like "field1", "field2".... If nothing is passed as Fields, all fields are returned.
            in: query
            required: false
            type: string
            format: varchar
          - name: sort
            description: This param sorts the result by the fields specified as the parameter value. Fields can be provided as a comma separated string. By default, sorting is done in ascending fashion. Appending :desc to a column will invert the ordering for that column. if nothing is passed it will assume seva requestedDatetime in ascending order for default sorting. For example, with a sort string sort=field1,field2:desc,field3, the table will be sorted in ascending order by field1, in descending order by field2, and in ascending order by field3.
            in: query
            required: false
            type: string
            format: varchar
          - name: totalSize
            description: Total No of results returned in the Result, by default maximum 1000 number of records will be returned if totalSize parameter is empty.
            in: query
            required: false
            type: string
            format: integer
          - name: sizePerPage
            description: Total No of results needs to be displayed per page. Note that fromIndex + sizePerPage can not be more than the totalSize setting which defaults to 1000.
            in: query
            required: false
            type: string
            format: integer
          - name: fromIndex
            description: The fromIndex parameter defines the offset from the first result you want to fetch. The default value of fromIndex is 0.
            in: query
            required: false
            type: string
            format: integer
        tags:
          -  Seva
        responses:
          '200':
            description: seva
            schema:
              $ref: '#/definitions/SevaResponse'
          '400':
            description:
              serviceRequestId or tenantId was not provided or General
              service error
            schema:
              $ref: '#/definitions/ErrorRes'
###########################################################################                  
    /seva/_count:         
      post:
        summary: Returns count of matching service requests
        description: Return count of service request for a given tenantid and search params.
        parameters:
          - name: requestInfo
            in: body
            description: Request header for the service request details.
            required: true
            schema:
              $ref: '#/definitions/SevaRequest'
          - name: tenantId
            in: query
            description: Unique id for city/ulb.
            required: true
            type: string
            format: varchar
          - name: startDate
            in: query
            description: Earliest datetime to include in search.
            required: false
            type: string
            format: varchar
          - name: endDate
            in: query
            description: Latest datetime to include in search.
            required: false
            type: string
            format: varchar
          - name: status
            in: query
            description:
              Allows one to search for requests which have a specific status. This
              defaults to all statuses; can be declared multiple times, comma
              delimited;
            required: false
            type: string
            format: varchar
          - name: lastModifiedDatetime
            in: query
            description: last modified date for the given serviceRequest.
            required: false
            type: string
            format: varchar
        tags:
          - Seva
        responses:
          '200':
            description: seva
            schema:
              $ref: '#/definitions/CountResponse'
          '400':
            description:
              serviceRequestId or tenantId was not provided or General
              service error
            schema:
              $ref: '#/definitions/ErrorRes'
###########################################################################              
    /seva/{serviceRequestId}/_update:
      post:
        summary: Update service requests
        description: To Update new service requests.
        parameters:
          - name: tenantId
            in: query
            description: Unique id for ulb/city.
            required: true
            type: string
            format: varchar
          - name: serviceRequestId
            in: path
            description: service code value.
            required: true
            type: string
            format: varchar
          - name: sevaRequest
            in: body
            description: The  service request.
            required: true
            schema:
              $ref: '#/definitions/SevaRequest'
        tags:
          - Seva
        responses:
          '201':
            description: Service Request Updated
            schema:
              $ref: '#/definitions/SevaResponse'
          '400':
            description:
              serviceCode or tenantId was not provided or General service
              error
            schema:
              $ref: '#/definitions/ErrorRes'
###########################################################################            
    /serviceGroup/_search:
      post:
        summary: Get all complaint type category(or Service Group).
        description: |
         Returns all the complaint type category(or Service Group).
        parameters:
          - name: tenantId
            in: query
            description: Unique id for ulb.
            required: true
            type: string
        tags:
          - Service Group
        responses:
          200:
            description: An array of complaint type category
            schema:
              type: array
              items:
                $ref: '#/definitions/ServiceGroupRes'
          '400':
            description: tenantId is not present
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
###########################################################################                
    /serviceGroup/_create:
      post:
        summary: Create complaint type category(or Service Group).
        description: |
         Create the complaint type category(or Service Group).
        parameters:
          - name: seva
            in: body
            description: The  service request.
            required: true
            schema:
              $ref: '#/definitions/ServiceGroupReq'
        tags:
          - Service Group
        responses:
          200:
            description: An array of complaint type category
            schema:
              type: array
              items:
                $ref: '#/definitions/ServiceGroupRes'
          '400':
            description: tenantId is not present
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
###########################################################################                
    /pgr/v1/otp/_send:
      post:
        summary: search OTP Configuration entry using uuid
        description: search the mobile number and otp using uuid ,uuid nothing but otp reference number
        tags:
          - PGR-OTPConfig
        parameters:
          - name: OTPConfig
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/CreateOTPConfigReq'
        responses:
          '200':
            description: Request acknowledged sucessfully
            schema:
              $ref: "#/definitions/OTPConfigRess"
          '400':
            description: Request failed
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes' 
###########################################################################                
    /serviceGroup/{id}/_update:
      post:
        summary: Update complaint type category(or Service Group).
        description: |
         Update complaint type category(or Service Group).
        parameters:
          - name: seva
            in: body
            description: The  service request.
            required: true
            schema:
              $ref: '#/definitions/ServiceGroupReq'
          - name: id
            in: path
            description: service group or category type id.
            required: true
            type: number
            format: int64
        tags:
          - Service Group
        responses:
          200:
            description: An array of complaint type category
            schema:
              type: array
              items:
                $ref: '#/definitions/ServiceGroupRes'
          '400':
            description: tenantId is not present
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'  
###########################################################################                
    # OTP Configuration API
    /receivingmode/_create:
      post:
        summary: create receiving mode
        description: create receiving mode
        tags:
          - ReceivingMode
        parameters:
          - name: Receiving Mode
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/ReceivingModeTypeReq'
        responses:
          '201':
            description: Request acknowledged sucessfully
            schema:
              $ref: "#/definitions/ReceivingModeTypeRes"
          '400':
            description: Request failed
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
          '404':
            description: tenantId provided was not found
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
###########################################################################      
    /receivingmode/{id}/_update:
      post:
        summary: update receiving mode
        description: update receiving mode
        tags:
          - ReceivingMode
        parameters:
          - name: id
            in: path
            description: escalation id.
            required: true
            type: number
            format: int64
          - name: Receiving Mode
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/ReceivingModeTypeReq'
        responses:
          '201':
            description: Request acknowledged sucessfully
            schema:
              $ref: "#/definitions/ReceivingModeTypeRes"
          '400':
            description: Request failed
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
          '404':
            description: tenantId provided was not found
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'          
###########################################################################  
    /receivingmode/_search:
      post:
        summary: searches receving mode
        tags:
          - ReceivingMode
        parameters:
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
          - $ref: "#/parameters/id"
          - $ref: "#/parameters/code"
          - $ref: "#/parameters/name"
          - $ref: "#/parameters/active"
          - $ref: "#/parameters/visible"
        responses:
          200: 
            description: Successful response
            schema:
              $ref: '#/definitions/ReceivingModeTypeRes'
          400:
            description: Invalid input
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
###########################################################################                
    # receiving center API
    /receivingcenter/_create:
      post:
        summary: creates receiving center
        description: creates receiving center
        tags:
          - ReceivingCenter
        parameters:
          - name: Receiving Center
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/ReceivingCenterTypeReq'
        responses:
          '201':
            description: Request acknowledged sucessfully
            schema:
              $ref: "#/definitions/ReceivingCenterTypeRes"
          '400':
            description: Request failed
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
          '404':
            description: tenantId provided was not found
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
###########################################################################                
   # receiving center API
    /receivingcenter/{id}/_update:
      post:
        summary: update receiving center
        description: update receiving center
        tags:
          - ReceivingCenter
        parameters:
          - name: id
            in: path
            description: escalation id.
            required: true
            type: number
            format: int64
          - name: Receiving Center
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/ReceivingCenterTypeReq'
        responses:
          '201':
            description: Request acknowledged sucessfully
            schema:
              $ref: "#/definitions/ReceivingCenterTypeRes"
          '400':
            description: Request failed
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
          '404':
            description: tenantId provided was not found
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
###########################################################################                
    /receivingcenter/_search:
      post:
        summary: searches receiving center
        tags:
          - ReceivingCenter
        parameters:
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
          - $ref: "#/parameters/id"
          - $ref: "#/parameters/code"
          - $ref: "#/parameters/name"
          - $ref: "#/parameters/active"
          - $ref: "#/parameters/visible"
        responses:
          200: 
            description: Successful response
            schema:
              $ref: '#/definitions/ReceivingCenterTypeRes'
          400:
            description: Invalid input
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
###########################################################################                
    # Bulk Router Type API
    /router/_create:
      post:
        summary: creates router
        description: router
        tags:
          - router
        parameters:
          - name: router
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/RouterTypeReq'
        responses:
          '201':
            description: Request acknowledged sucessfully
            schema:
              $ref: "#/definitions/RouterTypeRes"
          '400':
            description: Request failed
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
          '404':
            description: tenantId provided was not found
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
###########################################################################                
   # Bulk Router Type API
    /router/_update:
      post:
        summary: updates router
        description: updates router
        tags:
          - router
        parameters:
          - name: Router
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/RouterTypeReq'
        responses:
          '201':
            description: Request acknowledged sucessfully
            schema:
              $ref: "#/definitions/RouterTypeRes"
          '400':
            description: Request failed
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
          '404':
            description: tenantId provided was not found
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
###########################################################################                
    /router/_search:
      post:
        summary: searches existing values
        tags:
          - router
        parameters:
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
          - $ref: "#/parameters/id"
          - $ref: "#/parameters/boundaryid"
          - $ref: "#/parameters/service"
          - $ref: "#/parameters/positionid"
        responses:
          200: 
            description: Successful response
            schema:
              $ref: '#/definitions/RouterSearchRes'
          400:
            description: Invalid input
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
###########################################################################                
     # Escalation Time Type API
    /escalation/_create:
      post:
        summary: creates escalation time type
        description: escalation time type
        tags:
          - escalation
        parameters:
          - name: escalation time
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/EscalationTimeTypeReq'
        responses:
          '201':
            description: Request acknowledged sucessfully
            schema:
              $ref: "#/definitions/EscalationTimeTypeRes"
          '400':
            description: Request failed
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
          '404':
            description: tenantId provided was not found
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
###########################################################################                
   # Escalation Time Type API
    /escalation/{id}/_update:
      post:
        summary: updates escalation time type
        description: updates escalation time type
        tags:
          - escalation
        parameters:
          - name: id
            in: path
            description: escalation id.
            required: true
            type: number
            format: int64
            
          - name: Update Escalation
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/EscalationTimeTypeReq'
        responses:
          '201':
            description: Request acknowledged sucessfully
            schema:
              $ref: "#/definitions/EscalationTimeTypeRes"
          '400':
            description: Request failed
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
          '404':
            description: tenantId provided was not found
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
###########################################################################                
    /escalation/_search:
      post:
        summary: searches existing values
        tags:
          - escalation
        parameters:
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
          - $ref: "#/parameters/id"
          - $ref: "#/parameters/designationid"
          - $ref: "#/parameters/service"
        responses:
          200: 
            description: Successful response
            schema:
              $ref: '#/definitions/EscalationTimeTypeRes'
          400:
            description: Invalid input
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
###########################################################################      
         # receiving mode API
    /OTPConfig/_create:
      post:
        summary: create OTP Configuration entry
        description: create OTP Configuration
        tags:
          - OTPConfig
        parameters:
          - name: OTPConfig
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/OTPConfigReq'
        responses:
          '201':
            description: Request acknowledged sucessfully
            schema:
              $ref: "#/definitions/OTPConfigRes"
          '400':
            description: Request failed
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
          '404':
            description: tenantId provided was not found
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
###########################################################################                
    /OTPConfig/{tenantid}/_update:
      post:
        summary: update OTP Configuration entry
        description: update OTP Configuration
        tags:
          - OTPConfig
        parameters:
          - name: tenantid
            in: path
            description: Tenant's ID.
            required: true
            type: string
          - name: OTPConfig
            in: body
            description: required parameters have to be populated
            required: true
            schema:
              $ref: '#/definitions/OTPConfigReq'
        responses:
          '201':
            description: Request acknowledged sucessfully
            schema:
              $ref: "#/definitions/OTPConfigRes"
          '400':
            description: Request failed
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
          '404':
            description: tenantId provided was not found
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'          
###########################################################################  
    /OTPConfig/_search:
      post:
        summary: searches OTP Configurations
        tags:
          - OTPConfig
        parameters:
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/requestInfo"
          - $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId"
        responses:
          200: 
            description: Successful response
            schema:
              $ref: '#/definitions/OTPConfigRes'
          400:
            description: Invalid input
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
              
###########################################################################  
    #Save Draft API
    /draft/v1/_create:
      post:
        summary: Create draft
        description: To Create draft
        parameters:
          - name: draft
            in: body
            description: The  draft request.
            required: true
            schema:
              $ref: '#/definitions/DraftCreateRequest'
        tags:
          - Draft
        responses:
          '200':
            description: Draft Created
            schema:
              $ref: '#/definitions/DraftCreateResponse'
          '400':
            description:
              serviceCode or tenantId was not provided or General service
              error
            schema:
              $ref: '#/definitions/ErrorRes'
###########################################################################  
    #Update Draft API
    /draft/v1/_update:
      post:
        summary: Update draft
        description: To Update draft
        parameters:
          - name: draft
            in: body
            description: The  draft request.
            required: true
            schema:
              $ref: '#/definitions/DraftUpdateRequest'
        tags:
          - Draft
        responses:
          '200':
            description: Draft Updated
            schema:
              $ref: '#/definitions/DraftResponse'
          '400':
            description:
              id or draft was not provided or General service
              error
            schema:
              $ref: '#/definitions/ErrorRes'
########################################################################### 
    #Delete Draft API
    /draft/v1/_delete:
      post:
        summary: Delete draft
        description: To Delete draft
        parameters:
          - name: draft
            in: body
            description: The  draft request.
            required: true
            schema:
              $ref: '#/definitions/DraftDeleteRequest'
        tags:
          - Draft
        responses:
          '200':
            description: Draft Deleted
            schema:
              $ref: '#/definitions/DraftResponse'
          '400':
            description:
              id  was not provided or General service
              error
            schema:
              $ref: '#/definitions/ErrorRes'
########################################################################### 
   #Search Draft API
    /draft/v1/_search:         
      post:
        summary: Query Draft
        description: Return draft for a given tenantid and search params.
        parameters:
          - name: requestInfo
            in: body
            description: Request header for the draft details.
            required: true
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
          - name: tenantId
            in: query
            description: Unique id for city/ulb.
            required: true
            type: string
          - name: serviceCode
            in: query
            description:
              Allows one to search for requests which have a specific service code.
            required: false
            type: string
        tags:
          -  Draft
        responses:
          '200':
            description: seva
            schema:
              $ref: '#/definitions/DraftSearchResponse'
          '400':
            description:
              tenantId was not provided or General
              service error
            schema:
              $ref: '#/definitions/ErrorRes'
###########################################################################                  
parameters:
    id:
      name: id
      in: query
      description: unique identifier of object
      required: false
      type: integer
      format: int64

    code:
      name: code
      in: query
      description: human reabable code
      required: false
      type: string
      minLength: 0
      maxLength: 64
      
    name:
      name: name
      in: query
      description: human reabable name
      required: false
      type: string
      minLength: 0
      maxLength: 100
      
    service:
      name: serviceid
      in: query
      type: number
      description: fetch category based on the grievance.
    
    boundaryid:
      name: boundaryid
      in: query
      type: number
      description: fetch the boundary by boundary id. 
   
    designationid:
      name: designationid
      in: query
      type: number
      description: fetch the designation by position id. 
      
    positionid:
      name: designationid
      in: query
      type: number
      description: fetch the designation by position id.     
    
    active:
      name: active
      in: query
      type: boolean
      description: flag for checking whether it is active
      
    visible:
      name: visible
      in: query
      type: boolean
      description: flag for checking whether it is visible 
          
################################################################################
#                                 Definitions                                  #
# All Definitions will start with Upper Case and will follow camel case        #
#
#
################################################################################
definitions:
  CreateOTPConfigReq:
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      
        mobileNumber:
          type: string
          description: mobile number for validating otp
        tenantId: 
          type: string
          description: Unique Identifier of the tenantId to which user primarily belongs and it is mandatory field in all the end points shoiuld pass this value
      required:
        - RequestInfo
        - tenantId
        - mobileNumber

  
###########################################################################                    
  OTPConfigRess:
      type: object
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        isSuccessful:
          type: boolean
          description: return true if otp is valid else return false
###########################################################################                      
  Service:
    type: object
    properties:
      tenantId:
        type: string
        description: The unique identifier for Service
      serviceCode:
        type: string
        description: The unique identifier for Service
      serviceName:
        type: string
        description: Service name.
      description:
        type: string
        description: Services description.
      metadata:
        type: boolean
        description: Whether service meta data is present
      type:
        type: string
        description: realtime (Currently we only support real time srevices)
      keywords:
        type: string
        description: tags for this service.
      group:
        type: string
        description: Group associated to service.
      category:
        type: number
        description: Defines the ID of the Service Group Category.
      slaHours:
        type: number
        description: Service Level Agreement in hours for Service.
      attributes:
        type: array
        items:
          $ref: '#/definitions/Attribute'
      groups:
        type: array
        items:
          $ref: '#/definitions/Group'    
    required:
      - tenantId
      - serviceCode
      - serviceName
      - category
      - slaHours
  Value:
    type: object
    properties:
      key:
        type: string
        description:
          The unique identifier associated with an option for singlevaluelist or
          multivaluelist.
      name:
        type: string
        description:
          The human readable title of an option for singlevaluelist or
          multivaluelist.
###########################################################################          
  Attribute:
    type: object
    properties:
      variable:
        type: boolean
        description: Denotes whether user input is required or not
      code:
        type: string
        description: A unique identifier for the attribute
      datatype:
        type: string
        description: Denotes the type of field used for user input.
      required:
        type: boolean
        description: Indicates if input from user is required.
      datatypeDescription:
        type: string
        description: A description of the datatype which helps the user provide their input
      url:
        type: string
        description: url to be referred to populate data.
      groupCode:
        type: string
        description: To represents group to which this attribute belongs to.
      roles:
        type: array
        items:
         type: string
        description: roles associated to this attribute.
      constraints:
        type: array
        items:
            $ref: '#/definitions/Constraint'
        description: roles associated to this attribute.        
      actions:
        type: array
        items:
         type: string
        description: actions for which this attribute should be displayed.
      attribValues:
        type: array
        items:
            $ref: '#/definitions/Value'
    required:
      - code
###########################################################################          
  Group:
    type: object
    properties:
      name:
        type: string
        description: Represents localization message code to show group name
      code:
        type: string
        description: A unique identifier for the group
      constraints:
        type: array
        items:
            $ref: '#/definitions/GroupConstraint'

###########################################################################          
  Constraint:
    type: object
    properties:
      rule:
        type: string
        description: Valid JS code
      value:
        type: string
        description: Value to be set if the rule evaluates to truthy
      
###########################################################################       
  GroupConstraint:
    type: object
    properties:
      constraint:
        type: string
        description: AT_LEAST_ONE_REQUIRED or ALL_REQUIRED
      action:
        type: string
        description: Service status name for which this constraint applies
      role:
        type: string
        description: Role name for which this constraint applies
      
###########################################################################       
  Seva:
    type: object
    description: Service request raised by the citizen also called Seva in eGov platform
    required:
      - tenantId
      - serviceCode
      - description
      - phone
###########################################################################          
    properties:
      tenantId:
        type: string
        readOnly: true
        description: The unique ID of the service request created.
      serviceRequestId:
        type: string
        readOnly: true
        description: The unique ID of the service request created.
      status:
        type: boolean
        description: The current status of the service request.
      statusNotes:
        type: string
        description:
          Explanation of why status was changed to current state or more details
          on current status than conveyed with status alone.
      serviceName:
        type: string
        description: The human readable name of the service request type.
      serviceCode:
        type: string
        description: The unique identifier for the service request type.
      description:
        type: string
        description: A full description of the request or report submitted.
      agencyResponsible:
        type: string
        description:
          The agency responsible for fulfilling or otherwise addressing the
          service request.
      serviceNotice:
        type: string
        description:
          Information about the action expected to fulfill the request or
          otherwise address the information reported.
      requestedDatetime:
        type: string
        description: The date and time when the service request was made.
      updatedDatetime:
        type: string
        description:
          The date and time when the service request was last modified. For
          requests with status=closed, this will be the date the request was
          closed.
      expectedDatetime:
        type: string
        description:
          The date and time when the service request can be expected to be
          fulfilled. This may be based on a service-specific service level
          agreement.
      address:
        type: string
        description: Human readable address or description of location.
      addressId:
        type: string
        description:
          The internal address ID used by a jurisdictions master address
          repository or other addressing system.
      zipcode:
        type: integer
        description: The postal code for the location of the service request.
      lat:
        type: integer
        description: Latitude of the location.
      long:
        type: integer
        description: Longitude of location.
      mediaUrl:
        description: 'A set of URL''s to media associated with the request, eg an image or video.'
        type: array
        items:
          $ref: '#/definitions/Media'
      firstName:
        type: string
        description: The given name of the person submitting the request.
      lastName:
        type: string
        description: The family name of the person submitting the request.
      phone:
        type: string
        description: The phone number of the person submitting the request.
      email:
        type: string
        description: The email address of the person submitting the request.
      deviceId:
        type: string
        description:
          The unique device ID of the device submitting the request. This is
          usually only used for mobile devices.
      attribValues:
        description:
          Below is a list of possible keys and description of what they represent within Seva Request.
          **locationId:string --location id based on cross hierarchy id or lat/lng,
          **childLocationId:string--child location id based on cross hierarchy id,
          **locationName :string--name of the location,
          **positionId:string--Id of the position,
          **stateId:string--workflow id,
          **receivingMode:string--Originating channel for the request. Mobile, Desktop etc..,
          **userId:string--user id of the complainant. This can be different than logged in user,
          **receivingCenter:string--specify receiving-center when officials/employees register complaint on behalf of citizens,
          **complainantAddress:string--address of complainant in case of anonymous user,
          **startRating:integer--Feedback rating given by citizens,
          **complaintStatus:string--Status of the complaint like REGISTERED,FORWARDED,COMPLETED etc.,
          **escalationDate( date)--Escalation date for the complaint that will be used by indexing
        type: array
        items:
          $ref: '#/definitions/Value'
  ServiceReq:
    properties:
      requestInfo:
        allOf:
          - $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      service:
        $ref: '#/definitions/Service'
    type: object
###########################################################################              
  ServiceRes:
    properties:
      resposneInfo:
       allOf:
        - $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      services:
        type: array
        items:
          $ref: '#/definitions/Service'
    type: object
  SevaRequest:
    properties:
      requestInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      seva:
        $ref: '#/definitions/Seva'
    type: object
  SevaResponse:
    properties:
      responseInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      seva:
        type: array
        items:
          $ref: '#/definitions/Seva'
    type: object
  CountResponse:
    type: object
    properties:
      responseInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      count:
        type: integer
###########################################################################          
  ErrorRes:
    properties:
      responseInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      error:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
    type: object
    
  ServiceGroup:
    type: object
    properties:
      tenantId:
        type: string
        description: unique tenatId or ulbid
      name:
        type: string
        description: Category name of Complaint Type or Service Group.
      description:
        type: string
        description: Category of Complaint type or Service Group.
###########################################################################            
  ServiceGroupReq:
    type: object 
    properties:
      requestInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      serviceGroup:
        $ref: '#/definitions/ServiceGroup'
        
  ServiceGroupRes:
    type: object 
    properties:
      requestInfo:
        $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
      serviceGroups:
        type: array
        items:
          $ref: '#/definitions/ServiceGroup'
  Media:
    type: object
    properties:
      url:
        type: string
###########################################################################           
###########################################################################                
   #Receiving Code Definitions
  ReceivingModeTypeReq:
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        receivingmode:
          $ref: '#/definitions/ReceivingModeType'
      required:
        - RequestInfo
        - receivingmode
###########################################################################             
  ReceivingModeTypeRes:
      type: object
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        ReceivingModeTypes:
          type: array
          maximum: 20
          items:
            $ref: '#/definitions/ReceivingModeType'
            
  ReceivingModeType:
      type: object
      properties:
        id:
         type: integer
         format: int64
         description : Unique identifier of the entered type, typically defined by system.
        code:
          type: string
          description: unique code this can be assigned by user.
          maxLength: 64
        name: 
          type: string
          description: human readable name should be assigned by user.
          maxLength: 100
        description: 
          type: string
          description: human readable description should be assigned by user.
          maxLength: 100
        active:
          type: boolean
          format: varchar
          description: TRUE for active and FALSE for inactive.
        tenantId:
          type: string
          description: Unique Identifier of the tenant
        channel:
          type: string
          description: channel for identification to show in ui. 
          enum:
            - WEB
            - MOBILE
        auditDetails:
          $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
      required:
        - code
        - name
        - channel
        - tenantId
###########################################################################                  
  #Receiving Code Definitions
  ReceivingCenterTypeReq:
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        receivingcenter:
          $ref: '#/definitions/ReceivingCenterType'
      required:
        - RequestInfo
        - receivingcenter
    
  ReceivingCenterTypeRes:
      type: object
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        ReceivingCenterTypes:
          type: array
          maximum: 20
          items:
            $ref: '#/definitions/ReceivingCenterType'
###########################################################################                      
  ReceivingCenterType:
      type: object
      properties:
        id:
         type: integer
         format: int64
         description : Unique identifier of the entered type, typically defined by system.
        code:
          type: string
          description: unique code this can be assigned by user.
          maxLength: 64
        name: 
          type: string
          description: human readable name should be assigned by user.
          maxLength: 100
        description: 
          type: string
          description: human readable description should be assigned by user.
          maxLength: 100
        orderno: 
          type: integer
          format: int64
          description: orderno for sorting purpous..
        active:
          type: boolean
          format: varchar
          description: TRUE for active and FALSE for inactive.
        iscrnrequired:
          type: boolean
          format: varchar
          description: TRUE for to generate the crn number and FALSE for not generate the crn number.  
        tenantId:
          type: string
          description: Unique Identifier of the tenant
        auditDetails:
          $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
      required:
        - code
        - name
        - tenantId  
###########################################################################                  
    #Bulk Router Definitions
  RouterTypeReq:
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        routertype:
          $ref: '#/definitions/RouterType'
      required:
        - RequestInfo
        - routertype
###########################################################################              
  RouterTypeRes:
      type: object
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        RouterTypes:
          type: array
          maximum: 20
          items:
            $ref: '#/definitions/RouterType'
###########################################################################            
  RouterSearchRes:
      type: object
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        RouterTypes:
          type: array
          maximum: 20
          items:
            $ref: '#/definitions/RouterRes'          
###########################################################################           
  RouterRes:
      type: object
      properties:
        id:
         type: integer
         format: int64
         description : Unique identifier of the entered type, typically defined by system.
        grievancetype:
           $ref: '#/definitions/Service'
        boundary:
           $ref: "#/definitions/BoundaryIdType"
        position: 
          type: integer
          description: position id.
        tenantId:
          type: string
          description: Unique Identifier of the tenant
        auditDetails:
          $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
      required:
        - grievancetype
        - boundary
        - position
        - tenantId 
###########################################################################                 
  RouterType:
      type: object
      properties:
        id:
         type: integer
         format: int64
         description : Unique identifier of the entered type, typically defined by system.
        grievancetype:
          type: array
          items:
           $ref: '#/definitions/Service'
        boundary:
          type: array
          items:
           $ref: "#/definitions/BoundaryIdType"
        position: 
          type: integer
          description: position id.
        tenantId:
          type: string
          description: Unique Identifier of the tenant
        auditDetails:
          $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
      required:
        - grievancetype
        - boundary
        - position
        - tenantId 
###########################################################################                 
  OTPConfig:
      type: object
      properties:
        tenantId:
         type: string 
         description : Unique Identifier of the tenant.
        otpEnabledForAnonymousComplaint:
          type: boolean
          description : Boolean identifier to confirm the enabled status.
      required:
        - tenantId
        - otpEnabledForAnonymousComplaint
###########################################################################                  
  BoundaryIdType:
      type: object
      properties:
        boundarytype:
          type: integer
          description: boundary id. 
###########################################################################                    
  OTPConfigReq:
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        otpConfig:
          $ref: '#/definitions/OTPConfig'
      required:
        - RequestInfo
        - otpConfig
###########################################################################              
  OTPConfigRes:
      type: object
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        otgConfigs:
          type: array
          maximum: 20
          items:
            $ref: '#/definitions/OTPConfig'
  
###########################################################################              
    #Escalation Time Definitions
  EscalationTimeTypeReq:
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        escalationtimetype:
          $ref: '#/definitions/EscalationTimeType'
      required:
        - RequestInfo
        - escalationtimetype
###########################################################################              
  EscalationTimeTypeRes:
      type: object
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        EscalationTimeType:
          type: array
          maximum: 20
          items:
            $ref: '#/definitions/EscalationTimeType'
###########################################################################                      
  EscalationTimeType:
      type: object
      properties:
        id:
         type: integer
         format: int64
         description : Unique identifier of the entered type, typically defined by system.
        grievancetype:
          $ref: '#/definitions/Service'
        noofhours: 
          type: integer
          description: no of hours for the complaint id.
        designation: 
          type: integer
          description: designation id.
        active:
          type: boolean
          format: varchar
          description: TRUE for active and FALSE for inactive.
        tenantId:
          type: string
          description: Unique Identifier of the tenant
        auditDetails:
          $ref: "https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/AuditDetails"
      required:
        - grievancetype
        - noofhours
        - designation
        - tenantId      
#####################################################################################
  DraftCreateRequest:
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        serviceCode: 
          type: string
          description: service code.
        tenantId:
          type: string
          description: Unique Identifier of the tenant
        draft:
          properties:
           map:
            type: object
            additionalProperties:
              type: string
          description: json to be saved.
      required:
        - tenantId     
        - serviceCode
        - draft
#####################################################################################
  DraftCreateResponse:
      type: object
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        id:
         type: integer
         format: int64
         description : id of the draft saved.
#####################################################################################
  DraftSearchResponse:
      type: object
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        drafts:
          type: array
          items:
            $ref: '#/definitions/draft'
#####################################################################################
  draft:
      type: object
      properties:
        id:
         type: integer
         format: int64
         description : id of the draft saved.
        draft:
          properties:
           map:
            type: object
            additionalProperties:
              type: string
          description: json to be saved.
#####################################################################################
  DraftUpdateRequest:
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        id:
         type: integer
         format: int64
         description : id of the draft saved.
        draft:
          properties:
           map:
            type: object
            additionalProperties:
              type: string
          description: json to be saved.
      required:
        - id
        - draft
#####################################################################################
  DraftResponse:
      type: object
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        isSuccessful:
          type: boolean
          description: return true if draft saved else return false
#####################################################################################
  DraftDeleteRequest:
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        ids:
          type: array
          items:
            $ref: '#/definitions/draftIds'
      required:
        - ids
#####################################################################################
  draftIds:
      type: object
      properties:
        id:
         type: integer
         format: int64
         description : id of the draft saved.
#####################################################################################        
